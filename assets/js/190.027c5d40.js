(window.webpackJsonp=window.webpackJsonp||[]).push([[190],{586:function(a,t,s){"use strict";s.r(t);var n=s(56),r=Object(n.a)({},(function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"mybatis源码解析-事务管理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mybatis源码解析-事务管理"}},[a._v("#")]),a._v(" Mybatis源码解析：事务管理")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://img-blog.csdnimg.cn/5f5060718db7424a8fe190eac8df6049.jpg?",alt:"在这里插入图片描述"}})]),a._v(" "),s("h2",{attrs:{id:"mybatis事务管理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mybatis事务管理"}},[a._v("#")]),a._v(" Mybatis事务管理")]),a._v(" "),s("p",[a._v("我们可以在mybatis-config.xml中配置事务管理器的实现")]),a._v(" "),s("div",{staticClass:"language-xml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("transactionManager")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[a._v("type")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')]),a._v("JDBC"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("/>")])]),a._v("\n")])])]),s("p",[a._v("当值为JDBC时，事务管理实现类为JdbcTransaction，底层利用数据库的Connection来管理事务")]),a._v(" "),s("p",[a._v("当值为MANAGED时，事务管理实现类为ManagedTransactionFactory，但它对事务的管理是一个空实现，将事务管理交给外部容器\n"),s("img",{attrs:{src:"https://img-blog.csdnimg.cn/866089c9218f4385b53a71a401b4231e.png?",alt:"在这里插入图片描述"}}),a._v("\nJdbcTransaction")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://img-blog.csdnimg.cn/8e5c8a09604840278b3ab563a4c6e4d0.png?",alt:"在这里插入图片描述"}}),a._v("\nManagedTransaction")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://img-blog.csdnimg.cn/82cac19738b049c09cd9f0e05018a241.png",alt:"在这里插入图片描述"}})]),a._v(" "),s("h2",{attrs:{id:"和spring整合后的事务管理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#和spring整合后的事务管理"}},[a._v("#")]),a._v(" 和Spring整合后的事务管理")]),a._v(" "),s("p",[a._v("mybatis和spring整合创建TransactionFactory的时候，如果没有设置，则会将其设置为SpringManagedTransactionFactory")]),a._v(" "),s("p",[a._v("org.mybatis.spring.SqlSessionFactoryBean#buildSqlSessionFactory\n"),s("img",{attrs:{src:"https://img-blog.csdnimg.cn/994889f54ad146df8a6b603d61bc25b3.png",alt:"在这里插入图片描述"}}),a._v(" "),s("img",{attrs:{src:"https://img-blog.csdnimg.cn/b1415b7a7d874859b761fe10c9d287d0.png?",alt:"请添加图片描述"}}),a._v("\n但是真正执行事务的时候，一般情况下不会由SpringManagedTransaction来执行，因为我们一般都把事务交给spring来管理，当把事务交给spring管理的时候this.isConnectionTransactional=true，因此commit和rollback相当于是空实现\n"),s("img",{attrs:{src:"https://img-blog.csdnimg.cn/67e02cd16d5d4d69b1320e6bc86f3e7c.png?",alt:"在这里插入图片描述"}}),a._v("\nmybatis和spring整合后，一般还是由spring框架中的DataSourceTransactionManager来进行事务管理\n"),s("img",{attrs:{src:"https://img-blog.csdnimg.cn/cb2630246d9c4023a82492bba19327e7.png?",alt:"在这里插入图片描述"}}),a._v("\n如果你对spring进行事务管理不清楚的话，等我后续的spring专栏")])])}),[],!1,null,null,null);t.default=r.exports}}]);