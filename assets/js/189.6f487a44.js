(window.webpackJsonp=window.webpackJsonp||[]).push([[189],{585:function(t,s,a){"use strict";a.r(s);var n=a(56),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"mybatis源码解析-为什么一级缓存和二级缓存都不建议使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mybatis源码解析-为什么一级缓存和二级缓存都不建议使用"}},[t._v("#")]),t._v(" Mybatis源码解析：为什么一级缓存和二级缓存都不建议使用？")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20200227142357820.jpg?",alt:"在这里插入图片描述"}})]),t._v(" "),a("h2",{attrs:{id:"缓存是在哪起作用的"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#缓存是在哪起作用的"}},[t._v("#")]),t._v(" 缓存是在哪起作用的？")]),t._v(" "),a("p",[t._v("个人认为mybatis一级缓存和二级缓存并不是一个很好的设计，工作中我基本上也不会使用一级缓存和二级缓存，因为一旦使用不当会造成很多问题，所以我们今天就来看看到底会有什么问题？")]),t._v(" "),a("p",[t._v("上一节我们介绍了Executor会调用StatementHandler执行sql，起一个承上启下的作用。\n"),a("img",{attrs:{src:"https://img-blog.csdnimg.cn/2e637111a62a46e2ba7a012da76a91bc.png?",alt:"在这里插入图片描述"}})]),t._v(" "),a("p",[t._v("Executor的设计是一个典型的装饰者模式，SimpleExecutor，ReuseExecutor是具体实现类，而CachingExecutor是装饰器类。")]),t._v(" "),a("p",[t._v("可以看到具体组件实现类有一个父类BaseExecutor，而这个父类是一个模板模式的典型应用，操作一级缓存的操作都在这个类中，而具体的操作数据库的功能则让子类去实现。")]),t._v(" "),a("p",[a("strong",[t._v("二级缓存则是一个装饰器类，当开启二级缓存的时候，会使用CachingExecutor对具体实现类进行装饰，所以查询的时候一定是先查询二级缓存再查询一级缓存")]),t._v(" "),a("img",{attrs:{src:"https://img-blog.csdnimg.cn/dff1e1ac51bf40a99c2dde0d04179dd7.png?",alt:"在这里插入图片描述"}})]),t._v(" "),a("p",[a("strong",[t._v("那么一级缓存和二级缓存有什么区别呢？")])]),t._v(" "),a("h2",{attrs:{id:"一级缓存"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一级缓存"}},[t._v("#")]),t._v(" 一级缓存")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20200227125936919.png?",alt:"在这里插入图片描述"}})]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// BaseExecutor")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("protected")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("PerpetualCache")]),t._v(" localCache"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("一级缓存是BaseExecutor中的一个成员变量localCache（对HashMap的一个简单封装），因此一级缓存的生命周期与SqlSession相同，如果你对SqlSession不熟悉，你可以把它类比为JDBC编程中的Connection，即数据库的一次会话。")]),t._v(" "),a("p",[a("strong",[t._v("一级缓存和二级缓存key的构建规则是一致的，都是一个CacheKey对象，因为Mybatis中涉及动态SQL等多方面的因素，缓存的key不能仅仅通过String来表示")])]),t._v(" "),a("p",[t._v("当执行sql的如下4个条件都相等时，CacheKey才会相等")]),t._v(" "),a("ol",[a("li",[t._v("mappedStatment的id")]),t._v(" "),a("li",[t._v("指定查询结构集的范围")]),t._v(" "),a("li",[t._v("查询所使用SQL语句")]),t._v(" "),a("li",[t._v("用户传递给SQL语句的实际参数值")])]),t._v(" "),a("p",[a("strong",[t._v("当查询的时候先从缓存中查询，如果查询不到的话再从数据库中查询")])]),t._v(" "),a("p",[t._v("org.apache.ibatis.executor.BaseExecutor#query\n"),a("img",{attrs:{src:"https://img-blog.csdnimg.cn/0d6856a84a144819bfed835f0df63038.png",alt:"在这里插入图片描述"}}),a("img",{attrs:{src:"https://img-blog.csdnimg.cn/4fe65f2fb02143568f6ce68bbc4d445b.png",alt:"在这里插入图片描述"}}),t._v("\n当使用同一个SqlSession执行更新操作时，会先清空一级缓存。因此一级缓存中内容被使用的概率也很低\n"),a("img",{attrs:{src:"https://img-blog.csdnimg.cn/30992364042b489cb38916f41b32c357.png",alt:"在这里插入图片描述"}})]),t._v(" "),a("h2",{attrs:{id:"一级缓存测试"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一级缓存测试"}},[t._v("#")]),t._v(" 一级缓存测试")]),t._v(" "),a("p",[a("strong",[t._v("看到美团技术团队上关于一级缓存和二级缓存的一些测试写的挺不错的，就直接引用过来了")])]),t._v(" "),a("p",[t._v("原文地址：https://tech.meituan.com/2018/01/19/mybatis-cache.html\n测试代码github地址：https://github.com/kailuncen/mybatis-cache-demo")]),t._v(" "),a("p",[t._v("接下来通过实验，了解MyBatis一级缓存的效果，每个单元测试后都请恢复被修改的数据。")]),t._v(" "),a("p",[t._v("首先是创建示例表student，创建对应的POJO类和增改的方法，具体可以在entity包和mapper包中查看。")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CREATE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token identifier"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("student"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token identifier"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("unsigned")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AUTO_INCREMENT")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token identifier"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("varchar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("COLLATE")]),t._v(" utf8_bin "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DEFAULT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token identifier"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("age"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("tinyint")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("unsigned")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DEFAULT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("PRIMARY")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("KEY")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token identifier"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ENGINE")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("InnoDB")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AUTO_INCREMENT")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DEFAULT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CHARSET")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("utf8 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("COLLATE")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("utf8_bin"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("在以下实验中，id为1的学生名称是凯伦")]),t._v(" "),a("p",[a("strong",[t._v("实验1")])]),t._v(" "),a("p",[t._v("开启一级缓存，范围为会话级别，调用三次getStudentById，代码如下所示：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/4be9cf10f2aa4619847d1b247878a248.png",alt:"在这里插入图片描述"}}),t._v("\n执行结果：\n"),a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20200227102515212.png?",alt:"在这里插入图片描述"}}),t._v("\n我们可以看到，只有第一次真正查询了数据库，后续的查询使用了一级缓存。")]),t._v(" "),a("p",[a("strong",[t._v("实验2")])]),t._v(" "),a("p",[t._v("增加了对数据库的修改操作，验证在一次数据库会话中，如果对数据库发生了修改操作，一级缓存是否会失效。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/e86e439a3ca5424eb892d812f81fc59d.png",alt:"在这里插入图片描述"}}),t._v("\n执行结果：\n"),a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20200227102548389.png?",alt:"在这里插入图片描述"}}),t._v("\n我们可以看到，在修改操作后执行的相同查询，查询了数据库，一级缓存失效。")]),t._v(" "),a("p",[a("strong",[t._v("实验3")])]),t._v(" "),a("p",[t._v("开启两个SqlSession，在sqlSession1中查询数据，使一级缓存生效，在sqlSession2中更新数据库，验证一级缓存只在数据库会话内部共享。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/f9a07c1390d440c99c0b148d97dd783f.png?",alt:"在这里插入图片描述"}}),t._v("\n输出如下\n"),a("img",{attrs:{src:"https://img-blog.csdnimg.cn/a666c07a899a4e07a2fe2bb7de946503.png?",alt:"在这里插入图片描述"}}),t._v("\nsqlSession1和sqlSession2读的时相同的数据，但是都查询了数据库，说明了"),a("strong",[t._v("一级缓存只在数据库会话层面共享")])]),t._v(" "),a("p",[t._v("sqlSession2更新了id为1的学生的姓名，从凯伦改为了小岑，但sqlSession1之后的查询中，id为1的学生的名字还是凯伦，出现了脏数据，也证明了之前的设想，一级缓存只在数据库会话层面共享")]),t._v(" "),a("p",[a("strong",[t._v("MyBatis的一级缓存最大范围是SqlSession内部，有多个SqlSession或者分布式的环境下，数据库写操作会引起脏数据，建议设定缓存级别为Statement，即进行如下配置")])]),t._v(" "),a("div",{staticClass:"language-xml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-xml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("setting")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("localCacheScope"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("value")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("STATEMENT"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n")])])]),a("p",[t._v("原因也很简单，看BaseExecutor的query()方法，当配置成STATEMENT时，每次查询完都会清空缓存\n"),a("img",{attrs:{src:"https://img-blog.csdnimg.cn/ef8a5f6b4a49488a83fd2599dc2cb592.png",alt:"在这里插入图片描述"}}),t._v(" "),a("strong",[t._v("看到这你可能会想，我用mybatis后没设置这个参数啊，好像也没发生脏读的问题啊，其实是因为你和spring整合了")])]),t._v(" "),a("p",[t._v("当mybatis和spring整合后（整合的相关知识后面还有一节）")]),t._v(" "),a("ol",[a("li",[t._v("在未开启事务的情况之下，每次查询，spring都会关闭旧的sqlSession而创建新的sqlSession，因此此时的一级缓存是没有起作用的")]),t._v(" "),a("li",[t._v("在开启事务的情况之下，spring使用threadLocal获取当前线程绑定的同一个sqlSession，因此此时一级缓存是有效的，当事务执行完毕，会关闭sqlSession")])]),t._v(" "),a("p",[a("strong",[t._v("当mybatis和spring整合后，未开启事务的情况下，不会有任何问题，因为一级缓存没有生效。当开启事务的情况下，可能会有问题，由于一级缓存的存在，在事务内的查询隔离级别是可重复读，即使你数据库的隔离级别设置的是提交读")])]),t._v(" "),a("h2",{attrs:{id:"二级缓存"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二级缓存"}},[t._v("#")]),t._v(" 二级缓存")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20200227125734570.png?",alt:"在这里插入图片描述"}})]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Configuration")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("protected")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Map")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Cache")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" caches "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StrictMap")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Caches collection"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[a("strong",[t._v("而二级缓存是Configuration对象的成员变量，因此二级缓存的生命周期是整个应用级别的。并且是基于namespace构建的，一个namesapce构建一个缓存")])]),t._v(" "),a("p",[a("strong",[t._v("二级缓存不像一级缓存那样查询完直接放入一级缓存，而是要等事务提交时才会将查询出来的数据放到二级缓存中。")])]),t._v(" "),a("p",[t._v("因为如果事务1查出来直接放到二级缓存，此时事务2从二级缓存中拿到了事务1缓存的数据，但是事务1回滚了，此时事务2不就发生了脏读了吗？")]),t._v(" "),a("p",[a("strong",[t._v("二级缓存的相关配置有如下3个")])]),t._v(" "),a("p",[a("strong",[t._v("1.mybatis-config.xml")])]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("settings"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("setting name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"cacheEnabled"')]),t._v(" value"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"true"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("settings"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),a("p",[t._v("这个是二级缓存的总开关，只有当该配置项设置为true时，后面两项的配置才会有效果")]),t._v(" "),a("p",[t._v("从Configuration类的newExecutor方法可以看到，当cacheEnabled为true，就用缓存装饰器装饰一下具体组件实现类，从而让二级缓存生效\n"),a("img",{attrs:{src:"https://img-blog.csdnimg.cn/dff1e1ac51bf40a99c2dde0d04179dd7.png?",alt:"在这里插入图片描述"}}),t._v(" "),a("strong",[t._v("2.mapper映射文件中")]),t._v("\nmapper映射文件中如果配置了<cache>和<cache-ref>中的任意一个标签，则表示开启了二级缓存功能，没有的话表示不开启")]),t._v(" "),a("div",{staticClass:"language-xml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-xml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("cache")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("type")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("eviction")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("FIFO"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("size")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("512"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("cache")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("p",[t._v("二级缓存的部分配置如上，type就是填写一个全类名，用来指定二级缓存的实现类，这个实现类需要实现Cache接口，默认是PerpetualCache（你可以利用这个属性将mybatis二级缓存和Redis，Memcached等缓存组件整合在一起）")]),t._v(" "),a("p",[t._v("org.apache.ibatis.builder.MapperBuilderAssistant#useNewCache\n"),a("img",{attrs:{src:"https://img-blog.csdnimg.cn/6f71c8fd6d1948279beef5c404c84f0a.png",alt:"在这里插入图片描述"}})]),t._v(" "),a("p",[t._v("这个eviction表示缓存清空策略，可填选项如下")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("选项")]),t._v(" "),a("th",[t._v("解释")]),t._v(" "),a("th",[t._v("装饰器类")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("LRU")]),t._v(" "),a("td",[t._v("最近最少使用的:移除最长时间不被使用的对象")]),t._v(" "),a("td",[t._v("LruCache")])]),t._v(" "),a("tr",[a("td",[t._v("FIFO")]),t._v(" "),a("td",[t._v("先进先出:按对象进入缓存的顺序来移除它们")]),t._v(" "),a("td",[t._v("FifoCache")])]),t._v(" "),a("tr",[a("td",[t._v("SOFT")]),t._v(" "),a("td",[t._v("软引用:移除基于垃圾回收器状态和软引用规则的对象")]),t._v(" "),a("td",[t._v("SoftCache")])]),t._v(" "),a("tr",[a("td",[t._v("WEAK")]),t._v(" "),a("td",[t._v("弱引用:更积极地移除基于垃圾收集器状态和弱引用规则的对象")]),t._v(" "),a("td",[t._v("WeakCache")])])])]),t._v(" "),a("p",[t._v("典型的装饰者模式的实现，换缓存清空策略就是换装饰器。\n"),a("img",{attrs:{src:"https://img-blog.csdnimg.cn/4dea8d8aa5ed4873b6c36f26a21070e8.png?",alt:"在这里插入图片描述"}}),t._v(" "),a("strong",[t._v("3.<select>节点中的useCache属性")])]),t._v(" "),a("p",[t._v("该属性表示查询产生的结果是否要保存的二级缓存中，useCache属性的默认值为true，这个配置可以将二级缓存细分到语句级别")]),t._v(" "),a("h3",{attrs:{id:"测试二级缓存"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#测试二级缓存"}},[t._v("#")]),t._v(" 测试二级缓存")]),t._v(" "),a("p",[t._v("二级缓存是基于namespace实现的，即一个mapper映射文件用一个缓存")]),t._v(" "),a("p",[t._v("在本实验中，id为1的学生名称初始化为点点。")]),t._v(" "),a("p",[a("strong",[t._v("实验1")])]),t._v(" "),a("p",[t._v("测试二级缓存效果，不提交事务，sqlSession1查询完数据后，sqlSession2相同的查询是否会从缓存中获取数据。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/6c7cb22f2d804fea901d297b2ae27bc6.png",alt:"在这里插入图片描述"}})]),t._v(" "),a("p",[t._v("执行结果：\n"),a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20200227103940325.png?",alt:"在这里插入图片描述"}}),t._v("\n我们可以看到，当sqlsession没有调用commit()方法时，二级缓存并没有起到作用。")]),t._v(" "),a("p",[a("strong",[t._v("实验2")])]),t._v(" "),a("p",[t._v("测试二级缓存效果，当提交事务时，sqlSession1查询完数据后，sqlSession2相同的查询是否会从缓存中获取数据。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/d5222253b4a04310bbe4d1f67137f190.png?",alt:"在这里插入图片描述"}}),t._v(" "),a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20200227104027877.png?",alt:"在这里插入图片描述"}}),t._v("\n从图上可知，sqlsession2的查询，使用了缓存，缓存的命中率是0.5。")]),t._v(" "),a("h3",{attrs:{id:"实验3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实验3"}},[t._v("#")]),t._v(" 实验3")]),t._v(" "),a("p",[t._v("测试update操作是否会刷新该namespace下的二级缓存。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/fb230ad51afb4b469e72eee6a33164e6.png?",alt:"在这里插入图片描述"}}),t._v(" "),a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20200227104059760.png?",alt:"在这里插入图片描述"}}),t._v("\n我们可以看到，在sqlSession3更新数据库，并提交事务后，sqlsession2的StudentMapper namespace下的查询走了数据库，没有走Cache。")]),t._v(" "),a("p",[a("strong",[t._v("实验4")])]),t._v(" "),a("p",[t._v("验证MyBatis的二级缓存不适应用于映射文件中存在多表查询的情况。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/219e500474854a4ea3d8463c46a6a30a.png?",alt:"在这里插入图片描述"}}),t._v("\ngetStudentByIdWithClassInfo的定义如下")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/a3b8c3eaff3e4f469464f875026d08aa.png",alt:"在这里插入图片描述"}}),t._v("\n通常我们会为每个单表创建单独的映射文件，由于MyBatis的二级缓存是基于namespace的，多表查询语句所在的namspace无法感应到其他namespace中的语句对多表查询中涉及的表进行的修改，引发脏数据问题。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/8b7a43fc8ea346489784a4b7ce99c7dd.png?",alt:"在这里插入图片描述"}}),t._v("\n执行结果：\n"),a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20200227104138169.png?",alt:"在这里插入图片描述"}})]),t._v(" "),a("p",[t._v("在这个实验中，我们引入了两张新的表，一张class，一张classroom。class中保存了班级的id和班级名，classroom中保存了班级id和学生id。我们在StudentMapper中增加了一个查询方法getStudentByIdWithClassInfo，用于查询学生所在的班级，涉及到多表查询。在ClassMapper中添加了updateClassName，根据班级id更新班级名的操作。")]),t._v(" "),a("p",[t._v("当sqlsession1的studentmapper查询数据后，二级缓存生效。保存在StudentMapper的namespace下的cache中。当sqlSession3的classMapper的updateClassName方法对class表进行更新时，updateClassName不属于StudentMapper的namespace，所以StudentMapper下的cache没有感应到变化，没有刷新缓存。当StudentMapper中同样的查询再次发起时，从缓存中读取了脏数据。")]),t._v(" "),a("p",[a("strong",[t._v("实验5")])]),t._v(" "),a("p",[t._v("为了解决实验4的问题呢，可以使用Cache ref，让ClassMapper引用StudenMapper命名空间，这样两个映射文件对应的SQL操作都使用的是同一块缓存了。")]),t._v(" "),a("p",[t._v("mapper文件中的配置如下")]),t._v(" "),a("div",{staticClass:"language-xml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-xml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("cache-ref")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("namespace")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("mapper.StudentMapper"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n")])])]),a("p",[t._v("执行结果：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20200227104158923.png?",alt:"在这里插入图片描述"}}),t._v("\n不过这样做的后果是，缓存的粒度变粗了，多个Mapper namespace下的所有操作都会对缓存使用造成影响。")]),t._v(" "),a("h2",{attrs:{id:"总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),a("p",[t._v("mybatis的一级缓存和二级缓存都是基于本地的，分布式环境下必然会出现脏读。")]),t._v(" "),a("p",[t._v("二级缓存可以通过实现Cache接口，来集中管理缓存，避免脏读，但是有一定的开发成本，并且在多表查询时，使用不当极有可能会出现脏数据")]),t._v(" "),a("p",[a("strong",[t._v("除非对性能要求特别高，否则一级缓存和二级缓存都不建议使用")])])])}),[],!1,null,null,null);s.default=e.exports}}]);