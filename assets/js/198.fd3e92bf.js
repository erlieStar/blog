(window.webpackJsonp=window.webpackJsonp||[]).push([[198],{594:function(t,s,a){"use strict";a.r(s);var e=a(56),r=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"mysql实战-mysql有哪些锁"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mysql实战-mysql有哪些锁"}},[t._v("#")]),t._v(" MySQL实战：MySQL有哪些锁？")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/4d8d9eaf53e44b3493cf55e3a668c71a.jpg?",alt:"请添加图片描述"}})]),t._v(" "),a("h2",{attrs:{id:"并发场景"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#并发场景"}},[t._v("#")]),t._v(" 并发场景")]),t._v(" "),a("p",[t._v("当我们学习MySQL的时候，经常会提到事物的四大特性，原子性，一致性，隔离性，持久性。那么隔离性是如何实现的？")]),t._v(" "),a("p",[a("strong",[t._v("隔离的本质就是控制并发")]),t._v("，如果SQL语句就是串行执行的。那么数据库的四大特性中就不会有隔离性这个概念了，也就不会有脏读，不可重复读，幻读等各种问题了")]),t._v(" "),a("p",[a("strong",[t._v("对数据库的各种并发操作，只有如下四种，写写，读读，读写和写读")])]),t._v(" "),a("h3",{attrs:{id:"写-写"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#写-写"}},[t._v("#")]),t._v(" 写-写")]),t._v(" "),a("p",[t._v("事务A更新一条记录的时候，事务B能同时更新同一条记录吗？")]),t._v(" "),a("p",[t._v("答案肯定是不能的，不然就会造成"),a("strong",[t._v("脏写")]),t._v("问题，那如何避免脏写呢？答案就是"),a("strong",[t._v("加锁")])]),t._v(" "),a("h3",{attrs:{id:"读-读"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#读-读"}},[t._v("#")]),t._v(" 读-读")]),t._v(" "),a("p",[t._v("MySQL读操作默认情况下不会加锁，所以可以并行的读")]),t._v(" "),a("h3",{attrs:{id:"读-写-和-写-读"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#读-写-和-写-读"}},[t._v("#")]),t._v(" 读-写 和 写-读")]),t._v(" "),a("p",[a("strong",[t._v("基于各种场景对并发操作容忍程度不同，MySQL就搞了个隔离性的概念")]),t._v("。你自己根据业务场景选择隔离级别。")]),t._v(" "),a("p",[a("strong",[t._v("MySQL的隔离性是通过锁和MVCC来实现的")])]),t._v(" "),a("p",[t._v("√ 为会发生，×为不会发生")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("隔离级别")]),t._v(" "),a("th",[t._v("脏读")]),t._v(" "),a("th",[t._v("不可重复读")]),t._v(" "),a("th",[t._v("幻读")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("read uncommitted（未提交读）")]),t._v(" "),a("td",[t._v("√")]),t._v(" "),a("td",[t._v("√")]),t._v(" "),a("td",[t._v("√")])]),t._v(" "),a("tr",[a("td",[t._v("read committed（提交读）")]),t._v(" "),a("td",[t._v("×")]),t._v(" "),a("td",[t._v("√")]),t._v(" "),a("td",[t._v("√")])]),t._v(" "),a("tr",[a("td",[t._v("repeatable read（可重复读）")]),t._v(" "),a("td",[t._v("×")]),t._v(" "),a("td",[t._v("×")]),t._v(" "),a("td",[t._v("√")])]),t._v(" "),a("tr",[a("td",[t._v("serializable （可串行化）")]),t._v(" "),a("td",[t._v("×")]),t._v(" "),a("td",[t._v("×")]),t._v(" "),a("td",[t._v("×")])])])]),t._v(" "),a("p",[t._v("按照粒度分，MySQL锁可以分为全局锁，表级锁，行锁")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/direct/249a74d88dae406b8e04e9ea917466d1.png",alt:"在这里插入图片描述"}}),t._v("\nInnoDB存储引擎中有如下两种类型的行级锁")]),t._v(" "),a("ol",[a("li",[a("strong",[t._v("共享锁")]),t._v("（Shared Lock，简称S锁），在事务需要读取一条记录时，需要先获取改记录的S锁")]),t._v(" "),a("li",[a("strong",[t._v("排他锁")]),t._v("（Exclusive Lock，简称X锁），在事务要改动一条记录时，需要先获取该记录的X锁")])]),t._v(" "),a("p",[t._v("如果事务T1获取了一条记录的S锁之后，事务T2也要访问这条记录。如果事务T2想再获取这个记录的S锁，可以成功，这种情况称为锁兼容，如果事务T2想再获取这个记录的X锁，那么此操作会被阻塞，直到事务T1提交之后将S锁释放掉")]),t._v(" "),a("p",[t._v("如果事务T1获取了一条记录的X锁之后，那么不管事务T2接着想获取该记录的S锁还是X锁都会被阻塞，直到事务1提交，这种情况称为锁不兼容。")]),t._v(" "),a("p",[a("strong",[t._v("多个事务可以同时读取记录，即共享锁之间不互斥，但共享锁会阻塞排他锁。排他锁之间互斥")])]),t._v(" "),a("p",[t._v("S锁和X锁的兼容关系")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("兼容性")]),t._v(" "),a("th",[t._v("X锁")]),t._v(" "),a("th",[t._v("S锁")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("X锁")]),t._v(" "),a("td",[t._v("不兼容")]),t._v(" "),a("td",[t._v("不兼容")])]),t._v(" "),a("tr",[a("td",[t._v("S锁")]),t._v(" "),a("td",[t._v("不兼容")]),t._v(" "),a("td",[t._v("兼容")])])])]),t._v(" "),a("h2",{attrs:{id:"全局锁"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#全局锁"}},[t._v("#")]),t._v(" 全局锁")]),t._v(" "),a("p",[t._v("执行如下语句，可以使用全局锁。")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[t._v("flush "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("tables")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("with")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("read")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("lock")]),t._v("\n")])])]),a("p",[t._v("执行完毕，整个数据库就处于只读状态了，这时其他线程执行如下操作，都会被阻塞")]),t._v(" "),a("p",[t._v("对数据库的增删改操作，比如insert delete update语句\n对表结构的更改操作，比如alter table，drop table等语句")]),t._v(" "),a("p",[t._v("要释放全局锁，则要执行这条命令")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("unlock")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("tables")]),t._v("\n")])])]),a("h2",{attrs:{id:"表级锁"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#表级锁"}},[t._v("#")]),t._v(" 表级锁")]),t._v(" "),a("h3",{attrs:{id:"表锁"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#表锁"}},[t._v("#")]),t._v(" 表锁")]),t._v(" "),a("p",[a("strong",[t._v("表锁也有S锁和X锁之分")])]),t._v(" "),a("p",[t._v("在系统变量autocommit=0，innodb_table_locks = 1时，手动获取InnoDB存储引擎提供的表t的S锁或者X锁，可以这么写")]),t._v(" "),a("p",[t._v("对表t加表级别的S锁")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("lock")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("tables")]),t._v(" t "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("read")]),t._v("\n")])])]),a("p",[t._v("对表t加表级别的X锁")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("lock")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("tables")]),t._v(" t "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("write")]),t._v("\n")])])]),a("p",[t._v("使用如下命令，会释放当前会话的所有表锁，当会话退出后，也会释放所有表锁")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("unlock")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("tables")]),t._v("\n")])])]),a("p",[a("strong",[t._v("如果一个事务给表加了S锁，那么")])]),t._v(" "),a("ul",[a("li",[t._v("别的事务可以继续获得该表的S锁")]),t._v(" "),a("li",[t._v("别的事务可以继续获得表中某些记录的S锁")]),t._v(" "),a("li",[t._v("别的事务不可以继续获得该表的X锁")]),t._v(" "),a("li",[t._v("别的事务不可以继续获得表中某些记录的X锁")])]),t._v(" "),a("p",[a("strong",[t._v("如果一个事务给表加了X锁，那么")])]),t._v(" "),a("ul",[a("li",[t._v("别的事务不可以继续获得该表的S锁")]),t._v(" "),a("li",[t._v("别的事务不可以继续获得表中某些记录的S锁")]),t._v(" "),a("li",[t._v("别的事务不可以继续获得该表的X锁")]),t._v(" "),a("li",[t._v("别的事务不可以继续获得表中某些记录的X锁")])]),t._v(" "),a("h3",{attrs:{id:"元数据锁"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#元数据锁"}},[t._v("#")]),t._v(" 元数据锁")]),t._v(" "),a("p",[t._v("我们不需要显示的使用元数据锁（MDL），因为当我们对数据库表进行操作时，会自动给这个表加上MDL")]),t._v(" "),a("ul",[a("li",[t._v("当对表进行增删改查时，加的是MDL读锁")]),t._v(" "),a("li",[t._v("当对表结构进行变更时，假的是MDL写锁")])]),t._v(" "),a("p",[t._v("在对表执行一些诸如ALTER TABLE，DROP TABLE这类的DDL语句时，会对这个表加MDL写锁，因此其他事务对这个表执行诸如SELECT INSERT UPDATE DELETE的语句会发生阻塞")]),t._v(" "),a("p",[a("strong",[t._v("所以修改线上的表时一定要小心，因为会使大量事务阻塞")]),t._v("，目前有很多成熟的修改线上表的方法，不再赘述")]),t._v(" "),a("h3",{attrs:{id:"意向锁"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#意向锁"}},[t._v("#")]),t._v(" 意向锁")]),t._v(" "),a("p",[t._v("在表级别还有IS锁（意向共享锁）和IX锁（意向排他锁）")]),t._v(" "),a("p",[a("strong",[t._v("当事物给一条记录上S锁时，同时会给记录对应的表上IS锁（IS锁是表级锁），当事务给一条记录上X锁时，同时会给记录对应表上IX锁（IX锁是表级别锁）")])]),t._v(" "),a("p",[t._v("IS锁和IX锁的使命是为了后续在加表级别的S锁和X锁时，判断表中是否有已经被加锁的记录，避免用遍历的方式来查看表中有没有上锁的记录")]),t._v(" "),a("h3",{attrs:{id:"auto-inc锁"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#auto-inc锁"}},[t._v("#")]),t._v(" AUTO-INC锁")]),t._v(" "),a("p",[t._v("在使用MySQL过程中，我们可以为表的某个列添加AUTO_INCREMENT属性，之后在插入记录的时候，可以不指定该列的值列，系统为他赋上递增的值")]),t._v(" "),a("p",[t._v("如下面这个表")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CREATE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" t "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    id "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AUTO_INCREMENT")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    c "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VARCHAR")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("PRIMARY")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("KEY")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Engine")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("InnoDB")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CHARSET")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("utf8"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INSERT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INTO")]),t._v(" t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VALUES")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'aa'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'bb'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("插入2条记录后，结果如下")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[t._v("mysql"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("----+------+")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" id "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" c    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("----+------+")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" aa   "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" bb   "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("----+------+")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("rows")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("in")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.00")]),t._v(" sec"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[a("strong",[t._v("MySQL自动给AUTO_INCREMENT修饰的列递增赋值的原理主要有如下两种方式")])]),t._v(" "),a("ol",[a("li",[t._v("采用AUTO-INC锁，插入语句时就在表级别加一个AUTO-INC锁，然后为每条待插入记录中AUTO_INCREMENT修饰的列分配递增的值，插入语句执行结束后，再把AUTO-INC锁释放掉（"),a("strong",[t._v("插入语句执行完释放锁，不是事务结束时")]),t._v("）。这样一个事务在持有AUTO-INC锁的过程中，其他事务的插入语句都要被阻塞，可以保证分配的递增值是连续的")]),t._v(" "),a("li",[t._v("采用一个轻量级的锁，在为插入语句生成AUTO_INCREMENT修饰列的值时获取一下这个轻量级锁，生成本次插入语句需要的AUTO_INCREMENT列的值之后，就把该轻量级锁释放掉，并不需要等到整个插入语句执行完才插入锁")])]),t._v(" "),a("p",[t._v("最后总结一下兼容性")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("兼容性")]),t._v(" "),a("th",[t._v("IS")]),t._v(" "),a("th",[t._v("IX")]),t._v(" "),a("th",[t._v("S")]),t._v(" "),a("th",[t._v("X")]),t._v(" "),a("th",[t._v("AUTO_INC")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("IS")]),t._v(" "),a("td",[t._v("兼容")]),t._v(" "),a("td",[t._v("兼容")]),t._v(" "),a("td",[t._v("兼容")]),t._v(" "),a("td",[t._v("不兼容")]),t._v(" "),a("td",[t._v("兼容")])]),t._v(" "),a("tr",[a("td",[t._v("IX")]),t._v(" "),a("td",[t._v("兼容")]),t._v(" "),a("td",[t._v("兼容")]),t._v(" "),a("td",[t._v("不兼容")]),t._v(" "),a("td",[t._v("不兼容")]),t._v(" "),a("td",[t._v("兼容")])]),t._v(" "),a("tr",[a("td",[t._v("S")]),t._v(" "),a("td",[t._v("兼容")]),t._v(" "),a("td",[t._v("不兼容")]),t._v(" "),a("td",[t._v("兼容")]),t._v(" "),a("td",[t._v("不兼容")]),t._v(" "),a("td",[t._v("不兼容")])]),t._v(" "),a("tr",[a("td",[t._v("X")]),t._v(" "),a("td",[t._v("不兼容")]),t._v(" "),a("td",[t._v("不兼容")]),t._v(" "),a("td",[t._v("不兼容")]),t._v(" "),a("td",[t._v("不兼容")]),t._v(" "),a("td",[t._v("不兼容")])]),t._v(" "),a("tr",[a("td",[t._v("AUTO_INC")]),t._v(" "),a("td",[t._v("兼容")]),t._v(" "),a("td",[t._v("兼容")]),t._v(" "),a("td",[t._v("不兼容")]),t._v(" "),a("td",[t._v("不兼容")]),t._v(" "),a("td",[t._v("不兼容")])])])]),t._v(" "),a("h2",{attrs:{id:"行级锁"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#行级锁"}},[t._v("#")]),t._v(" 行级锁")]),t._v(" "),a("p",[a("strong",[t._v("update，delete，insert 都会自动给涉及到的数据加上排他锁，select 语句默认不会加任何锁")])]),t._v(" "),a("p",[t._v("那什么情况下会对读操作加锁呢？")]),t._v(" "),a("ol",[a("li",[t._v("select .. lock in share mode，对读取的记录加S锁")]),t._v(" "),a("li",[t._v("select ... for update ，对读取的记录加X锁")]),t._v(" "),a("li",[t._v("在事务中读取记录，对读取的记录加S锁")]),t._v(" "),a("li",[t._v("事务隔离级别在 SERIALIZABLE 下，对读取的记录加S锁")])]),t._v(" "),a("p",[a("strong",[t._v("InnoDB中行锁的算法有如下三种")])]),t._v(" "),a("ol",[a("li",[t._v("Record Lock：对单个记录加锁")]),t._v(" "),a("li",[t._v("Gap Lock：间隙锁，锁住记录前面的间隙，不允许插入记录")]),t._v(" "),a("li",[t._v("Next-key Lock：同时锁住数据和数据前面的间隙，即数据和数据前面的间隙都不允许插入记录")])]),t._v(" "),a("p",[t._v("写个Demo演示一下")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CREATE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token identifier"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("girl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token identifier"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token identifier"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("varchar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("255")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token identifier"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("age"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("PRIMARY")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("KEY")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token identifier"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ENGINE")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("InnoDB")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DEFAULT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CHARSET")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("utf8"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[t._v("insert into girl values\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token char"}},[t._v("'西施'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token char"}},[t._v("'王昭君'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("23")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token char"}},[t._v("'貂蝉'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("25")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token char"}},[t._v("'杨玉环'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("26")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token char"}},[t._v("'陈圆圆'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h4",{attrs:{id:"record-lock"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#record-lock"}},[t._v("#")]),t._v(" Record Lock")]),t._v(" "),a("p",[a("strong",[t._v("对单个记录加锁")])]),t._v(" "),a("p",[t._v("如把id值为8的数据加一个Record Lock，示意图如下")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/6e118579d9ca4f299e85b899c74b6ba1.png",alt:"在这里插入图片描述"}}),t._v("\nRecord Lock也是有S锁和X锁之分的，兼容性和之前描述的一样。")]),t._v(" "),a("p",[t._v("SQL执行加什么样的锁受很多条件的制约，比如事务的隔离级别，执行时使用的索引（如，聚集索引，非聚集索引等），因此就不详细分析了，举几个简单的例子。")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- READ UNCOMMITTED/READ COMMITTED/REPEATABLE READ 利用主键进行等值查询")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 对id=8的记录加S型Record Lock")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" girl "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" id "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("lock")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("in")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("share")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("mode")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- READ UNCOMMITTED/READ COMMITTED/REPEATABLE READ 利用主键进行等值查询")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 对id=8的记录加X型Record Lock")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" girl "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" id "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("update")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h3",{attrs:{id:"gap-lock"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#gap-lock"}},[t._v("#")]),t._v(" Gap Lock")]),t._v(" "),a("p",[a("strong",[t._v("锁住记录前面的间隙，不允许插入记录")])]),t._v(" "),a("p",[a("strong",[t._v("MySQL在可重复读隔离级别下可以通过MVCC和加锁来解决幻读问题")])]),t._v(" "),a("p",[t._v("当前读：加锁\n快照读：MVCC")]),t._v(" "),a("p",[t._v("但是该如何加锁呢？因为第一次执行读取操作的时候，这些幻影记录并不存在，我们没有办法加Record Lock，此时可以通过加Gap Lock解决，即对间隙加锁。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/3d43e374d4744b20824939caff021f7a.png",alt:"在这里插入图片描述"}})]),t._v(" "),a("p",[t._v("如一个事务对id=8的记录加间隙锁，则意味着不允许别的事务在id=8的记录前面的间隙插入新记录，即id值在(5, 8)这个区间内的记录是不允许立即插入的。直到加间隙锁的事务提交后，id值在(5, 8)这个区间中的记录才可以被提交")]),t._v(" "),a("p",[t._v("我们来看如下一个SQL的加锁过程")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- REPEATABLE READ 利用主键进行等值查询")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 但是主键值并不存在")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 对id=8的聚集索引记录加Gap Lock")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" girl "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" id "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("LOCK")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("IN")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SHARE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("MODE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("由于id=7的记录不存在，为了禁止幻读现象（避免在同一事务下执行相同的语句得到的结果集中有id=7的记录），所以在当前事务提交前我们要预防别的事务插入id=7的记录，此时在id=8的记录上加一个Gap Lock即可，即不允许别的事务插入id值在(5, 8)这个区间的新记录")]),t._v(" "),a("p",[a("strong",[t._v("给大家提一个问题，Gap Lock只能锁定记录前面的间隙，那么最后一条记录后面的间隙该怎么锁定？")])]),t._v(" "),a("p",[t._v("其实mysql数据是存在页中的，每个页有2个伪记录")]),t._v(" "),a("ol",[a("li",[t._v("Infimum记录，表示该页面中最小的记录")]),t._v(" "),a("li",[t._v("upremum记录，表示该页面中最大的记录")])]),t._v(" "),a("p",[t._v("为了防止其它事务插入id值在(12, +∞)这个区间的记录，我们可以给id=12记录所在页面的Supremum记录加上一个gap锁，此时就可以阻止其他事务插入id值在(12, +∞)这个区间的新记录")]),t._v(" "),a("h3",{attrs:{id:"next-key-lock"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#next-key-lock"}},[t._v("#")]),t._v(" Next-key Lock")]),t._v(" "),a("p",[a("strong",[t._v("同时锁住数据和数据前面的间隙，即数据和数据前面的间隙都不允许插入记录")]),t._v("\n所以你可以这样理解Next-key Lock=Record Lock+Gap Lock\n"),a("img",{attrs:{src:"https://img-blog.csdnimg.cn/1e316027813b4cfd96ec65f126eadf0e.png",alt:"在这里插入图片描述"}})]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- REPEATABLE READ 利用主键进行范围查询")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 对id=8的聚集索引记录加S型Record Lock")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 对id>8的所有聚集索引记录加S型Next-key Lock（包括Supremum伪记录）")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" girl "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" id "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("LOCK")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("IN")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SHARE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("MODE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("因为要解决幻读的问题，所以需要禁别的事务插入id>=8的记录，所以")]),t._v(" "),a("ul",[a("li",[t._v("对id=8的聚集索引记录加S型Record Lock")]),t._v(" "),a("li",[t._v("对id>8的所有聚集索引记录加S型Next-key Lock（包括Supremum伪记录）")])]),t._v(" "),a("p",[t._v("事物隔离级别的实现")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th"),t._v(" "),a("th",[t._v("RR")]),t._v(" "),a("th",[t._v("RC")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("普通的select")]),t._v(" "),a("td",[t._v("MVCC")]),t._v(" "),a("td",[t._v("MVCC")])]),t._v(" "),a("tr",[a("td",[t._v("加锁的select和更新"),a("br"),t._v("select .. in shart mode"),a("br"),t._v(" select ... for update "),a("br"),t._v(" insert "),a("br"),t._v(" delete "),a("br"),t._v(" update")]),t._v(" "),a("td",[t._v("Record Lock "),a("br"),t._v(" Gap Lock "),a("br"),t._v(" Next-key Lock")]),t._v(" "),a("td",[t._v("Record Lock "),a("br")])])])])])}),[],!1,null,null,null);s.default=r.exports}}]);