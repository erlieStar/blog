(window.webpackJsonp=window.webpackJsonp||[]).push([[217],{614:function(s,t,a){"use strict";a.r(t);var e=a(56),r=Object(e.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"如何处理消费过程中的重复消息"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何处理消费过程中的重复消息"}},[s._v("#")]),s._v(" 如何处理消费过程中的重复消息")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20201008185516687.jpg?",alt:"在这里插入图片描述"}})]),s._v(" "),a("h2",{attrs:{id:"介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#介绍"}},[s._v("#")]),s._v(" 介绍")]),s._v(" "),a("p",[s._v("看到本节的题目你有可能会想怎么会遇到消费重复消息的场景呢？\n生产者只发送一次不就行了，或者消息队列自动把重复的消息丢掉不就行了")]),s._v(" "),a("p",[s._v("当生成者成功发送消息到broker，但是没有得到响应时，会重新发送消息到broker，此时broker中就会有重复的消息。如果不重试的话就有可能造成消息丢失。")]),s._v(" "),a("p",[s._v("MQTT协议中阐明了消息传递的三种服务质量，这三种服务质量从低到高是")]),s._v(" "),a("ol",[a("li",[s._v("At most once：至多一次，消息在传递时，最多被送达一次")]),s._v(" "),a("li",[s._v("At least once：至少一次，消息在传递时，至少被送达一次")]),s._v(" "),a("li",[s._v("Exactly once：恰好一次，消息在传递时，恰好被送达一次")])]),s._v(" "),a("p",[a("strong",[s._v("消息队列是可以把重复的消息丢掉，但实现成本很高，收益却很低。")])]),s._v(" "),a("p",[s._v("我来举个例子，当消费者消费消息成功，但是ack失败，此时broker还是会发一条重复的消息到消费者，消费者还得保证方法的幂等。")]),s._v(" "),a("p",[a("strong",[s._v("所以消息队列允许少量的重复消息，在业务层面对方法做幂等是最佳的实现方式")]),s._v("，我们常用的消息队列如RabbitMQ，RocketMQ，Kafka的服务质量都是At least once")]),s._v(" "),a("h2",{attrs:{id:"如何保证方法的幂等呢"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何保证方法的幂等呢"}},[s._v("#")]),s._v(" 如何保证方法的幂等呢？")]),s._v(" "),a("p",[a("strong",[s._v("使用唯一索引")])]),s._v(" "),a("p",[s._v("对业务唯一的字段加上唯一索引，这样当数据重复时，插入数据库会抛异常")]),s._v(" "),a("p",[a("strong",[s._v("状态机幂等")])]),s._v(" "),a("p",[s._v("如果业务上需要修改订单状态，例如订单状态有待支付，支付中，支付成功，支付失败。设计时最好只支持状态的单向改变。这样在更新的时候就可以加上条件，多次调用也只会执行一次。例如想把订单状态更新为支持成功，则之前的状态必须为支付中")]),s._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("update")]),s._v(" table_name "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("set")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("status")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" 支付成功 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("status")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" 支付中\n")])])]),a("p",[a("strong",[s._v("乐观锁实现幂等")])]),s._v(" "),a("ol",[a("li",[s._v("查询数据获得版本号")]),s._v(" "),a("li",[s._v("通过版本号去更新，版本号匹配则更新，版本号不匹配则不更新")])]),s._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 假如查询出的version为1")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" version "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" table_name "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" userid "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 给用户的账户加10")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("update")]),s._v(" table_name "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("set")]),s._v(" money "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" money "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" version "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" version "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" userid "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("and")]),s._v(" version "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n")])])]),a("p",[s._v("也可以通过条件来实现乐观锁，如库存不能超卖，数量不能小于0")]),s._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("update")]),s._v(" table_name "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("set")]),s._v(" num "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" num "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" num "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n")])])]),a("p",[a("strong",[s._v("防重表")])]),s._v(" "),a("p",[s._v("增加一个防重表，业务唯一的id作为唯一索引，如订单号，当想针对订单做一系列操作时，可以向防重表中插入一条记录，插入成功，执行后续操作，插入失败，则不执行后续操作。本质上可以看成是基于MySQL实现的分布式锁。根据业务场景决定执行成功后，是否删除防重表中对应的数据")]),s._v(" "),a("p",[a("strong",[s._v("分布式锁实现幂等")])]),s._v(" "),a("p",[s._v("执行方法时，先根据业务唯一的id获取分布式锁，获取成功，则执行，失败则不执行。分布式锁可以基于redis，zookeeper，mysql来实现，分布式锁的细节就不介绍了")]),s._v(" "),a("p",[a("strong",[s._v("select+insert")])]),s._v(" "),a("p",[s._v("先查询一下有没有符合要求的数据，如果没有再执行插入。没有并发的系统中可以保证幂等性，高并发下不要用这种方法，也会造成数据的重复插入。"),a("strong",[s._v("我一般做消息幂等的时候就是先select，有数据直接返回，没有数据加分布式锁进行insert操作")])]),s._v(" "),a("p",[a("strong",[s._v("全局唯一号实现幂等")])]),s._v(" "),a("p",[s._v("通过source（来源）+ seq（序列号）来判断请求是否重复，重复则直接返回请求重复提交，否则执行。如当多个三方系统调用服务的时候，就可以采用这种方式")])])}),[],!1,null,null,null);t.default=r.exports}}]);