(window.webpackJsonp=window.webpackJsonp||[]).push([[238],{637:function(s,t,a){"use strict";a.r(t);var n=a(56),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"rocketmq源码解析-架构及特性一览"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rocketmq源码解析-架构及特性一览"}},[s._v("#")]),s._v(" RocketMQ源码解析：架构及特性一览")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20210417162708145.jpg?",alt:"在这里插入图片描述"}})]),s._v(" "),a("h2",{attrs:{id:"下载和安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#下载和安装"}},[s._v("#")]),s._v(" 下载和安装")]),s._v(" "),a("p",[s._v("本节先对RocketMQ做个大概的介绍，更细节的内容我们后面会详细分析，首先下载和安装")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("wget")]),s._v(" https://archive.apache.org/dist/rocketmq/4.7.1/rocketmq-all-4.7.1-bin-release.zip\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("unzip")]),s._v(" rocketmq-all-4.7.1-bin-release.zip\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" rocketmq-all-4.7.1-bin-release/\n")])])]),a("p",[a("strong",[s._v("Start Name Server")])]),s._v(" "),a("p",[s._v("因为启动mqnamesrv脚本最终调用了runserver.sh，而runserver.sh中有如下配置")]),s._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[s._v("JAVA_OPT"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"${JAVA_OPT} -server -Xms4g -Xmx4g -Xmn2g -XX:MetaspaceSize=128m -XX:MaxMetaspaceSize=320m"')]),s._v("\n")])])]),a("p",[s._v("我们测试用的服务器当然不用分配这么大的新生代和老年代了，改小一点")]),s._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[s._v("JAVA_OPT"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"${JAVA_OPT} -server -Xms256m -Xmx256m -Xmn128m -XX:MetaspaceSize=128m -XX:MaxMetaspaceSize=320m"')]),s._v("\n")])])]),a("p",[s._v("同理修改runbroker.sh中的内容")]),s._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[s._v("JAVA_OPT"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"${JAVA_OPT} -server -Xms256m -Xmx256m -Xmn128m"')]),s._v("\n")])])]),a("p",[a("strong",[s._v("runbroker.sh如果你不修改的话可能都启动不起来，因为要求默认最少的堆内存为8g。")]),s._v(" 默认端口为9876")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("nohup")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sh")]),s._v(" bin/mqnamesrv "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("tail")]),s._v(" -f ~/logs/rocketmqlogs/namesrv.log\nThe Name Server boot success"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\n")])])]),a("p",[a("strong",[s._v("Start Broker")]),s._v("\n默认端口为10911")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("nohup")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sh")]),s._v(" bin/mqbroker -n localhost:9876 -c ./conf/broker.conf "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("tail")]),s._v(" -f ~/logs/rocketmqlogs/broker.log \nThe broker"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("%s, "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("172.30")]),s._v(".30.233:10911"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" boot success"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\n")])])]),a("p",[a("strong",[s._v("测试RocketMQ")])]),s._v(" "),a("p",[s._v("发送消息")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 1.设置环境变量")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("NAMESRV_ADDR")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("localhost:9876\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 2.使用安装包的Demo发送消息")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sh")]),s._v(" bin/tools.sh org.apache.rocketmq.example.quickstart.Producer\n")])])]),a("p",[s._v("接收消息")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 1.设置环境变量")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("NAMESRV_ADDR")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("localhost:9876\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 2.接收消息")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sh")]),s._v(" bin/tools.sh org.apache.rocketmq.example.quickstart.Consumer\n")])])]),a("p",[a("strong",[s._v("Shutdown Servers")])]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 1.关闭NameServer")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sh")]),s._v(" bin/mqshutdown namesrv\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 2.关闭Broker")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sh")]),s._v(" bin/mqshutdown broker\n")])])]),a("h2",{attrs:{id:"开启管控台"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#开启管控台"}},[s._v("#")]),s._v(" 开启管控台")]),s._v(" "),a("p",[s._v("我们可以启动一个管控台，通过管控台可以很方便的查看消息的消息情况，以及查找消息等。")]),s._v(" "),a("p",[s._v("https://github.com/apache/rocketmq-dashboard\n首先下载源码，切换到release-1.0.0分支")]),s._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[s._v("mvn clean package "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("Dmaven"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("test"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("skip"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v("\njava "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("jar target"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("rocketmq"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("dashboard"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.")]),s._v("jar \n")])])]),a("p",[s._v("启动后的界面如下，在运维页填入nameServer的地址点击更新后，就能看到消息的消费情况等\n"),a("img",{attrs:{src:"https://img-blog.csdnimg.cn/5a4a57429ddb44bab5e5a1fe5aad12d2.png?",alt:"在这里插入图片描述"}})]),s._v(" "),a("h2",{attrs:{id:"整体架构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#整体架构"}},[s._v("#")]),s._v(" 整体架构")]),s._v(" "),a("p",[s._v("RocketMQ是阿里自研的消息中间件，RocketMQ的整体架构如下\n"),a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20200705095007358.png?",alt:"在这里插入图片描述"}}),s._v(" "),a("strong",[s._v("主要有4个角色")])]),s._v(" "),a("p",[s._v("Producer：消息生产者。类似，发信者\nConsumer：消息消费者。类似，收信者\nBrokerServer：消息的存储，投递，查询。类似，邮局\nNameServer：注册中心，支持Broker的动态注册与发现。类似，邮局的管理结构")]),s._v(" "),a("p",[a("strong",[s._v("再介绍几个基本概念")])]),s._v(" "),a("p",[s._v("Topic（主题）：一类消息的集合，Topic和消息是一对多的关系。每个Broker可以存储多个Topic的消息，每个Topic也可以分片存储于不同的Broker")]),s._v(" "),a("p",[s._v("Tag（标签)：在Topic类别下的二级子类别。如财务系统的所有消息的Topic为Finance_Topic，创建订单消息的Tag为Create_Tag，关闭订单消息的Tag为Close_Tag。这样就能根据Tag消费不同的消息，当然你也可以为创建订单和关闭订单的消息各自创建一个Topic")]),s._v(" "),a("p",[s._v("Message Queue（消息队列）：相当于Topic的分区，用于并行发送和消费消息。\nMessage Queue在Broker上，一个Topic默认的Message Queue的数量为4")]),s._v(" "),a("p",[s._v("Producer Group（生产者组）：同一类Producer的集合。如果发送的是事务消息且原始生产者在发送之后崩溃，Broker会联系统一生产者组内的其他生产者实例以提交或回溯消费")]),s._v(" "),a("p",[s._v("Consumer Group（消费者组）：同一类Consumer的集合。消费者组内的实例必须订阅完全相同的Topic")]),s._v(" "),a("p",[s._v("Clustering（集群消费）：相同Consumer Group下的每个Consumer实例平均分摊消息")]),s._v(" "),a("p",[s._v("Broadcasting（广播消费）：相同Consumer Group的每个Consumer实例都接收全量的消息")]),s._v(" "),a("p",[s._v("用图演示一下Clustering和Broadcasting的区别\n"),a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20200716072654832.png?",alt:"在这里插入图片描述"}})]),s._v(" "),a("p",[s._v("如果我有一条订单程成交的消息，财务系统和物流系统都要同时订阅消费这条消息，该怎么办呢？定义2个Consumer Group即可")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20200716072902200.png?",alt:"在这里插入图片描述"}})]),s._v(" "),a("p",[s._v("Consumer1和Consumer2属于一个Consumer Group，Consumer3和Consumer4属于一个Consumer Group，消息会全量发送到这2个Consuemr Group，至于这2个Consumer Group是集群消费还是广播消费，自己定义即可")]),s._v(" "),a("p",[a("strong",[s._v("集群的特点")])]),s._v(" "),a("ol",[a("li",[s._v("NameServer是一个几乎无状态节点，可集群部署，节点之间无任何信息同步")]),s._v(" "),a("li",[s._v("Broker部署相对复杂，Broker分为Master和Slave，一个Master可以对应多个Slave，但是一个Slave只能对应一个Master，Master和Slave的对应关系通过指定相同的BrokerName，不同的BrokerId来定义，BrokerId为0表示Master，非0表示Slave。Master可以部署多个，每个Broker与NameServer集群中的所有节点建立长连接，定时注册Topic信息到所有NameServer")]),s._v(" "),a("li",[s._v("Producer与NameServer集群中的一个节点（随机选择）建立长连接，定期从NameServer获取Topic路由信息，并向提供服务的Master建立长连接，且定时向Master发送心跳。")]),s._v(" "),a("li",[s._v("Consumer与NameServer集群中的一个节点（随机选择）建立长连接，定期从NameServer获取Topic路由信息，并向提供服务的Master，Slave建立长连接，且定时向Master，Slave发送心跳。Consumer既可以从Master订阅消息，也可以从Slave订阅消息，订阅规则由Broker配置决定")])]),s._v(" "),a("p",[s._v("Broker集群常见的搭建方式有如下四种")]),s._v(" "),a("ol",[a("li",[s._v("单Master模式")]),s._v(" "),a("li",[s._v("多Master模式")]),s._v(" "),a("li",[s._v("多Master多Slave模式（异步）")]),s._v(" "),a("li",[s._v("多Master多Slave模式（同步）")])]),s._v(" "),a("p",[s._v("按照业务场景选择即可，不做过多介绍")]),s._v(" "),a("p",[a("strong",[s._v("集群的工作流程如下")])]),s._v(" "),a("ol",[a("li",[s._v("启动NameServer，等待Broker，Producer和Consumer连上来")]),s._v(" "),a("li",[s._v("启动Broker，跟所有NameServer保持长连接，定时发送心跳包。心跳包中包含当前Borker信息（IP+端口等），以及存储的所有Topic信息，注册成功后，NameServer集群中就有Topic跟Broker的映射关系")]),s._v(" "),a("li",[s._v("收发消息前，需要先创建Topic，创建Topic时需要指定该Topic要存储在哪些Broker上，也可以在发送消息时自动创建Topic")]),s._v(" "),a("li",[s._v("Producer发送消息，启动时先跟NameServer集群中的其中一台建立长连接，并从NameServer中获取当前发送的Topic存在哪些Broker上，轮询从队列列表中选择一个队列，然后与队列所在的Broker建立长连接从而向Broker发消息。")]),s._v(" "),a("li",[s._v("Consumer跟Producer类似，跟其中一台NameServer建立长连接，获取当前订阅Topic存在哪些Broker上，然后直接跟Broker建立连接通道，开始消费消息。")])]),s._v(" "),a("h2",{attrs:{id:"message"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#message"}},[s._v("#")]),s._v(" Message")]),s._v(" "),a("p",[s._v("消息的各种处理方式涉及到的内容较多，所以我就不在文章中放代码了，直接放GitHub了，目前还在不断完善中")]),s._v(" "),a("p",[s._v("地址为：https://github.com/erlieStar/rocketmq-examples，")]),s._v(" "),a("p",[s._v("和之前的RabbitMQ一个风格，基本上所有知识点都涉及到了")]),s._v(" "),a("p",[s._v("地址为：https://github.com/erlieStar/rabbitmq-examples")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20200705131042914.png",alt:"在这里插入图片描述"}})]),s._v(" "),a("p",[s._v("每个消息必须属于一个Topic。RocketMQ中每个消息具有唯一的Message Id，且可以携带具有业务标识的Key，"),a("strong",[s._v("我们可以通过Topic，Message Id和Message Key来查询消息")])]),s._v(" "),a("p",[a("strong",[s._v("消息消费的方式")])]),s._v(" "),a("ol",[a("li",[s._v("Pull（拉取式消费），Consumer主动从Broker拉取消息")]),s._v(" "),a("li",[s._v("Push（推送式消费），Consumer基于长轮询从Broker拉取消息（实现效果近似于Broker向Consumer推送消息）")])]),s._v(" "),a("p",[a("strong",[s._v("消息的过滤方式")])]),s._v(" "),a("ol",[a("li",[s._v("指定Tag")]),s._v(" "),a("li",[s._v("SQL92语法过滤")])]),s._v(" "),a("p",[a("strong",[s._v("消息的发送方式")])]),s._v(" "),a("ol",[a("li",[s._v("同步，收到响应后才会发送下一条消息")]),s._v(" "),a("li",[s._v("异步，一直发，用异步的回调函数来获取结果")]),s._v(" "),a("li",[s._v("单向（只管发，不管结果）")])]),s._v(" "),a("p",[a("strong",[s._v("消息的种类")])]),s._v(" "),a("ol",[a("li",[s._v("顺序消息")]),s._v(" "),a("li",[s._v("延迟消息")]),s._v(" "),a("li",[s._v("批量消息")]),s._v(" "),a("li",[s._v("事务消息")])]),s._v(" "),a("h3",{attrs:{id:"顺序消息"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#顺序消息"}},[s._v("#")]),s._v(" 顺序消息")]),s._v(" "),a("p",[a("strong",[s._v("顺序消息分为局部有序和全局有序")])]),s._v(" "),a("p",[a("strong",[s._v("局部有序")]),s._v("：同一个业务相关的消息是有序的，如针对同一个订单的创建和付款消息是有序的，只需要在发送的时候指定message queue即可，如下所示，将同一个orderId对应的消息发送到同一个队列")]),s._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("SendResult")]),s._v(" sendResult "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" producer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("send")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("message"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("MessageQueueSelector")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n\t * @param mqs topic对应的message queue\n\t * @param msg send方法传入的message\n\t * @param arg send方法传入的orderId\n\t */")]),s._v("\n\t"),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Override")]),s._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("MessageQueue")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("select")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("List")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("MessageQueue")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" mqs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Message")]),s._v(" msg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Object")]),s._v(" arg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 根据业务对象选择对应的队列")]),s._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Integer")]),s._v(" orderId "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Integer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" arg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" index "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" orderId "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("%")]),s._v(" mqs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("size")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" mqs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("get")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("index"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" orderId"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),a("p",[s._v("消费者所使用的Listener必须是MessageListenerOrderly（对于一个队列的消息采用一个线程去处理），而平常的话我们使用的是MessageListenerConcurrently")]),s._v(" "),a("p",[a("strong",[s._v("全局有序")]),s._v("：要想实现全局有序，则Topic只能有一个message queue。")]),s._v(" "),a("h3",{attrs:{id:"延迟消息"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#延迟消息"}},[s._v("#")]),s._v(" 延迟消息")]),s._v(" "),a("p",[s._v("RocketMQ并不支持任意时间的延迟，需要设置几个固定的延时等级，从1s到2h分别对应着等级1到18")]),s._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// org.apache.rocketmq.store.config.MessageStoreConfig ")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" messageDelayLevel "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"1s 5s 10s 30s 1m 2m 3m 4m 5m 6m 7m 8m 9m 10m 20m 30m 1h 2h"')]),s._v("\n")])])]),a("h3",{attrs:{id:"批量消息"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#批量消息"}},[s._v("#")]),s._v(" 批量消息")]),s._v(" "),a("p",[s._v("批量发送消息能显著提高传递小消息的性能，限制是这批消息应该有相同的topic，相同的waitStoreMsgOK，而且不能是延时消息，一批消息的总大小不应超过1MB")]),s._v(" "),a("h3",{attrs:{id:"事务消息"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#事务消息"}},[s._v("#")]),s._v(" 事务消息")]),s._v(" "),a("p",[s._v("事务在实际的业务场景中还是经常遇到的，以转账为例子")]),s._v(" "),a("p",[s._v("张三给李四转账100元，可以分为如下2步")]),s._v(" "),a("ol",[a("li",[s._v("张三的账户减去100元")]),s._v(" "),a("li",[s._v("李四的账户加上100元")])]),s._v(" "),a("p",[s._v("这2个操作要是同时成功，要是同时失败，不然会造成数据不一致的情况，基于单个数据库Connection时，我们只需要在方法上加上@Transactional注解就可以了。")]),s._v(" "),a("p",[s._v("如果基于多个Connection（如服务拆分，数据库分库分表），加@Transactional此时就不管用了，就得用到分布式事务")]),s._v(" "),a("p",[a("strong",[s._v("分布式事务的解决方案很多，RocketMQ只是其中一种方案，RocketMQ可以保证最终一致性")]),s._v(" "),a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20200704153823144.png?",alt:"在这里插入图片描述"}}),s._v("\nRocketMQ实现分布式事务的流程如下")]),s._v(" "),a("ol",[a("li",[s._v("producer向mq server发送一个半消息")]),s._v(" "),a("li",[s._v("mq server将消息持久化成功后，向发送方确认消息已经发送成功，此时消息并不会被consumer消费")]),s._v(" "),a("li",[s._v("producer开始执行本地事务逻辑")]),s._v(" "),a("li",[s._v("producer根据本地事务执行结果向mq server发送二次确认，mq收到commit状态，将消息标记为可投递，consumer会消费该消息。mq收到rollback则删除半消息，consumer将不会消费该消息，如果收到unknow状态，mq会对消息发起回查")]),s._v(" "),a("li",[s._v("在断网或者应用重启等特殊情况下，步骤4提交的2次确认有可能没有到达mq server，经过固定时间后mq会对该消息发起回查")]),s._v(" "),a("li",[s._v("producer收到回查后，需要检查本地事务的执行状态")]),s._v(" "),a("li",[s._v("producer根据本地事务的最终状态，再次提交二次确认，mq仍按照步骤4对半消息进行操作")])]),s._v(" "),a("p",[s._v("理解了原理，看代码实现就很容易了，放一个官方的example")]),s._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("TransactionListenerImpl")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("implements")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("TransactionListener")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("AtomicInteger")]),s._v(" index "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("AtomicInteger")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ConcurrentHashMap")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Integer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" localTrans "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ConcurrentHashMap")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Override")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("LocalTransactionState")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("executeLocalTransaction")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Message")]),s._v(" msg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Object")]),s._v(" arg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" value "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" index"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("getAndIncrement")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" status "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" value "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("%")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        localTrans"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("put")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("msg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("getTransactionId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" status"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("LocalTransactionState")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("UNKNOW"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Override")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("LocalTransactionState")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("checkLocalTransaction")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("MessageExt")]),s._v(" msg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Integer")]),s._v(" status "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" localTrans"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("get")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("msg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("getTransactionId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("status "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("switch")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("status"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n                    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("LocalTransactionState")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("UNKNOW"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n                "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n                    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("LocalTransactionState")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("COMMIT_MESSAGE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n                "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n                    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("LocalTransactionState")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("ROLLBACK_MESSAGE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n                "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("default")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n                    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("LocalTransactionState")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("COMMIT_MESSAGE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("LocalTransactionState")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("COMMIT_MESSAGE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),a("p",[s._v("实现分布式事务需要实现TransactionListener接口，2个方法的作用如下")]),s._v(" "),a("ol",[a("li",[s._v("executeLocalTransaction，执行本地事务")]),s._v(" "),a("li",[s._v("checkLocalTransaction，回查本地事务状态")])]),s._v(" "),a("p",[s._v("针对这个例子，所有的消息都会回查，因为返回的都是UNKNOW，回查的时候status=1的数据会被消费，status=2的数据会被删除，status=0的数据会一直回查，直到超过默认的回查次数。")]),s._v(" "),a("p",[s._v("发送方代码如下")]),s._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("TransactionProducer")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("final")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" RPODUCER_GROUP_NAME "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"transactionProducerGroup"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("final")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" TOPIC_NAME "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"transactionTopic"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("final")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" TAG_NAME "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"transactionTag"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("throws")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Exception")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("TransactionListener")]),s._v(" transactionListener "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("TransactionListenerImpl")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("TransactionMQProducer")]),s._v(" producer "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("TransactionMQProducer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("RPODUCER_GROUP_NAME"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ExecutorService")]),s._v(" executorService "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ThreadPoolExecutor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("TimeUnit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("SECONDS"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n                "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ArrayBlockingQueue")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ThreadFactory")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\n            "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Override")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Thread")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("newThread")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Runnable")]),s._v(" r"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Thread")]),s._v(" thread "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Thread")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n                thread"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("setName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"transaction-msg-check-thread"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n                "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" thread"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        producer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("setExecutorService")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("executorService"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        producer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("setTransactionListener")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("transactionListener"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        producer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("start")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Message")]),s._v(" message "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Message")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("TOPIC_NAME"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" TAG_NAME"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n                    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hello rocketmq "')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("getBytes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("RemotingHelper")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("DEFAULT_CHARSET"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("SendResult")]),s._v(" sendResult "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" producer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("send")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("message"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("sendResult"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("TimeUnit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("HOURS"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sleep")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        producer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("shutdown")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),a("p",[a("strong",[s._v("看到这，可能有人会问了，我们先执行本地事务，执行成功后再发送消息，这样可以吗？")])]),s._v(" "),a("p",[s._v("其实这样做还是有可能会造成数据不一致的问题。假如本地事务执行成功，发送消息，由于网络延迟，消息发送成功，但是回复超时了，抛出异常，本地事务回滚。但是消息其实投递成功并被消费了，此时就会造成数据不一致的情况")]),s._v(" "),a("p",[a("strong",[s._v("那消息投递到mq server，consumer消费失败怎么办？")])]),s._v(" "),a("p",[s._v("如果是消费超时，重试即可。如果是由于代码等原因真的消费失败了，此时就得人工介入，重新手动发送消息，达到最终一致性。")]),s._v(" "),a("h3",{attrs:{id:"消息重试"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#消息重试"}},[s._v("#")]),s._v(" 消息重试")]),s._v(" "),a("h4",{attrs:{id:"发送端重试"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#发送端重试"}},[s._v("#")]),s._v(" 发送端重试")]),s._v(" "),a("p",[s._v("producer向broker发送消息后，没有收到broker的ack时，rocketmq会自动重试。重试的次数可以设置，默认为2次")]),s._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("DefaultMQProducer")]),s._v(" producer "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("DefaultMQProducer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("RPODUCER_GROUP_NAME"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 同步发送设置重试次数为5次")]),s._v("\nproducer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("setRetryTimesWhenSendFailed")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 异步发送设置重试次数为5次")]),s._v("\nproducer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("setRetryTimesWhenSendAsyncFailed")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),a("h4",{attrs:{id:"消费端重试"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#消费端重试"}},[s._v("#")]),s._v(" 消费端重试")]),s._v(" "),a("h5",{attrs:{id:"顺序消息的重试"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#顺序消息的重试"}},[s._v("#")]),s._v(" 顺序消息的重试")]),s._v(" "),a("p",[s._v("对于顺序消息，当Consumer消费消息失败后，RocketMQ会不断进行消息重试，此时后续消息会被阻塞。所以当使用顺序消息的时候，监控一定要做好，避免后续消息被阻塞")]),s._v(" "),a("h5",{attrs:{id:"无序消息的重试"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#无序消息的重试"}},[s._v("#")]),s._v(" 无序消息的重试")]),s._v(" "),a("p",[a("strong",[s._v("当消费模式为集群模式时，Broker才会自动进行重试，对于广播消息是不会进行重试的")])]),s._v(" "),a("p",[s._v("当consumer消费消息后返回ConsumeConcurrentlyStatus.CONSUME_SUCCESS表明消费消息成功，不会进行重试")]),s._v(" "),a("p",[s._v("当consumer符合如下三种场景之一时，会对消息进行重试")]),s._v(" "),a("ol",[a("li",[s._v("返回ConsumeConcurrentlyStatus.RECONSUME_LATER")]),s._v(" "),a("li",[s._v("返回null")]),s._v(" "),a("li",[s._v("主动或被动抛出异常")])]),s._v(" "),a("p",[a("strong",[s._v("RocketMQ默认每条消息会被重试16次，超过16次则不再重试，会将消息放到死信队列,当然我们也可以自己设置重试次数")])]),s._v(" "),a("p",[s._v("每次重试的时间间隔如下")]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",[s._v("第几次重试")]),s._v(" "),a("th",[s._v("与上次间隔时间")]),s._v(" "),a("th",[s._v("第几次重试")]),s._v(" "),a("th",[s._v("与上次间隔时间")])])]),s._v(" "),a("tbody",[a("tr",[a("td",[s._v("1")]),s._v(" "),a("td",[s._v("10s")]),s._v(" "),a("td",[s._v("10")]),s._v(" "),a("td",[s._v("7分钟")])]),s._v(" "),a("tr",[a("td",[s._v("2")]),s._v(" "),a("td",[s._v("30s")]),s._v(" "),a("td",[s._v("11")]),s._v(" "),a("td",[s._v("8分钟")])]),s._v(" "),a("tr",[a("td",[s._v("3")]),s._v(" "),a("td",[s._v("1分钟")]),s._v(" "),a("td",[s._v("12")]),s._v(" "),a("td",[s._v("9分钟")])]),s._v(" "),a("tr",[a("td",[s._v("4")]),s._v(" "),a("td",[s._v("2分钟")]),s._v(" "),a("td",[s._v("13")]),s._v(" "),a("td",[s._v("10分钟")])]),s._v(" "),a("tr",[a("td",[s._v("5")]),s._v(" "),a("td",[s._v("3分钟")]),s._v(" "),a("td",[s._v("14")]),s._v(" "),a("td",[s._v("20分钟")])]),s._v(" "),a("tr",[a("td",[s._v("6")]),s._v(" "),a("td",[s._v("4分钟")]),s._v(" "),a("td",[s._v("15")]),s._v(" "),a("td",[s._v("30分钟")])]),s._v(" "),a("tr",[a("td",[s._v("7")]),s._v(" "),a("td",[s._v("5分钟")]),s._v(" "),a("td",[s._v("16")]),s._v(" "),a("td",[s._v("1小时")])]),s._v(" "),a("tr",[a("td",[s._v("8")]),s._v(" "),a("td",[s._v("6分钟")]),s._v(" "),a("td",[s._v("17")]),s._v(" "),a("td",[s._v("2小时")])])])]),s._v(" "),a("h3",{attrs:{id:"重试队列和死信队列"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#重试队列和死信队列"}},[s._v("#")]),s._v(" 重试队列和死信队列")]),s._v(" "),a("p",[s._v("当消息消费失败，会被发送到重试队列")]),s._v(" "),a("p",[s._v("当消息消费失败，并达到最大重试次数，rocketmq并不会将消息丢弃，而是将消息发送到死信队列")]),s._v(" "),a("p",[s._v("死信队列有如下特点")]),s._v(" "),a("ol",[a("li",[s._v("里面存的是不能被正常消费的消息")]),s._v(" "),a("li",[s._v("有效期与正常消息相同，都是3天，3天后会被删除")]),s._v(" "),a("li",[s._v("每个死信队列对应一个Consumer Group ID，即死信队列是消费者组级别的")]),s._v(" "),a("li",[s._v("如果一个Consumer Group没有产生死信消息，则RocketMQ不会创建对应的死信队列")]),s._v(" "),a("li",[s._v("死信队列包含了一个Consumer Group下的所有死信消息，不管该消息属于哪个Topic")])]),s._v(" "),a("p",[s._v("一个Consumer Group组的重试队列对应的topic名称为：%RETRY%消费组名称\n一个Consumer Group组的死信队列对应的topic名称为：%DLQ%消费组名称")]),s._v(" "),a("h2",{attrs:{id:"rocketmq高性能和高可用的方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rocketmq高性能和高可用的方式"}},[s._v("#")]),s._v(" RocketMQ高性能和高可用的方式")]),s._v(" "),a("h3",{attrs:{id:"整体架构-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#整体架构-2"}},[s._v("#")]),s._v(" 整体架构")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20200705095007358.png?",alt:"在这里插入图片描述"}}),s._v("\nrocketmq是通过broker主从机制来实现高可用的。相同broker名称，不同brokerid的机器组成一个broker组，brokerId=0表明这个broker是master，brokerId>0表明这个broker是slave。")]),s._v(" "),a("p",[a("strong",[s._v("消息生产的高可用")]),s._v("：创建topic时，把topic的多个message queue创建在多个broker组上。这样当一个broker组的master不可用后，producer仍然可以给其他组的master发送消息。\n"),a("strong",[s._v("rocketmq目前支持主从自动切换，当主节点挂掉后，会重新选举一个主节点")])]),s._v(" "),a("p",[a("strong",[s._v("消息消费的高可用")]),s._v("：consumer并不能配置从master读还是slave读。当master不可用或者繁忙的时候consumer会被自动切换到从slave读。这样当master出现故障后，consumer仍然可以从slave读，保证了消息消费的高可用")]),s._v(" "),a("h3",{attrs:{id:"消息存储结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#消息存储结构"}},[s._v("#")]),s._v(" 消息存储结构")]),s._v(" "),a("p",[s._v("RocketMQ需要保证消息的高可靠性，所以要将数据通过磁盘进行持久化存储。")]),s._v(" "),a("blockquote",[a("p",[s._v("将数据存到磁盘会不会很慢？其实磁盘有时候比你想象的快，有时候比你想象的慢。目前高性能磁盘的顺序写速度可以达到600M/s，而磁盘的随机写大概只有100k/s，和顺序写的性能相差6000倍，所以RocketMQ采用顺序写。")])]),s._v(" "),a("p",[a("strong",[s._v("RocketMQ通过顺序写和零拷贝技术实现了高性能的消息存储")]),s._v("（零拷贝的内容会在后面详细介绍）\n"),a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20200716124954387.png?",alt:"在这里插入图片描述"}}),s._v("\n和消息相关的文件有如下几种")]),s._v(" "),a("ol",[a("li",[s._v("CommitLog：存储消息的元数据")]),s._v(" "),a("li",[s._v("ConsumerQueue：存储消息在CommitLog的索引")]),s._v(" "),a("li",[s._v("IndexFile：可以通过Message Id，Message Key，快速查找到消息")])]),s._v(" "),a("h3",{attrs:{id:"刷盘机制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#刷盘机制"}},[s._v("#")]),s._v(" 刷盘机制")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20200716124733410.png?",alt:"在这里插入图片描述"}})]),s._v(" "),a("ol",[a("li",[a("strong",[s._v("同步刷盘")]),s._v("：消息被写入内存的PAGECACHE，返回写成功状态，当内存里的消息量积累到一定程度时，统一触发写磁盘操作，快速写入 。吞吐量低，但不会造成消息丢失")]),s._v(" "),a("li",[a("strong",[s._v("异步刷盘")]),s._v("：消息写入内存的PAGECACHE后，立刻通知刷盘线程刷盘，然后等待刷盘完成，刷盘线程执行完成后唤醒等待的线程，给应用返回消息写成功的状态。吞吐量高，当磁盘损坏时，会丢失消息")])]),s._v(" "),a("h3",{attrs:{id:"主从复制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#主从复制"}},[s._v("#")]),s._v(" 主从复制")]),s._v(" "),a("p",[s._v("如果一个broker有master和slave时，就需要将master上的消息复制到slave上，复制的方式有两种")]),s._v(" "),a("ol",[a("li",[a("strong",[s._v("同步复制")]),s._v("：master和slave均写成功，才返回客户端成功。maste挂了以后可以保证数据不丢失，但是同步复制会增加数据写入延迟，降低吞吐量")]),s._v(" "),a("li",[a("strong",[s._v("异步复制")]),s._v("：master写成功，返回客户端成功。拥有较低的延迟和较高的吞吐量，但是当master出现故障后，有可能造成数据丢失")])]),s._v(" "),a("h3",{attrs:{id:"负载均衡"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#负载均衡"}},[s._v("#")]),s._v(" 负载均衡")]),s._v(" "),a("h4",{attrs:{id:"producer负载均衡"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#producer负载均衡"}},[s._v("#")]),s._v(" Producer负载均衡")]),s._v(" "),a("p",[s._v("producer在发送消息时，默认轮询所有queue，消息就会被发送到不同的queue上。而queue可以分布在不同的broker上\n"),a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20200715231613377.png?",alt:"在这里插入图片描述"}})]),s._v(" "),a("h4",{attrs:{id:"consumer负载均衡"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#consumer负载均衡"}},[s._v("#")]),s._v(" Consumer负载均衡")]),s._v(" "),a("p",[s._v("在介绍Consumer负载均衡之前我们先明确一个基本事项")]),s._v(" "),a("p",[a("strong",[s._v("一个消费者可以分配到多个消息队列，但同一个消息队列只会分配给一个消费者，所以当消费者个数大于消息队列数量时，多出来的消费者会被闲置")])]),s._v(" "),a("p",[a("strong",[s._v("为什么一个队列不能分配给多个消费者？")])]),s._v(" "),a("p",[s._v("当我们从队列中消费成功消息后，会移动ConsumerOffset（记录当前消费进度）。如果多个Consumer同时移动ConsumerOffset肯定会涉及到并发问题，移动ConsumerOffset的过程要加锁，整个执行过程又串行化了，还不如将一个队列分配给一个消费者")]),s._v(" "),a("p",[s._v("RocketMQ提供了很多负载均衡策略，都实现了AllocateMessageQueueStrategy接口\n"),a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20210417181231304.png?",alt:"在这里插入图片描述"}}),s._v("\n默认的分配算法是AllocateMessageQueueAveragely，如下图\n"),a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20200715232420579.png?",alt:"在这里插入图片描述"}})]),s._v(" "),a("p",[s._v("假如有8个队列（从q1-q8）和3个消费者（从c1-c3），分配情况如下所示\nc1：q1 q2 q3\nc2：q4 q5 q6\nc3：q7 q8")]),s._v(" "),a("p",[s._v("还有另外一种平均的算法是AllocateMessageQueueAveragelyByCircle，也是平均分摊queue，只是以环状轮流分queue的形式，如下图：")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20200715232429871.png?",alt:"在这里插入图片描述"}})]),s._v(" "),a("p",[s._v("假如有8个队列（从q1-q8）和3个消费者（从c1-c3），分配情况如下所示\nc1：q1 q4 q7\nc2：q2 q5 q8\nc3：q3 q6")]),s._v(" "),a("p",[s._v("RocketMQ一些基本的内容就介绍到这里了，下面我们就开始源码分析之路")])])}),[],!1,null,null,null);t.default=e.exports}}]);