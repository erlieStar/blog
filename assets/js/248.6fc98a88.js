(window.webpackJsonp=window.webpackJsonp||[]).push([[248],{645:function(t,a,s){"use strict";s.r(a);var r=s(56),e=Object(r.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"手写rpc框架-netty高性能的秘密是"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#手写rpc框架-netty高性能的秘密是"}},[t._v("#")]),t._v(" 手写RPC框架：Netty高性能的秘密是？")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://img-blog.csdnimg.cn/20201126153809132.jpg",alt:"在这里插入图片描述"}})]),t._v(" "),s("h2",{attrs:{id:"介绍"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#介绍"}},[t._v("#")]),t._v(" 介绍")]),t._v(" "),s("p",[t._v("Netty是一个高性能的NIO网络框架，极大的的降低了网络编程的门槛，并且提供了简单易用的api。")]),t._v(" "),s("p",[t._v("客户端和服务端的启动是一个很简单的模版代码，我们更多的精力是的写处理业务逻辑的ChannelHandler，看几个Demo你就能写一个简单的Http服务器，Im系统等。")]),t._v(" "),s("p",[t._v("相对于Java nio原生api来说，Netty有如下的优点")]),t._v(" "),s("ol",[s("li",[t._v("提供的简单易用的api，实现同一个功能你可以用java nio和netty都实现一下，就知道netty用起来是有多爽了")]),t._v(" "),s("li",[t._v("性能高，稳定性高，如解决了jdk select空轮询的bug")]),t._v(" "),s("li",[t._v("扩展性高，可以复用的组件很多。默认提供了处理http，websocket等协议的handler，各种编解码算法的实现。")])]),t._v(" "),s("h2",{attrs:{id:"reactor是如何支持高并发"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#reactor是如何支持高并发"}},[t._v("#")]),t._v(" Reactor是如何支持高并发？")]),t._v(" "),s("p",[t._v("Netty的能支持高并发，离不开它的开发模式Reactor")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("类别")]),t._v(" "),s("th",[t._v("开发模式")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("BIO")]),t._v(" "),s("td",[t._v("Thread-Per-Connection")])]),t._v(" "),s("tr",[s("td",[t._v("NIO")]),t._v(" "),s("td",[t._v("Reactor")])]),t._v(" "),s("tr",[s("td",[t._v("AIO")]),t._v(" "),s("td",[t._v("Proactor")])])])]),t._v(" "),s("p",[t._v("用例子类别一下")]),t._v(" "),s("p",[t._v("BIO：排队打饭\nNIO：点餐等待被叫")]),t._v(" "),s("h3",{attrs:{id:"thread-per-connection"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#thread-per-connection"}},[t._v("#")]),t._v(" Thread-Per-Connection")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://img-blog.csdnimg.cn/20201018194908809.png?",alt:"在这里插入图片描述"}})]),t._v(" "),s("p",[t._v("Thread-Per-Connection这种开发模式应该很多人都比较清楚，见名知意，"),s("strong",[t._v("一个请求创建一个线程")]),t._v("，支持不了高并发，当然你可以用线程池避免线程的重复创建")]),t._v(" "),s("h3",{attrs:{id:"reactor"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#reactor"}},[t._v("#")]),t._v(" Reactor")]),t._v(" "),s("p",[t._v("Reactor的核心流程为")]),t._v(" "),s("ol",[s("li",[t._v("注册感兴趣的事件")]),t._v(" "),s("li",[t._v("扫描是否有感兴趣的事件发生")]),t._v(" "),s("li",[t._v("事件发生后作出相应的处理")])]),t._v(" "),s("p",[t._v("Reactor模式的演进过程如下")]),t._v(" "),s("h4",{attrs:{id:"单reactor单线程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#单reactor单线程"}},[t._v("#")]),t._v(" 单Reactor单线程")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://img-blog.csdnimg.cn/20201018212234786.jpg?",alt:"在这里插入图片描述"}})]),t._v(" "),s("p",[s("strong",[t._v("执行流程")])]),t._v(" "),s("ol",[s("li",[t._v("Reactor对象通过select监控客户端请求事件，收到事件后通过dispatch分发")]),t._v(" "),s("li",[t._v("如果是建立连接事件，则交给Acceptor通过accept处理连接请求，然后创建一个handler对象处理连接完成后的的后续业务处理")]),t._v(" "),s("li",[t._v("如果是读写事件，则调用对应的handler来处理请求。handler会完成 read->业务处理->send整个完整的业务流程")])]),t._v(" "),s("p",[s("strong",[t._v("优点")])]),t._v(" "),s("p",[t._v("模型简单，整个过程都在一个线程中完成")]),t._v(" "),s("p",[s("strong",[t._v("缺点")])]),t._v(" "),s("ol",[s("li",[s("p",[t._v("性能问题，只有一个线程，无法发挥多核CPU的性能。并且当handler在处理请求时，无法处理连接请求，容易导致性能瓶颈")])]),t._v(" "),s("li",[s("p",[t._v("可靠性问题，线程意外终止或者死循环，系统不能接收和处理外部消息，造成节点故障")])])]),t._v(" "),s("h4",{attrs:{id:"单reactor多线程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#单reactor多线程"}},[t._v("#")]),t._v(" 单Reactor多线程")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://img-blog.csdnimg.cn/20201018212254290.jpg?",alt:"在这里插入图片描述"}})]),t._v(" "),s("p",[s("strong",[t._v("执行流程")])]),t._v(" "),s("ol",[s("li",[t._v("Reactor对象通过select监控客户端请求事件，收到事件后通过dispatch分发")]),t._v(" "),s("li",[t._v("如果是建立连接事件，则交给Acceptor通过accept处理连接请求，然后创建一个handler对象处理连接完成后的的后续业务处理")]),t._v(" "),s("li",[t._v("如果是读写事件，则调用对应的handler来处理请求")]),t._v(" "),s("li",[t._v("handler只负责读取和响应事件，不做具体的业务处理，读取到数据后，会分发给Worker线程池中的某个线程处理业务，处理完毕后将结果返回给handler")]),t._v(" "),s("li",[t._v("handler收到响应后返回给client")])]),t._v(" "),s("p",[s("strong",[t._v("优点")])]),t._v(" "),s("p",[t._v("充分利用多核cpu的处理能力")]),t._v(" "),s("p",[s("strong",[t._v("缺点")])]),t._v(" "),s("p",[t._v("Reactor单线程运行，处理所有事件的监听和响应，在高并发场景容易出现性能瓶颈")]),t._v(" "),s("h4",{attrs:{id:"主从reactor多线程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#主从reactor多线程"}},[t._v("#")]),t._v(" 主从Reactor多线程")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://img-blog.csdnimg.cn/20201018212308273.jpg?",alt:"在这里插入图片描述"}})]),t._v(" "),s("p",[s("strong",[t._v("Reactor在高并发下容易出现瓶颈，所以将Reactor分为2部分，MainReactor只处理连接事件，SubReactor只处理读写事件")])]),t._v(" "),s("p",[t._v("如果是连接事件MainReactor直接交给Acceptor来处理，如果是读写事件MainReactor交给SubReactor来处理")]),t._v(" "),s("p",[s("strong",[t._v("当我们在写Netty程序时，会创建2个EventLoopGroup，一个是bossGroup，一个是workerGroup。bossGroup 就用来处理连接请求的，而 workerGroup 是用来处理读写请求的")])]),t._v(" "),s("p",[t._v("EventLoop对应Reactor模式中的Reactor，EventLoopGroup就是EventLoop组成的集合")]),t._v(" "),s("p",[s("strong",[t._v("MainReactor有一个，在单线程中运行。SubReactor有多个，在多个线程中运行")])]),t._v(" "),s("p",[t._v("推荐你看一下Doug Lea大佬对Reactor模式解释的文章（你用的并发包就是他写的），保证你能有一个更深的印象")]),t._v(" "),s("p",[t._v("http://gee.cs.oswego.edu/dl/cpjslides/nio.pdf")]),t._v(" "),s("p",[t._v("现在我们常用的NIO框架是Netty，在Netty中切换这三种模式就非常方便了，代码如下")]),t._v(" "),s("p",[s("strong",[t._v("当然Netty做了一定的改进。即单Reactor多线程和主从Reactor多线程中Reactor线程可以是多个")])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 单Reactor单线程")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("EventLoopGroup")]),t._v(" eventLoopGroup "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NioEventLoopGroup")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ServerBootstrap")]),t._v(" serverBootstrap "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ServerBootstrap")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nserverBootstrap"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("group")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("eventLoopGroup"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 单Reactor多线程")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// EventLoopGroup不指定线程数的话默认是cpu核数的2倍")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("EventLoopGroup")]),t._v(" eventLoopGroup "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NioEventLoopGroup")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ServerBootstrap")]),t._v(" serverBootstrap "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ServerBootstrap")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nserverBootstrap"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("group")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("eventLoopGroup"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 主从Reactor多线程")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("EventLoopGroup")]),t._v(" bossGroup "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NioEventLoopGroup")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("EventLoopGroup")]),t._v(" workerGroup "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NioEventLoopGroup")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ServerBootstrap")]),t._v(" serverBootstrap "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ServerBootstrap")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nserverBootstrap"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("group")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("bossGroup"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" workerGroup"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h2",{attrs:{id:"参考博客"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参考博客"}},[t._v("#")]),t._v(" 参考博客")])])}),[],!1,null,null,null);a.default=e.exports}}]);