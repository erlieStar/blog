(window.webpackJsonp=window.webpackJsonp||[]).push([[210],{605:function(s,a,t){"use strict";t.r(a);var e=t(56),r=Object(e.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"mysql实战-问题排查"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#mysql实战-问题排查"}},[s._v("#")]),s._v(" MySQL实战：问题排查")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://img-blog.csdnimg.cn/direct/98e8732445464ef1b0aab2e411ee2b49.png",alt:"在这里插入图片描述"}})]),s._v(" "),t("h2",{attrs:{id:"事务提交很慢"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#事务提交很慢"}},[s._v("#")]),s._v(" 事务提交很慢")]),s._v(" "),t("p",[s._v("说一个我遇到的一个有意思的问题，有一段时间线上的接口特别慢，但是我查日志发现sql执行的很快，难道是网络的问题？")]),s._v(" "),t("p",[s._v("为了确定是否是网络的问题，我就用拦截器看了一下接口的执行时间，发现耗时很长，考虑到方法加了事务，难道是事务提交很慢？")]),s._v(" "),t("p",[s._v("于是我用pt-query-digest统计了一下1分钟左右的慢日志，"),t("strong",[s._v("发现事务提交的次数很多，但是每次提交事务的平均时长是1.5s左右")]),s._v("，果然是事务提交很慢。")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://img-blog.csdnimg.cn/c2ab9c8c5cde4587a7fda9ed2cfee793.png",alt:"在这里插入图片描述"}}),s._v(" "),t("strong",[s._v("好了，现在就要看为什么事物提交慢了？")])]),s._v(" "),t("p",[t("strong",[s._v("首先想到的难道是redolog太小了？")])]),s._v(" "),t("p",[t("strong",[s._v("因为当redolog写满的时候会将脏页刷回到磁盘")]),s._v("，然后看了一下redolog的大小居然为48mb。dba觉得innodb_log_file_size设置的太小了，打算从48mb 打算改成1G，然后重启实例，我让他们监控了一下redo log的使用大小，排除了这个可能")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://img-blog.csdnimg.cn/6a63fd6ff6804e9c8b9f36b78879eb46.png",alt:"在这里插入图片描述"}})]),s._v(" "),t("p",[s._v("MySQL的InnoDB 存储引擎使用一个指定大小的Redo log空间（一个环形的数据结构）。Redo log的空间通过"),t("strong",[s._v("innodb_log_file_size")]),s._v("和"),t("strong",[s._v("innodb_log_files_in_group")]),s._v("（默认2）参数来调节。将这俩参数相乘即可得到总的可用Redo log 空间。尽管技术上并不关心你是通过innodb_log_file_size还是innodb_log_files_in_group来调整Redo log空间，不过多数情况下还是通过innodb_log_file_size 来调节")]),s._v(" "),t("p",[t("strong",[s._v("难道是BufferPool设置的太小了？")])]),s._v(" "),t("p",[s._v("BufferPool的大小为80个G，并且空闲缓存页还有很多，排除了这种可能")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://img-blog.csdnimg.cn/7d17660f07c74c4188945439f5ff7985.png",alt:"在这里插入图片描述"}}),s._v(" "),t("strong",[s._v("后来猜测难道是主从同步拖慢了事务提交")])]),s._v(" "),t("p",[s._v("dba将主从同步方式从半同步复制改为异步复制解决了这个问题（下午2点并发比较大，所以事务提交慢在2点这个时间点比较明显）")]),s._v(" "),t("p",[t("strong",[s._v("主从同步方式")])]),s._v(" "),t("p",[t("strong",[s._v("异步复制")]),s._v("：MySQL默认的复制即是异步的，主库在执行完客户端提交的事务后会立即将结果返给给客户端，并不关心从库是否已经接收并处理，这样就会有一个问题，主如果crash掉了，此时主上已经提交的事务可能并没有传到从库上，如果此时，强行将从提升为主，可能导致新主上的数据不完整")]),s._v(" "),t("p",[t("strong",[s._v("半同步复制")]),s._v("：是介于全同步复制与全异步复制之间的一种，主库只需要等待至少一个从库节点收到并且 Flush Binlog 到 Relay Log 文件即可，主库不需要等待所有从库给主库反馈。同时，这里只是一个收到的反馈，而不是已经完全完成并且提交的反馈，如此，节省了很多时间")]),s._v(" "),t("p",[t("strong",[s._v("全同步复制")]),s._v("：指当主库执行完一个事务，所有的从库都执行了该事务才返回给客户端。因为需要等待所有从库执行完该事务才能返回，所以全同步复制的性能必然会收到严重的影响")]),s._v(" "),t("h2",{attrs:{id:"索引失效"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#索引失效"}},[s._v("#")]),s._v(" 索引失效")]),s._v(" "),t("p",[s._v("我在之前的文章分析过索引失效的场景和原因，有兴趣可以看看")]),s._v(" "),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" room_info "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" house_code "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("12003")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),t("p",[s._v("有这样一个sql，house_code类型为varchar类型，结果传入的具体值为数字，导致索引失效")]),s._v(" "),t("h2",{attrs:{id:"有更合适的索引不走-怎么办"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#有更合适的索引不走-怎么办"}},[s._v("#")]),s._v(" 有更合适的索引不走，怎么办？")]),s._v(" "),t("p",[s._v("MySQL在选取索引时，会参考索引的基数，基数是MySQL估算的，反映这个字段有多少种取值，估算的策略为选取几个页算出取值的平均值，再乘以页数，即为基数")]),s._v(" "),t("p",[s._v("查看索引基数")]),s._v(" "),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("show")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("index")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" table_name\n")])])]),t("p",[s._v("使用force index可以强制使用索引")]),s._v(" "),t("p",[s._v("重新统计索引信息，会重新计算索引的基数")]),s._v(" "),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("analyze")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("table")]),s._v("\n")])])]),t("h2",{attrs:{id:"数据库连接池打满"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数据库连接池打满"}},[s._v("#")]),s._v(" 数据库连接池打满")]),s._v(" "),t("p",[s._v("当获取不到数据库连接的时候，我们可以从下面几个方面排查")]),s._v(" "),t("ol",[t("li",[s._v("事务提交很慢，比如在应用中我们调用外部接口，外部接口迟迟没有响应，导致事务不能及时提交，释放连接")]),s._v(" "),t("li",[s._v("有慢sql")]),s._v(" "),t("li",[s._v("并发比较大，比如很多线程都对数据库的某一行就行更新，这样就会造成排队获取锁，排队的事务比较多时，就会造成数据库连接耗尽")])]),s._v(" "),t("p",[s._v("查看超时释放")]),s._v(" "),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("show")]),s._v(" variables "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" variable_name "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("like")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%timeout'")]),s._v("\n")])])]),t("p",[s._v("查看线程")]),s._v(" "),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 查看当前数据库运行的所有线程")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("show")]),s._v(" processlist\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- show processlist只能列出前100条，想看所有使用如下命令")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("show")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("full")]),s._v(" processlist\n")])])]),t("p",[s._v("查看最大连接数")]),s._v(" "),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("show")]),s._v(" variables "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("like")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%max_connections%'")]),s._v("\n")])])]),t("p",[s._v("修改最大连接数")]),s._v(" "),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("set")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("GLOBAL")]),s._v(" max_connections "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("200")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),t("h2",{attrs:{id:"读写分离导致读不到最新的数据"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#读写分离导致读不到最新的数据"}},[s._v("#")]),s._v(" 读写分离导致读不到最新的数据")]),s._v(" "),t("p",[s._v("应用层做了读写分离后，有可能会读取到旧数据，此时可以强制从主库查询数据。")]),s._v(" "),t("p",[s._v("说一个由于读写分离导致的生产问题，我们在service层有一个切面，根据方法名的前缀来决定走主库还是从库，有个方法名是以get开头，切面就将数据源设置为从库，结果里面有写入的操作，到了生产环境一直报错。为什么我们在测试环境没遇到这个问题？因为我们在测试环境主库和从库配置的是同一个数据源")]),s._v(" "),t("h2",{attrs:{id:"sql不满足最左前缀原则"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#sql不满足最左前缀原则"}},[s._v("#")]),s._v(" SQL不满足最左前缀原则")]),s._v(" "),t("h2",{attrs:{id:"避免大事务"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#避免大事务"}},[s._v("#")]),s._v(" 避免大事务")]),s._v(" "),t("p",[s._v("一般要在访问量比较低的时候执行批量修改数据")]),s._v(" "),t("p",[s._v("我们原来在生产遇到一个挺有意思的事情，批量更改数据，发出了大量的binlog，然后另外一个应用监听binlog同步数据，产生的大量binlog导致数据同步很慢，影响了正常的业务流程")]),s._v(" "),t("p",[t("strong",[s._v("数据修改尽量放在事务后部，降低锁时间")])]),s._v(" "),t("h2",{attrs:{id:"alter-table-之前-查看是否有长事务还未提交"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#alter-table-之前-查看是否有长事务还未提交"}},[s._v("#")]),s._v(" alter table 之前，查看是否有长事务还未提交")]),s._v(" "),t("p",[s._v("查看长事务：information_schema库innodb_trx表")]),s._v(" "),t("p",[s._v("查看锁：information_schema库innodb_locks表")]),s._v(" "),t("p",[s._v("查看阻塞的事务：information_schema库innodb_lock_waits表")])])}),[],!1,null,null,null);a.default=r.exports}}]);