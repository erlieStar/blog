(window.webpackJsonp=window.webpackJsonp||[]).push([[89],{485:function(t,s,a){"use strict";a.r(s);var n=a(56),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"面试官-jvm运行时数据区包含哪几部分-作用是啥"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#面试官-jvm运行时数据区包含哪几部分-作用是啥"}},[t._v("#")]),t._v(" 面试官：JVM运行时数据区包含哪几部分？作用是啥？")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/896f5bb63b594c90a4840aa57ff718f7.png?",alt:"在这里插入图片描述"}})]),t._v(" "),a("h2",{attrs:{id:"jdk-jre-jvm的联系是啥"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#jdk-jre-jvm的联系是啥"}},[t._v("#")]),t._v(" JDK，JRE，JVM的联系是啥？")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20190118193517872.PNG?",alt:"在这里插入图片描述"}})]),t._v(" "),a("p",[t._v("JVM Java Virtual Machine\nJDK Java Development Kit\nJRE Java Runtime Environment\n看上图官方的介绍讲的很清楚")]),t._v(" "),a("h2",{attrs:{id:"jvm的作用是啥"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#jvm的作用是啥"}},[t._v("#")]),t._v(" JVM的作用是啥？")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20190121174837892.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3p6dGlfZXJsaWU=,size_16,color_FFFFFF,t_70",alt:"在这里插入图片描述"}})]),t._v(" "),a("p",[t._v("JVM有2个特别有意思的特性，"),a("strong",[t._v("语言无关性和平台无关性")]),t._v("。")]),t._v(" "),a("p",[t._v("语言无关性是指实现了Java虚拟机规范的语言对可以在JVM上运行，如Groovy，和在大数据领域比较火的语言Scala，因为JVM最终运行的是class文件，只要最终的class文件复合规范就可以在JVM上运行。")]),t._v(" "),a("p",[t._v("平台无关性是指安装在不同平台的JVM会把class文件解释为本地的机器指令，从而实现Write Once，Run Anywhere")]),t._v(" "),a("h2",{attrs:{id:"jvm运行时数据区"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#jvm运行时数据区"}},[t._v("#")]),t._v(" JVM运行时数据区")]),t._v(" "),a("p",[t._v("Java虚拟机在执行Java程序的过程中会把它所管理的内存划分为若干个不同的数据区域。这些区域都有各自的用途，以及创建和销毁的时间，有的区域随着虚拟机进程的启动而存在，有些区域则依赖用户线程的启动和结束而建立和销毁。Java虚拟机所管理的内存将会包括以下几个运行时数据区域")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20190118194119929.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3p6dGlfZXJsaWU=,size_16,color_FFFFFF,t_70",alt:"在这里插入图片描述"}})]),t._v(" "),a("p",[a("strong",[t._v("其中方法区和堆是所有线程共享的数据区。程序计数器，虚拟机栈，本地方法栈是线程隔离的数据区，")]),t._v(" 画一个逻辑图")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20190120182439808.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3p6dGlfZXJsaWU=,size_16,color_FFFFFF,t_70",alt:"在这里插入图片描述"}})]),t._v(" "),a("h3",{attrs:{id:"程序计数器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#程序计数器"}},[t._v("#")]),t._v(" 程序计数器")]),t._v(" "),a("p",[t._v("程序计数器是一块较小的内存空间，它可以看作是当前线程所执行的字节码的行号指示器")]),t._v(" "),a("p",[t._v("为什么要记录当前线程所执行的字节码的行号？直接执行完不就可以了吗？")]),t._v(" "),a("p",[t._v("因为代码是在线程中运行的，线程有可能被挂起。即CPU一会执行线程A，线程A还没有执行完被挂起了，接着执行线程B，最后又来执行线程A了，CPU得知道执行线程A的哪一部分指令，线程计数器会告诉CPU。")]),t._v(" "),a("h3",{attrs:{id:"虚拟机栈"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#虚拟机栈"}},[t._v("#")]),t._v(" 虚拟机栈")]),t._v(" "),a("p",[t._v("虚拟机栈存储当前线程运行方法所需要的数据，指令，返回地址。虚拟机栈描述的是Java方法执行的内存模型："),a("strong",[t._v("每个方法在执行的同时都会创建一个栈帧用于存储局部变量表，操作数栈，动态链接，方法出口等信息")]),t._v("。每个方法从调用直至执行完成的过程，就对应着一个栈帧在虚拟机栈中从入栈到出栈的过程。")]),t._v(" "),a("p",[a("strong",[t._v("局部变量表")])]),t._v(" "),a("p",[t._v("存储存储局部变量，是一个定长为32位的局部变量空间。其中64位长度的long和double类型的数据会占用2个局部变量空间（Slot），其余的数据类型只占用一个。引用类型（new出来的对象）如何存储?看下图")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("methodOne")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v(" obj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20190120180006852.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3p6dGlfZXJsaWU=,size_16,color_FFFFFF,t_70",alt:"在这里插入图片描述"}}),t._v("\n如果局部变量是Java的8种基本基本数据类型，则存在局部变量表中，如果是引用类型。如String，局部变量表中存的是引用，而实例在堆中。")]),t._v(" "),a("p",[t._v("假如methodOne方法调用methodTwo方法时， 虚拟机栈的情况如下\n"),a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20190120182918856.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3p6dGlfZXJsaWU=,size_16,color_FFFFFF,t_70",alt:"在这里插入图片描述"}}),t._v("\n当虚拟机栈无法再放下栈帧的时候，就会出现StackOverflowError，演示一下")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("JavaVMStackSOF")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" stackLength "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("stackLeak")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        stackLength"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("stackLeak")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Throwable")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("JavaVMStackSOF")]),t._v(" oom "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("JavaVMStackSOF")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            oom"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("stackLeak")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Throwable")]),t._v(" e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"stack length: "')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" oom"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stackLength"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("在idea中设置运行时的线程的堆栈大小为如下")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/2019012021220829.png?",alt:"在这里插入图片描述"}})]),t._v(" "),a("p",[t._v("-Xss 参数的作用是设置每个线程的堆栈大小\n运行输出为")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20190120212415141.png",alt:"在这里插入图片描述"}})]),t._v(" "),a("p",[t._v("-Xss参数的值越大，打印输出的深度越大")]),t._v(" "),a("p",[a("strong",[t._v("操作数栈")])]),t._v(" "),a("p",[t._v("接着解释一下"),a("strong",[t._v("操作数栈")]),t._v("，还是比较容易理解的")]),t._v(" "),a("p",[t._v("有如下一个Test类")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Test")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("calc")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" b "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" c "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("300")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getSum")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("用javap反编译一下，看一下getSum的字节码文件内容")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("javap -v Test\n")])])]),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getSum")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  descriptor"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("II"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("I")]),t._v("\n  flags"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" ACC_PUBLIC\n  "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Code")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    stack"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" locals"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" args_size"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//操作数栈大小为2，本地变量表大小为3，入参有3个")]),t._v("\n       "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" iload_1 "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 局部变量1压栈")]),t._v("\n       "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" iload_2 "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 局部变量2压栈")]),t._v("\n       "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" iadd "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 栈顶2个元素相加，计算结果压栈")]),t._v("\n       "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" ireturn\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("LineNumberTable")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 指令与代码行数的偏移关系")]),t._v("\n      line "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("17")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("LocalVariableTable")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 局部变量表")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 作用域开始位置，作用偏移长度，槽位，变量名，类型描述")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Start")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Length")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Slot")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Name")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Signature")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("       "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Lcom")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("javashitang"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("jvm"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("       "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("     a   "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("I")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("       "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("     b   "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("I")]),t._v("\n")])])]),a("p",[a("strong",[t._v("当Java类编译完成时，操作数栈，本地变量表的大小就已经确定了。")])]),t._v(" "),a("p",[t._v("操作数栈的大小为2\n本地变量表有3个参数，this，a，b。其中this对象是jvm隐式传递的哈\n入参有3个，this（jvm隐式传递），a，b")]),t._v(" "),a("p",[t._v("LineNumberTable和LocalVariableTable我用jclasslib Bytecode viewer插件（查看字节码比较方便，我一般不用javap命令）来解释一下")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/51848b1cfb1c435f9657078b071c6bc4.png?",alt:"在这里插入图片描述"}})]),t._v(" "),a("p",[a("strong",[t._v("可以看到Test类的第17行代码对应的是getSum方法指令的第一行")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/82c4fe9c0c7f4724884e88aa5ecfb787.png",alt:"在这里插入图片描述"}})]),t._v(" "),a("p",[t._v("getSum方法有3个局部变量\nthis，作用范围在[Start PC, Start PC+Length]，在局部变量表的第0个位置，类型为Test类")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/c53e6108c97848dfbf95bc27a5a3110f.png",alt:"在这里插入图片描述"}})]),t._v(" "),a("p",[t._v("图示如下")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/839ab758fdc045eaba14fb4fe947193a.png?",alt:"在这里插入图片描述"}})]),t._v(" "),a("p",[t._v("假如getSum方法的入参是long，则局部变量表如下（64位长度的long和double类型的数据会占用2个局部变量空间（Slot），其余的数据类型只占用一个）")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("long")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getSum")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("long")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/70cb5b8954664ffb8f07005aae0c7c39.png",alt:"在这里插入图片描述"}})]),t._v(" "),a("p",[t._v("注意看局部变量表b的位置从2变为3了，因为a变量从原来占用一个slot变为占用2个slot")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/f38b74035c084b73af21a136e6762fd1.png?",alt:"在这里插入图片描述"}})]),t._v(" "),a("p",[t._v("以calc方法的执行演示一下程序计数器，操作数栈，局部变量表是如何协同工作的")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("calc")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" b "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" c "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("300")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("calc方法的字节码如下")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/6a3b886517a940c9b862eeb9d4460541.png",alt:"在这里插入图片描述"}})]),t._v(" "),a("p",[t._v("执行流程图示如下")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/84a55b89e84444cd92e4f7c232d584ee.png?",alt:"请添加图片描述"}})]),t._v(" "),a("p",[t._v("可能有小伙伴们对指令的作用不太熟悉，我就简单介绍一下")]),t._v(" "),a("p",[t._v("一般情况下，指令的格式有如下2种形式")]),t._v(" "),a("ol",[a("li",[t._v("操作指令")]),t._v(" "),a("li",[t._v("操作指令 操作数")])]),t._v(" "),a("p",[t._v("istore 100 将一个数值从操作数栈存储到局部变量表中的第100位\nistore_1 将一个数值从操作数栈存储到局部变量表中的第1位")]),t._v(" "),a("p",[a("strong",[t._v("为什么istore_1不写成istore 1，或者将istore 100写成istore_100?")])]),t._v(" "),a("p",[t._v("因为"),a("strong",[t._v("将一个数值从操作数栈存储到局部变量表中的第1位")]),t._v("这个操作经常发生，如果用istore_1则会占用1个字节，如果用istore 1会占用2个字节，所以用istore_1，可以节省空间。同时一个字节表示的种类数有限（128个，"),a("strong",[t._v("Java中各种操作指令占用1字节")]),t._v("），所以istore_<n>这种形式不能表示所有操作类型，只能一少部分指令用istore_<n>，其余的用istore n这种形式")]),t._v(" "),a("p",[a("strong",[t._v("所以你现在理解了上图中指令的偏移量不是连续的原因了吧！")])]),t._v(" "),a("p",[t._v("与操作类型相关的指令，会在最开头表明操作的类型")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/70d589d0df704ec8887c5b7bf94ea92f.png?",alt:"在这里插入图片描述"}})]),t._v(" "),a("p",[t._v("bipush：将一个常量加载到操作数栈\nistore：将一个数值从操作数栈存储到局部变量表\niload：将一个局部变量加载到操作栈\niadd：对操作数栈栈顶的2个只进行加法运算，并将结果重新存入操作数栈栈顶")]),t._v(" "),a("p",[a("strong",[t._v("动态链接")])]),t._v(" "),a("p",[t._v("Java有些方法，类加载的过程中就能知道具体执行的逻辑，而有些需要在运行的过程中才能确定具体执行的逻辑（多态），这就是动态链接在起作用，具体的实现没太看懂，就不过多分析了。")]),t._v(" "),a("h3",{attrs:{id:"本地方法栈"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#本地方法栈"}},[t._v("#")]),t._v(" 本地方法栈")]),t._v(" "),a("p",[t._v("本地方法栈（Native Method Stack）与虚拟机栈锁发挥的作用是非常相似的，他们之间的区别不过是虚拟机栈为虚拟机执行Java方法（也就是字节码）服务，而本地方法栈则为虚拟机使用到的Native方法服务。")]),t._v(" "),a("h3",{attrs:{id:"java堆"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#java堆"}},[t._v("#")]),t._v(" Java堆")]),t._v(" "),a("p",[t._v("对于大多数应用来说，Java堆（Java Heap）是Java虚拟机锁管理的内存中最大的一块。Java堆是所有线程共享的一块内存区域，在虚拟机启动时创建。此内存区域的唯一目的就是存放对象实例，几乎所有的对象实例都在这里分配内存")]),t._v(" "),a("h3",{attrs:{id:"方法区"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#方法区"}},[t._v("#")]),t._v(" 方法区")]),t._v(" "),a("p",[t._v("方法区（Method Area）与Java堆一样，是各个线程共享的内存区域，它用于存储已被虚拟机加载的类信息，常量，静态变量，即时编译器编译后的代码等数据。")]),t._v(" "),a("h2",{attrs:{id:"jvm内存模型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#jvm内存模型"}},[t._v("#")]),t._v(" JVM内存模型")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20190121172050704.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3p6dGlfZXJsaWU=,size_16,color_FFFFFF,t_70",alt:"在这里插入图片描述"}})]),t._v(" "),a("p",[t._v("由颜色可以看出，jdk1.8之前，堆内存被分为新生代，老年代，永久带，jdk1.8及以后堆内存被分成了新生代和老年代。新生代的区域又分为eden区，s0区，s1区，默认比例是8:1:1，元空间可以理解为直接的物理内存")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20190829233955325.png?",alt:"在这里插入图片描述"}})])])}),[],!1,null,null,null);s.default=e.exports}}]);