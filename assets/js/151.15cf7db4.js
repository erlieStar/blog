(window.webpackJsonp=window.webpackJsonp||[]).push([[151],{549:function(t,s,a){"use strict";a.r(s);var n=a(56),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"面试官-让你写一个单点登陆组件-你会怎么实现"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#面试官-让你写一个单点登陆组件-你会怎么实现"}},[t._v("#")]),t._v(" 面试官：让你写一个单点登陆组件，你会怎么实现？")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20200603222320392.jpg?",alt:"在这里插入图片描述"}})]),t._v(" "),a("h2",{attrs:{id:"单系统登陆"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#单系统登陆"}},[t._v("#")]),t._v(" 单系统登陆")]),t._v(" "),a("p",[t._v("在企业的发展初期，系统不是很多，每个系统也比较独立，每个系统都有各自的登陆模块，各类工作人员每天只登陆自己负责的系统即可。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20200516174033662.PNG?",alt:"在这里插入图片描述"}})]),t._v(" "),a("p",[t._v("这个时候登陆的实现比较简单，基于cookie和session就能实现，不太清楚的可以我看之前写的文章")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://blog.csdn.net/zzti_erlie/article/details/81395991?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522158962217719725247607141%2522%252C%2522scm%2522%253A%252220140713.130102334.pc%255Fblog.%2522%257D&request_id=158962217719725247607141&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~blog~first_rank_v2~rank_v25-2-81395991.nonecase&utm_term=cookie%20",target:"_blank",rel:"noopener noreferrer"}},[t._v("基于Java写一个登陆系统"),a("OutboundLink")],1)]),t._v(" "),a("h2",{attrs:{id:"多系统登陆"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#多系统登陆"}},[t._v("#")]),t._v(" 多系统登陆")]),t._v(" "),a("p",[t._v("随着企业的发展，系统越来越多，并且信息化程度也越来越高。各种系统之间的数据逐渐打通，工作流程形成闭环，这时系统逐渐微服务化。但是用户用着不爽了，每天工作得登录好几个系统，超级麻烦啊，能不能登陆一次就能在多个系统之间随意访问。为了应对这种场景，就得新建一个登陆服务")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20200516180820939.png?",alt:"在这里插入图片描述"}})]),t._v(" "),a("p",[t._v("比如我访问财务系统，没有登陆，然后跳转到登陆系统，登陆成功后，随意访问财务系统，运营系统，工单系统。")]),t._v(" "),a("p",[t._v("这就是单点登陆的思想，"),a("strong",[t._v("在多个系统中，只需要登录一次，就可以访问其他相互信任的系统")]),t._v("，那应该怎么实现呢？")]),t._v(" "),a("p",[t._v("既然是微服务，登陆系统不可能只能一个节点，如果还用cookie和session来实现，就会有问题。例如，登陆请求发到节点1，session存到节点1，第二次请求需要获取用户信息发到节点2，结果节点2找不到对应的session信息，让用户重新登陆。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20200516181956941.PNG",alt:"在这里插入图片描述"}})]),t._v(" "),a("p",[t._v("既然用户信息放到session中，不能共享，那我们将用户信息放到第三方组件，如mysql，redis中")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/2020051618301857.PNG?",alt:"在这里插入图片描述"}})]),t._v(" "),a("p",[t._v("说一下基于mysql的实现")]),t._v(" "),a("p",[t._v("用户信息表定义如下")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[t._v("CREATE TABLE `user_info` "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  `id` "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" NOT NULL AUTO_INCREMENT COMMENT '自增主键"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("用户id'"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  `username` "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("varchar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" NOT NULL COMMENT "),a("span",{pre:!0,attrs:{class:"token char"}},[t._v("'用户姓名'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  `password` "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("varchar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("60")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" NOT NULL COMMENT "),a("span",{pre:!0,attrs:{class:"token char"}},[t._v("'密码'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  `token` "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("varchar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("60")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" DEFAULT NULL COMMENT "),a("span",{pre:!0,attrs:{class:"token char"}},[t._v("'token'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  `token_expire` datetime DEFAULT NULL COMMENT 'token失效时间'"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  `create_time` datetime DEFAULT CURRENT_TIMESTAMP COMMENT "),a("span",{pre:!0,attrs:{class:"token char"}},[t._v("'创建时间'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  `update_time` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT "),a("span",{pre:!0,attrs:{class:"token char"}},[t._v("'更新时间'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("PRIMARY")]),t._v(" KEY "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("`id`"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("USING")]),t._v(" BTREE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  KEY `idx_token_tokenExpire` "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("`token`"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("`token_expire`"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("USING")]),t._v(" BTREE\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" ENGINE"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("InnoDB")]),t._v(" AUTO_INCREMENT"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DEFAULT")]),t._v(" CHARSET"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("utf8mb4 COMMENT"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token char"}},[t._v("'用户信息表'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("ol",[a("li",[t._v("用户每次登陆先生成一个token，例如token=md5(userId+时间戳)，登陆成功后，reponse设置cookie，loginToken(cookie名)=token(cookie值)")]),t._v(" "),a("li",[t._v("各个子系统配置登陆拦截器，没有找到cookie名字为loginToken则提示需要登陆，如果有取出value访问登陆系统判断用户是否已经登陆，返回成功，进入系统，返回失败，提示登陆。")]),t._v(" "),a("li",[t._v("登陆系统校验用户登陆也特别简单，根据各个子系统传入的token值，从user_info表中查询用户信息，查不到则返回登陆失败，查到再判断当前时间是否大于tokenExpire，如果大于也返回登陆失败，否则返回登陆成功，如果愿意的话每次请求你都可以重新刷新tokenExpire")])]),t._v(" "),a("p",[t._v("当然还有一个需要注意的点，通常每个服务都有自己的域名，如财务系统的域名为financial.javashitang.com，运营系统的域名为operate.javashitang.com，登陆系统的域名为sso.javashitang.com。")]),t._v(" "),a("p",[t._v("如果用户登陆后，cookie的domain属性是sso.javashitang.com，由于cookie是不能跨域的，所以用户在访问financial.javashitang.com和operate.javashitang.com的时候不会带上这个cookie，所以该如何解决呢？")]),t._v(" "),a("h3",{attrs:{id:"同域下的登陆"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#同域下的登陆"}},[t._v("#")]),t._v(" 同域下的登陆")]),t._v(" "),a("p",[t._v("用户登陆后，cookie域设置为顶域，即.javashitang.com，这样所有的子系统都可以访问到顶域的cookie，访问sso.javashitang.com，financial.javashitang.com都会带上这个cookie")]),t._v(" "),a("h3",{attrs:{id:"不同域下的登陆"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#不同域下的登陆"}},[t._v("#")]),t._v(" 不同域下的登陆")]),t._v(" "),a("p",[t._v("同域下的单点登录用了cookie的顶域特性，那么不同域呢？\n其实也不难搞，之前我们把token放到cookie中。现在登陆的时候直接通过接口返回，用户请求的时候将token放到header中，放到请求参数中也行，只不过可能会有安全问题。")]),t._v(" "),a("p",[t._v("我看网上有很多文章介绍用cas实现单点登录，没啥经验，有兴趣的可以参考相关资料")]),t._v(" "),a("h3",{attrs:{id:"开源项目"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#开源项目"}},[t._v("#")]),t._v(" 开源项目")]),t._v(" "),a("p",[t._v("如果你对单点登录，Spring Cloud，Spring Boot Starter感兴趣的话，可以看一下我针对这篇文章写的demo，实现单点登录真的超级简单。")]),t._v(" "),a("ol",[a("li",[t._v("加依赖")]),t._v(" "),a("li",[t._v("配置类上加上@EnableSso")]),t._v(" "),a("li",[t._v("写如下配置")])]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("javashitang")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("sso")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("enable")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 是否启用sso，加上@EnableSso注解，但是enable为false也不会启用")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("includePattern")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 要拦截的路径，多个用英文逗号分隔")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("excludePattern")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 要排除的路径，多个用英文逗号分隔")]),t._v("\n")])])]),a("p",[t._v("不能再简单了吧？")]),t._v(" "),a("p",[t._v("github地址：\nhttps://github.com/erlieStar/sso-spring-cloud-project")])])}),[],!1,null,null,null);s.default=e.exports}}]);