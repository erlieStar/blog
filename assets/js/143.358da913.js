(window.webpackJsonp=window.webpackJsonp||[]).push([[143],{540:function(t,s,a){"use strict";a.r(s);var v=a(56),r=Object(v.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"面试官-生产环境发生问题-你一般怎么排查-linux工具篇"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#面试官-生产环境发生问题-你一般怎么排查-linux工具篇"}},[t._v("#")]),t._v(" 面试官：生产环境发生问题，你一般怎么排查？（Linux工具篇）")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/367e3645998d4294a646d0a7dc4b61b4.jpg?",alt:"请添加图片描述"}})]),t._v(" "),a("h2",{attrs:{id:"cpu篇"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cpu篇"}},[t._v("#")]),t._v(" CPU篇")]),t._v(" "),a("h3",{attrs:{id:"平均负载"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#平均负载"}},[t._v("#")]),t._v(" 平均负载")]),t._v(" "),a("p",[a("strong",[t._v("本篇文章是我看了极客时间《Linux性能优化实战》《趣谈网络协议》专栏做的一个总结")])]),t._v(" "),a("p",[t._v("当系统变慢时，我们经常用uptime或者top命令来查看系统的负载情况，如下命令所示")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@VM-0-14-centos ~"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# uptime")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("15")]),t._v(":30:04 up "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("108")]),t._v(" days, "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("23")]),t._v(":29,  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" user,  load average: "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.07")]),t._v(", "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.05")]),t._v(", "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.05")]),t._v("\n")])])]),a("table",[a("thead",[a("tr",[a("th",[t._v("值")]),t._v(" "),a("th",[t._v("含义")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("15:30:04")]),t._v(" "),a("td",[t._v("当前时间")])]),t._v(" "),a("tr",[a("td",[t._v("up 108 days, 23:29")]),t._v(" "),a("td",[t._v("系统运行时间")])]),t._v(" "),a("tr",[a("td",[t._v("1 user")]),t._v(" "),a("td",[t._v("正在登陆用户数")])]),t._v(" "),a("tr",[a("td",[t._v("load average: 0.07, 0.05, 0.05")]),t._v(" "),a("td",[t._v("过去1分钟， 5分钟，15分钟的平均负载")])])])]),t._v(" "),a("p",[a("strong",[t._v("什么是平均负载？")])]),t._v(" "),a("p",[t._v("平均负载是指单位时间内，系统处于"),a("strong",[t._v("可运行状态")]),t._v("和"),a("strong",[t._v("不可中断状态")]),t._v("的平均进程数")]),t._v(" "),a("p",[a("strong",[t._v("可运行状态")]),t._v("：正在使用CPU或者等待CPU的进程，即处于Running或Runnable状态\n"),a("strong",[t._v("不可中断状态")]),t._v("：进程不能被中断，例如进程向磁盘读写数据时，为了维护数据的一致性。在得到磁盘的回复之前，它是不能被打断的（会释放cpu，但是不会响应kill命令等）")]),t._v(" "),a("p",[a("strong",[t._v("CPU的理想状态就是每个CPU上都刚好运行着一个进程，这样可以让CPU得到更充分的利用")])]),t._v(" "),a("p",[t._v("当平均负载为2时，对CPU意味着什么呢？")]),t._v(" "),a("ol",[a("li",[t._v("在有1个CPU的系统上，意味着有一半进程竞争不到CPU")]),t._v(" "),a("li",[t._v("在有2个CPU的系统上，意味着所有CPU刚好被利用")]),t._v(" "),a("li",[t._v("在有4个CPU的系统上，意味着CPU有50%的空闲")])]),t._v(" "),a("p",[t._v("所以要评判负载是否合理，需要先知道CPU个数，可以通过如下命令获取")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@VM-0-14-centos ~"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# grep 'model name' /proc/cpuinfo | wc -l")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n")])])]),a("p",[a("strong",[t._v("平均负载为多少时比较合理呢？")]),t._v("\n其实并没有一个准确的值，我们需要根据历史的监控数据作出相应的判断，看是否有明显升高的趋势。"),a("strong",[t._v("一般情况下当平均负载高于 CPU 数量 70% 的时候，你就应该分析排查负载高的问题了")])]),t._v(" "),a("h3",{attrs:{id:"cpu上下文切换"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cpu上下文切换"}},[t._v("#")]),t._v(" CPU上下文切换")]),t._v(" "),a("p",[t._v("Linux操作系统是一个多任务操作系统，它支持远大于CPU数量的任务同时运行。当然这些任务并不是真的在同时运行，只是在很短的时间内，CPU轮流执行这些任务，造成多任务同时运行的错觉。")]),t._v(" "),a("p",[t._v("CPU上下文切换就是把上一个任务运行需要的CPU上下文（寄存器和程序计数器）保存下来，加载新任务的CPU上下文到寄存器和程序计数器，然后跳转到程序计数器执行的代码位置，执行新任务")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/d5550a6a8f5e4fa880d551c7c73bb9fc.png",alt:"在这里插入图片描述"}})]),t._v(" "),a("p",[a("strong",[t._v("频繁的上下文切换，会将CPU都耗费在CPU上下文的保存和恢复上，导致任务运行的时间变短，最终影响系统的性能")])]),t._v(" "),a("p",[t._v("CPU的上下文切换主要分为如下三种")]),t._v(" "),a("ol",[a("li",[t._v("进程上下文切换")]),t._v(" "),a("li",[t._v("线程上下文切换")]),t._v(" "),a("li",[t._v("中断上下文切换")])]),t._v(" "),a("p",[a("strong",[t._v("进程上下文切换")])]),t._v(" "),a("p",[t._v("触发进程上下文切换的几个场景如下")]),t._v(" "),a("ol",[a("li",[t._v("分给进程的时间片被耗尽")]),t._v(" "),a("li",[t._v("进程在资源资源不足（比如内存不足），或者等待io完成时")]),t._v(" "),a("li",[t._v("当有优先级更高的进程运行时，为了保证高优先级的进程运行，当前进程会被挂起")]),t._v(" "),a("li",[t._v("发生硬件中断时，CPU上的进程会被挂起，转而执行内核中的中断服务程序")])]),t._v(" "),a("p",[a("strong",[t._v("线程上下文切换")])]),t._v(" "),a("p",[a("strong",[t._v("线程是调度的基本单位，而进程则是资源拥有的基本单位")])]),t._v(" "),a("ol",[a("li",[t._v("当进程只有一个线程时，可以认为进程等于线程")]),t._v(" "),a("li",[t._v("当进程拥有多个线程时，会共享相同的虚拟内存和全局变量等资源，这些资源在上下文切换时不需要被更改。因此同进程内的线程切换，比多进程间的切换消耗更少的资源")]),t._v(" "),a("li",[t._v("线程的私有数据，如栈和寄存器，在进行上下文切换时是需要保存的")])]),t._v(" "),a("p",[a("strong",[t._v("中断上下文切换")])]),t._v(" "),a("p",[a("strong",[t._v("为了快速响应硬件的事件，中断处理会打断进程的正常调度和执行。对同一个 CPU 来说，中断处理比进程拥有更高的优先级")])]),t._v(" "),a("p",[a("strong",[t._v("针对频繁上下文切换的问题，我们可以使用vmstat命令来查看")]),t._v("，cs一列代表了上下文切换的次数")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@VM-0-14-centos ~"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# vmstat")]),t._v("\nprocs -----------memory---------- ---swap-- -----io---- -system-- ------cpu-----\n r  b   swpd   "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("free")]),t._v("   buff  cache   si   so    bi    bo   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v("   cs us sy "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("id")]),t._v(" wa st\n "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("      "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("212380")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("136000")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1543228")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("99")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n")])])]),a("table",[a("thead",[a("tr",[a("th",[t._v("system")]),t._v(" "),a("th",[t._v("含义")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("in")]),t._v(" "),a("td",[t._v("每秒中断的次数")])]),t._v(" "),a("tr",[a("td",[t._v("cs")]),t._v(" "),a("td",[t._v("每秒上下文切换次数")])])])]),t._v(" "),a("p",[a("strong",[t._v("如果我们希望对特定的进程进行监控，可以使用pidstat -w命令")])]),t._v(" "),a("p",[a("strong",[t._v("pidstat是sysstat工具的一个命令，用于监控全部或指定进程的cpu、内存、线程、设备IO等系统资源的占用情况")])]),t._v(" "),a("p",[t._v("pidstat首次运行时显示自系统启动开始的各项统计信息，之后运行pidstat将显示自上次运行该命令以后的统计信息。用户可以通过指定统计的次数和时间来获得所需的统计信息")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 每隔3s输出一次数据")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@VM-0-14-centos ~"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# pidstat -w 3")]),t._v("\nLinux "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.10")]),t._v(".0-1127.19.1.el7.x86_64 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("VM-0-14-centos"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("      "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("/10/2021      _x86_64_        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" CPU"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n08:13:38 PM   "),a("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("UID")]),t._v("       PID   cswch/s nvcswch/s  Command\n08:13:41 PM     "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("         "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),t._v("      "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.66")]),t._v("      "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.00")]),t._v("  ksoftirqd/0\n08:13:41 PM     "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("         "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),t._v("      "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.33")]),t._v("      "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.00")]),t._v("  migration/0\n08:13:41 PM     "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("         "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20.27")]),t._v("      "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.00")]),t._v("  rcu_sched\n")])])]),a("p",[a("strong",[t._v("结果中的cswch和nvcswch是我们需要重点关注的对象")])]),t._v(" "),a("p",[a("strong",[t._v("cswch（自愿上下文切换）")]),t._v("：进程无法获取所需要的资源，导致的上下文切换。例如IO，内存等系统资源不足时，就会发生自愿上下文切换\n"),a("strong",[t._v("nvcswch（非自愿上下文切换）")]),t._v("：进程由于时间片已到等愿意，被系统强制调度，进而发生的上下文切换。比如，当大量进程都在争抢CPU时，就容易发生非自愿上下文切换")]),t._v(" "),a("h3",{attrs:{id:"线上cpu飙高如何排查"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#线上cpu飙高如何排查"}},[t._v("#")]),t._v(" 线上CPU飙高如何排查")]),t._v(" "),a("ol",[a("li",[t._v("先执行top，找到CPU占用比较高的进程")]),t._v(" "),a("li",[t._v("jstack 进程id > show.txt")]),t._v(" "),a("li",[t._v('找到进程中CPU占用比较高的线程，获取到线程id（执行top -p 高进程pid -H），线程id转为16进制（printf "%x" 高进程pid）')]),t._v(" "),a("li",[t._v("到show.txt文件中根据线程id查看线程的具体状态即可")])]),t._v(" "),a("p",[a("strong",[t._v("分享一个我们使用PageHelper导致死循环的例子")])]),t._v(" "),a("p",[t._v("我们有个项目每天晚上定时从数据库获取数据做操作，用PageHelper做了分页，逻辑也很简单")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" pageIndex "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 分页获取数据")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" count "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getData")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pageIndex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" pageSize"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("count "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\tpageIndex"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("这个项目运行了一段时间后，CPU占用越来越高，最终定位到是这段代码死循环了。")]),t._v(" "),a("p",[a("strong",[t._v("死循环原因如下：PageHelper有个属性reasonable，当reasonable = true，offset大于总记录数时，会默认返回最后一页数据，结果就一直能获取数据，造成了死循环")])]),t._v(" "),a("h3",{attrs:{id:"cpu使用率低但是负载高"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cpu使用率低但是负载高"}},[t._v("#")]),t._v(" CPU使用率低但是负载高")]),t._v(" "),a("p",[a("strong",[t._v("当系统负载高时，并不意味着CPU资源不足，只是意味着运行的任务过多，这些任务有可能在等待或者使用cpu，也有可能等待IO完成")])]),t._v(" "),a("p",[t._v("当系统负载高，并且CPU使用率也比较高时，一般意味着CPU资源不足")]),t._v(" "),a("p",[t._v("而当系统负载高，而CPU使用率比较低时，一般有如下两种情况")]),t._v(" "),a("ol",[a("li",[t._v("CPU频繁的进行上下文切换（比如应用中开启了太多的线程），导致任务执行的时间比较短（利用vmstat命令查看，如果cs列或in列的值很大，说明就是这种情况）")]),t._v(" "),a("li",[t._v("IO任务太多，导致大量进程处于不可中断状态（利用top命令查看，cpu使用百分比中，wa状态（cpu等待io完成）的使用百分比很高时，说明就是这种情况）")])]),t._v(" "),a("h3",{attrs:{id:"cpu问题排查套路"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cpu问题排查套路"}},[t._v("#")]),t._v(" CPU问题排查套路")]),t._v(" "),a("ol",[a("li",[t._v("先top查看系统的负载情况")]),t._v(" "),a("li",[t._v("如果负载高，CPU高，一般意味着CPU资源不足（也有可能发生死循环之类的）")]),t._v(" "),a("li",[t._v("如果负载高，CPU低，需要接着排查\n3.1 执行vmstat，查看in列（每秒中断的次数）和cs列（每秒上下文切换次数）比较高，则表明CPU频繁的进行上下文切换\n3.2 top发现cpu的iowait比较高（wa列的值），则利用I/0问题排查套路接着排查")])]),t._v(" "),a("p",[t._v("I/O问题排查套路，后面会详细分析")]),t._v(" "),a("p",[a("strong",[t._v("当发现应用频繁的进行上下文切换时，用pidstat -w确定哪个进程频繁的进行上下文切换，接着用pstree pid查看进程开启的线程数量，查看线程数量是否合理")]),t._v("。")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root"),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@VM")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("14")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("centos "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("# pstree "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("31528")]),t._v("\njava───"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("169")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("java"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),a("p",[t._v("也可以执行如下命令查看Threads列")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@VM-0-14-centos ~"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# cat /proc/31528/status")]),t._v("\nName:   java\nUmask:  0022\n")])])]),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/752e390b50a8437a93b13c50bc01258c.png?",alt:"在这里插入图片描述"}})]),t._v(" "),a("h2",{attrs:{id:"内存篇"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#内存篇"}},[t._v("#")]),t._v(" 内存篇")]),t._v(" "),a("p",[t._v("我们经常用free命令查看系统中内存的使用情况，默认单位是kb，使用时我们一般指定显示单位，如-m -g")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@VM-0-14-centos ~"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# free ")]),t._v("\n              total        used        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("free")]),t._v("      shared  buff/cache   available\nMem:        "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3880316")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1979852")]),t._v("      "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("236792")]),t._v("        "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3100")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1663672")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1616760")]),t._v("\nSwap:             "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("           "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("           "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n")])])]),a("p",[t._v("可以看到输出总共有两行，分别是物理内存Mem和交换分区Swap的使用情况")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("值")]),t._v(" "),a("th",[t._v("含义")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("total")]),t._v(" "),a("td",[t._v("总内存大小")])]),t._v(" "),a("tr",[a("td",[t._v("used")]),t._v(" "),a("td",[t._v("\b已使用内存大小，包含了共享内存")])]),t._v(" "),a("tr",[a("td",[t._v("free")]),t._v(" "),a("td",[t._v("未使用内存的大小")])]),t._v(" "),a("tr",[a("td",[t._v("shared")]),t._v(" "),a("td",[t._v("共享内存的大小")])]),t._v(" "),a("tr",[a("td",[t._v("buff/cache")]),t._v(" "),a("td",[t._v("buff/cache 是缓存和缓冲区的大小")])]),t._v(" "),a("tr",[a("td",[t._v("available")]),t._v(" "),a("td",[t._v("可用内存大小")])])])]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@VM-0-14-centos ~"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# free -m")]),t._v("\n              total        used        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("free")]),t._v("      shared  buff/cache   available\nMem:           "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3789")]),t._v("        "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1935")]),t._v("         "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("228")]),t._v("           "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("        "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1625")]),t._v("        "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1576")]),t._v("\nSwap:             "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("           "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("           "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n")])])]),a("p",[a("strong",[t._v("available不仅包含free，还包含了可回收的缓存，所以一般比free更大，当然并不是所有缓存都可以被回收，因为有些缓存可能正在使用中")])]),t._v(" "),a("h3",{attrs:{id:"交换分区swap是做什么用的"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#交换分区swap是做什么用的"}},[t._v("#")]),t._v(" 交换分区Swap是做什么用的？")]),t._v(" "),a("p",[a("strong",[t._v("Swap说白了就是把一块磁盘空间或者一个本地文件，当成内存来使用，这样就可以增大系统的可用内存")]),t._v("，生产环境我们一般不使用Swap分区。它包括换入和换出的过程")]),t._v(" "),a("ol",[a("li",[t._v("换出，将进程暂时不用的内存存储到磁盘中，并释放这些数据占用的内存")]),t._v(" "),a("li",[t._v("换入，当进程再次访问这些内存的时候，将他们从磁盘读到内存中来")])]),t._v(" "),a("h3",{attrs:{id:"怎么理解内存中的buffer和cache"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#怎么理解内存中的buffer和cache"}},[t._v("#")]),t._v(" 怎么理解内存中的Buffer和Cache？")]),t._v(" "),a("p",[t._v("free命令的输出其他列都比较容易理解，Buffer和Cache分别代表什么呢？")]),t._v(" "),a("p",[t._v("从字面来看，Buffer是缓冲区，而Cache是缓存，两者都是数据在内存中的临时存储。那么这两种临时存储有什么区别吗？")]),t._v(" "),a("p",[a("strong",[t._v("Buffer是对磁盘数据的缓存，而Cache是文件数据的缓存，他们既会用到读请求中，也会用到写请求中")])]),t._v(" "),a("h3",{attrs:{id:"如何排查内存泄漏和内存溢出"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何排查内存泄漏和内存溢出"}},[t._v("#")]),t._v(" 如何排查内存泄漏和内存溢出")]),t._v(" "),a("p",[t._v("因为Java程序都是基于堆来管理和使用内存的，所以当我们排查内存泄漏和内存溢出时，一般使用jdk自带的工具")]),t._v(" "),a("ol",[a("li",[t._v("使用jmap命令生成heapdump文件")]),t._v(" "),a("li",[t._v("使用Eclipse Memory Analyzer来分析对象的使用情况")])]),t._v(" "),a("h2",{attrs:{id:"io篇"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#io篇"}},[t._v("#")]),t._v(" IO篇")]),t._v(" "),a("h3",{attrs:{id:"磁盘的性能指标"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#磁盘的性能指标"}},[t._v("#")]),t._v(" 磁盘的性能指标")]),t._v(" "),a("p",[t._v("使用率：磁盘处理I/O的时间百分比（%util）")]),t._v(" "),a("p",[t._v("饱和度：磁盘处理I/O的繁忙程度（avgqu-sz，排队请求数越多越繁，和你去超市买东西一个道理）")]),t._v(" "),a("p",[t._v("IOPS（Input/Output Per Second）：每秒的I/O请求数（r/s+w/s）")]),t._v(" "),a("p",[t._v("吞吐量：每秒的I/O请求大小（rkB/s+wkB/s）")]),t._v(" "),a("p",[t._v("响应时间：I/O请求从发出到收到响应的间隔时间（r_await+w_await）")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@VM-0-14-centos ~"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# iostat -x 1")]),t._v("\nLinux "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.10")]),t._v(".0-1127.19.1.el7.x86_64 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("VM-0-14-centos"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("      "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("/12/2021      _x86_64_        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" CPU"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\navg-cpu:  %user   %nice %system %iowait  %steal   %idle\n           "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.60")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.00")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.53")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.06")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.00")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("98.81")]),t._v("\n\nDevice:         rrqm/s   wrqm/s     r/s     w/s    rkB/s    wkB/s avgrq-sz avgqu-sz   await r_await w_await  svctm  %util\nvda               "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.00")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.88")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.01")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4.11")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.25")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("32.02")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("15.67")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.02")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4.56")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8.79")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4.55")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.29")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.12")]),t._v("\nscd0              "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.00")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.00")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.00")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.00")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.00")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.00")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("18.65")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.00")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.21")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.21")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.00")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.20")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.00")]),t._v("\n")])])]),a("table",[a("thead",[a("tr",[a("th",[t._v("值")]),t._v(" "),a("th",[t._v("含义")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("rrqm/s")]),t._v(" "),a("td",[t._v("每秒合并的读请求数，%rrqm表示合并读请求的百分比")])]),t._v(" "),a("tr",[a("td",[t._v("wrqm/s")]),t._v(" "),a("td",[t._v("每秒合并的写请求数，%wrqm表示合并写请求的百分比")])]),t._v(" "),a("tr",[a("td",[t._v("r/s")]),t._v(" "),a("td",[t._v("每秒发送给磁盘的读请求数，为合并后的请求数")])]),t._v(" "),a("tr",[a("td",[t._v("w/s")]),t._v(" "),a("td",[t._v("每秒发送给磁盘的写请求数，为合并后的请求数")])]),t._v(" "),a("tr",[a("td",[t._v("rkB/s")]),t._v(" "),a("td",[t._v("每秒从磁盘读取的数据量，单位为kb")])]),t._v(" "),a("tr",[a("td",[t._v("wkB/s")]),t._v(" "),a("td",[t._v("每秒向磁盘写入的数据量，单位为kb")])]),t._v(" "),a("tr",[a("td",[t._v("avgrq-sz")]),t._v(" "),a("td",[t._v("每个IO的平均扇区数，即所有请求的平均大小，以扇区（512字节）为单位")])]),t._v(" "),a("tr",[a("td",[t._v("avgqu-sz")]),t._v(" "),a("td",[t._v("平均未完成的IO请求数量，即平均意义上的请求队列长度")])]),t._v(" "),a("tr",[a("td",[t._v("await")]),t._v(" "),a("td",[t._v("平均每次 I/O 操作的时间，包括队列中的等待时间和设备实际处理的时间，单位为毫秒")])]),t._v(" "),a("tr",[a("td",[t._v("r_await")]),t._v(" "),a("td",[t._v("读请求处理完成等待时间，包括队列中的等待时间和设备实际处理的时间，单位为毫秒")])]),t._v(" "),a("tr",[a("td",[t._v("w_await")]),t._v(" "),a("td",[t._v("写请求处理完成等待时间，包括队列中的等待时间和设备实际处理的时间，单位为毫秒")])]),t._v(" "),a("tr",[a("td",[t._v("svctm")]),t._v(" "),a("td",[t._v("处理I/O请求所需的平均时间（不包括等待时间），单位为毫秒。这是推断的数据，并不保证完全准确")])]),t._v(" "),a("tr",[a("td",[t._v("%util")]),t._v(" "),a("td",[t._v("磁盘处理I/O的时间百分比，即使用率，由于可能存在并行I/O，100%并不一定表明磁盘I/O饱和")])])])]),t._v(" "),a("p",[a("strong",[t._v("合并请求怎么理解？")])]),t._v(" "),a("p",[t._v("块设备有相应的调度算法。如果两个IO发生在相邻的数据块时，他们可以合并成1个IO。\n你可以类比送快递，假如快递员要送的快递在2，16，5，17楼。快递员肯定是先送2，5楼的快递。再送16，17楼的快递。而不是依次送2，16，5，17楼的快递")]),t._v(" "),a("h3",{attrs:{id:"进程i-o监测"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#进程i-o监测"}},[t._v("#")]),t._v(" 进程I/O监测")]),t._v(" "),a("p",[t._v("iostat只提供磁盘整体的I/O数据，如果要观察进程的I/O情况，我们可以使用pidstat命令")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@VM"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("14")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("centos "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("# pidstat "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("d\nLinux "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1127.19")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.")]),t._v("el7"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("x86_64")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("VM"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("14")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("centos"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("      "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2021")]),t._v("      "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("_x86_64_")]),t._v("        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" CPU"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("02")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("06")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("44")]),t._v(" PM   UID       PID   kB_rd"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("s   kB_wr"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("s kB_ccwr"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("s  Command\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("02")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("06")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("44")]),t._v(" PM     "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("         "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("      "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.14")]),t._v("      "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4.00")]),t._v("      "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.40")]),t._v("  systemd\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("02")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("06")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("44")]),t._v(" PM     "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("        "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("35")]),t._v("      "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.00")]),t._v("      "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.00")]),t._v("      "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.00")]),t._v("  kswapd0\n")])])]),a("table",[a("thead",[a("tr",[a("th",[t._v("值")]),t._v(" "),a("th",[t._v("含义")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("UID")]),t._v(" "),a("td",[t._v("用户id")])]),t._v(" "),a("tr",[a("td",[t._v("PID")]),t._v(" "),a("td",[t._v("进程id")])]),t._v(" "),a("tr",[a("td",[t._v("kB_rd/s")]),t._v(" "),a("td",[t._v("每秒读取的数据大小，单位kb")])]),t._v(" "),a("tr",[a("td",[t._v("kB_wr/s")]),t._v(" "),a("td",[t._v("每秒发出的写请求数据大小，单位kb")])]),t._v(" "),a("tr",[a("td",[t._v("kB_ccwr/s")]),t._v(" "),a("td",[t._v("每秒取消的写请求数据大小，单位kb")])])])]),t._v(" "),a("h3",{attrs:{id:"查看进程具体读写的文件和内容"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查看进程具体读写的文件和内容"}},[t._v("#")]),t._v(" 查看进程具体读写的文件和内容")]),t._v(" "),a("p",[a("strong",[t._v("我们一般用strace+lsof命令来查看进程具体读写的文件和内容")])]),t._v(" "),a("p",[a("strong",[t._v("strace常用来跟踪进程执行时的系统调用和所接收的信号")]),t._v("。 在Linux世界，进程不能直接访问硬件设备，当进程需要访问硬件设备(比如读取磁盘文件，接收网络数据等等)时，必须由用户态模式切换至内核态模式，通 过系统调用访问硬件设备。strace可以跟踪到一个进程产生的系统调用,包括参数，返回值，执行消耗的时间")]),t._v(" "),a("p",[a("strong",[t._v("lsof(list open files)是一个查看进程打开的文件的工具")]),t._v("。在linux系统中，一切皆文件，所以lsof命令不仅可以查看进程打开的文件、目录，还可以查看进程的socket等相关信息")]),t._v(" "),a("h3",{attrs:{id:"i-o问题排查套路"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#i-o问题排查套路"}},[t._v("#")]),t._v(" I/O问题排查套路")]),t._v(" "),a("ol",[a("li",[t._v("top发现iowait比较高")]),t._v(" "),a("li",[t._v("用iostat查看是哪个进程读写比较高")]),t._v(" "),a("li",[t._v("通过strace+lsof找出进程读取的文件和内容，进而确定I/O出现瓶颈的原因")])]),t._v(" "),a("h2",{attrs:{id:"常用命令汇总"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常用命令汇总"}},[t._v("#")]),t._v(" 常用命令汇总")]),t._v(" "),a("h3",{attrs:{id:"top"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#top"}},[t._v("#")]),t._v(" top")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/8cac2f63d88a4a25b6bb29ee76ff274f.png?",alt:"请添加图片描述"}})]),t._v(" "),a("h3",{attrs:{id:"第一行-基本信息"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第一行-基本信息"}},[t._v("#")]),t._v(" 第一行（基本信息）")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("值")]),t._v(" "),a("th",[t._v("含义")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("16:16:26")]),t._v(" "),a("td",[t._v("当前时间")])]),t._v(" "),a("tr",[a("td",[t._v("up 109 days, 15 min")]),t._v(" "),a("td",[t._v("系统运行时间，这里表示运行了109天，15分钟")])]),t._v(" "),a("tr",[a("td",[t._v("1 user")]),t._v(" "),a("td",[t._v("正在登陆用户数")])]),t._v(" "),a("tr",[a("td",[t._v("load average: 0.00, 0.02, 0.05")]),t._v(" "),a("td",[t._v("过去1分钟， 5分钟，15分钟的平均负载")])])])]),t._v(" "),a("h3",{attrs:{id:"第二行-任务信息"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第二行-任务信息"}},[t._v("#")]),t._v(" 第二行（任务信息）")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("值")]),t._v(" "),a("th",[t._v("含义")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("101 total")]),t._v(" "),a("td",[t._v("进程总数")])]),t._v(" "),a("tr",[a("td",[t._v("1 running")]),t._v(" "),a("td",[t._v("正在运行的进程数")])]),t._v(" "),a("tr",[a("td",[t._v("100 sleeping")]),t._v(" "),a("td",[t._v("睡眠状态的进程数")])]),t._v(" "),a("tr",[a("td",[t._v("0 stopped")]),t._v(" "),a("td",[t._v("停止的进程数")])]),t._v(" "),a("tr",[a("td",[t._v("0 zombie")]),t._v(" "),a("td",[t._v("僵尸进程数")])])])]),t._v(" "),a("h3",{attrs:{id:"第三行-cpu使用情况"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第三行-cpu使用情况"}},[t._v("#")]),t._v(" 第三行（CPU使用情况）")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("值")]),t._v(" "),a("th",[t._v("含义")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("us")]),t._v(" "),a("td",[t._v("User Time，CPU执行用户进程百分比")])]),t._v(" "),a("tr",[a("td",[t._v("sy")]),t._v(" "),a("td",[t._v("System Time，CPU在内核运行百分比")])]),t._v(" "),a("tr",[a("td",[t._v("ni")]),t._v(" "),a("td",[t._v("Nine Time，调整进程优先级所用百分比")])]),t._v(" "),a("tr",[a("td",[t._v("id")]),t._v(" "),a("td",[t._v("Idle Time，系统空闲百分比")])]),t._v(" "),a("tr",[a("td",[t._v("wa")]),t._v(" "),a("td",[t._v("Waiting Time，CPU等待IO完成所用百分比")])]),t._v(" "),a("tr",[a("td",[t._v("hi")]),t._v(" "),a("td",[t._v("Hard IPQ Time ，硬中断百分比")])]),t._v(" "),a("tr",[a("td",[t._v("si")]),t._v(" "),a("td",[t._v("Soft IPQ Time ，软中断百分比")])]),t._v(" "),a("tr",[a("td",[t._v("st")]),t._v(" "),a("td",[t._v("Steal Time，虚拟服务占用百分比")])])])]),t._v(" "),a("h3",{attrs:{id:"第四行-物理内存使用情况"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第四行-物理内存使用情况"}},[t._v("#")]),t._v(" 第四行（物理内存使用情况）")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("值")]),t._v(" "),a("th",[t._v("含义")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("total")]),t._v(" "),a("td",[t._v("总物理内存")])]),t._v(" "),a("tr",[a("td",[t._v("free")]),t._v(" "),a("td",[t._v("空闲的物理内存")])]),t._v(" "),a("tr",[a("td",[t._v("used")]),t._v(" "),a("td",[t._v("已经使用的物理内存")])]),t._v(" "),a("tr",[a("td",[t._v("buff/cache")]),t._v(" "),a("td",[t._v("缓冲区和缓冲区占用总量")])])])]),t._v(" "),a("h3",{attrs:{id:"第六行-进程详细信息"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第六行-进程详细信息"}},[t._v("#")]),t._v(" 第六行（进程详细信息）")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("值")]),t._v(" "),a("th",[t._v("含义")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("PID")]),t._v(" "),a("td",[t._v("进程ID")])]),t._v(" "),a("tr",[a("td",[t._v("USER")]),t._v(" "),a("td",[t._v("进程所有者的用户名")])]),t._v(" "),a("tr",[a("td",[t._v("PR")]),t._v(" "),a("td",[t._v("\b优先级")])]),t._v(" "),a("tr",[a("td",[t._v("NI")]),t._v(" "),a("td",[t._v("nice值")])]),t._v(" "),a("tr",[a("td",[t._v("VIRT")]),t._v(" "),a("td",[t._v("进程使用的虚拟内存总量，单位kb")])]),t._v(" "),a("tr",[a("td",[t._v("RES")]),t._v(" "),a("td",[t._v("进程使用的，未被还出的物理内存大小，单位kb")])]),t._v(" "),a("tr",[a("td",[t._v("SHR")]),t._v(" "),a("td",[t._v("共享内存大小，单位kb")])]),t._v(" "),a("tr",[a("td",[t._v("S")]),t._v(" "),a("td",[t._v("进程状态")])]),t._v(" "),a("tr",[a("td",[t._v("%CPU")]),t._v(" "),a("td",[t._v("CPU时间占用比")])]),t._v(" "),a("tr",[a("td",[t._v("%MEM")]),t._v(" "),a("td",[t._v("物理内存占用比")])]),t._v(" "),a("tr",[a("td",[t._v("TIME+")]),t._v(" "),a("td",[t._v("进程总计使用的CPU时间")])]),t._v(" "),a("tr",[a("td",[t._v("COMMAND")]),t._v(" "),a("td",[t._v("命令名")])])])]),t._v(" "),a("p",[a("strong",[t._v("进程状态的取值有如下几种")])]),t._v(" "),a("ol",[a("li",[t._v("D - 不可中断的睡眠态，一般表示进程正在跟硬件交互，但是此刻进程是不可中断的。不可中断，指的并不是CPU不响应外部硬件的中断，而是指进程不响应异步信号。绝大多数情况下，进程处在睡眠状态时，总是应该能够响应异步信号的。但是uninterruptible sleep 状态的进程不接受外来的任何信号，因此无法用kill杀掉这些处于D状态的进程，无论是”kill”, “kill -9″还是”kill -15″")]),t._v(" "),a("li",[t._v("R – 运行态，进程在CPU的就绪队列中，正在运行或者等待运行")]),t._v(" "),a("li",[t._v("S – 可中断睡眠态，进程因为等待某个事件而被挂起。当进程等待的事件发生时，会被唤醒并进入R状态")]),t._v(" "),a("li",[t._v("T – 进程处于暂停或者跟踪状态")]),t._v(" "),a("li",[t._v("Z – 僵尸态，表示僵尸进程，进程实际上已经结束了，但是父进程还没有回收它的资源。")])]),t._v(" "),a("p",[a("strong",[t._v("交互使用")])]),t._v(" "),a("p",[t._v("执行top命令时，可以输入交互命令\n1：查看CPU每个核的使用情况\nh：显示帮助画面，给出一些简短的命令总结说明\nk：终止一个进程\nq：退出程序\nr：重新安排一个进程的优先级别\nm：切换显示内存信息\nt：切换显示进程和CPU状态信息\nc：切换显示命令名称和完t整命令行\nM：根据驻留内存大小进行排序\nP：根据CPU使用百分比大小进行排序\nT：根据时间/累计时间进行排序")]),t._v(" "),a("h3",{attrs:{id:"vmstat"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vmstat"}},[t._v("#")]),t._v(" vmstat")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@VM-0-14-centos ~"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# vmstat")]),t._v("\nprocs -----------memory---------- ---swap-- -----io---- -system-- ------cpu-----\n r  b   swpd   "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("free")]),t._v("   buff  cache   si   so    bi    bo   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v("   cs us sy "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("id")]),t._v(" wa st\n "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("      "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("212380")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("136000")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1543228")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("99")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n")])])]),a("table",[a("thead",[a("tr",[a("th",[t._v("procs")]),t._v(" "),a("th",[t._v("含义")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("r")]),t._v(" "),a("td",[t._v("就绪队列的长度，也就是正在运行和等待CPU的进程数")])]),t._v(" "),a("tr",[a("td",[t._v("b")]),t._v(" "),a("td",[t._v("不可中断睡眠状态的进程数")])])])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("memory")]),t._v(" "),a("th",[t._v("含义")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("swpd")]),t._v(" "),a("td",[t._v("交换分区swap使用的大小")])]),t._v(" "),a("tr",[a("td",[t._v("free")]),t._v(" "),a("td",[t._v("未使用内存的大小")])]),t._v(" "),a("tr",[a("td",[t._v("buff")]),t._v(" "),a("td",[t._v("buffer缓冲区的大小")])]),t._v(" "),a("tr",[a("td",[t._v("cache")]),t._v(" "),a("td",[t._v("cache缓冲区的大小")])])])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("swap")]),t._v(" "),a("th",[t._v("含义")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("si")]),t._v(" "),a("td",[t._v("每秒从磁盘读入swap分区的大小，如果这个值不够用了，说明这个物理内存不够用了")])]),t._v(" "),a("tr",[a("td",[t._v("so")]),t._v(" "),a("td",[t._v("每秒从swap分区写入磁盘的大小")])])])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("io")]),t._v(" "),a("th",[t._v("含义")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("bi")]),t._v(" "),a("td",[t._v("块设备每秒发送的块数量")])]),t._v(" "),a("tr",[a("td",[t._v("bo")]),t._v(" "),a("td",[t._v("块设备每秒接收的块数量")])])])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("system")]),t._v(" "),a("th",[t._v("含义")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("in")]),t._v(" "),a("td",[t._v("每秒中断的次数")])]),t._v(" "),a("tr",[a("td",[t._v("cs")]),t._v(" "),a("td",[t._v("每秒上下文切换次数")])])])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("cpu")]),t._v(" "),a("th",[t._v("含义")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("us")]),t._v(" "),a("td",[t._v("User Time，CPU执行用户进程百分比")])]),t._v(" "),a("tr",[a("td",[t._v("sy")]),t._v(" "),a("td",[t._v("System Time，CPU在内核运行百分比")])]),t._v(" "),a("tr",[a("td",[t._v("id")]),t._v(" "),a("td",[t._v("Idle Time，系统空闲百分比")])]),t._v(" "),a("tr",[a("td",[t._v("wa")]),t._v(" "),a("td",[t._v("Waiting Time，CPU等待IO完成所用百分比")])]),t._v(" "),a("tr",[a("td",[t._v("st")]),t._v(" "),a("td",[t._v("Steal Time，虚拟服务占用百分比")])])])])])}),[],!1,null,null,null);s.default=r.exports}}]);