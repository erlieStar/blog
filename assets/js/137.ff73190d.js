(window.webpackJsonp=window.webpackJsonp||[]).push([[137],{534:function(t,e,v){"use strict";v.r(e);var _=v(56),i=Object(_.a)({},(function(){var t=this,e=t.$createElement,v=t._self._c||e;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h1",{attrs:{id:"面试官-如果我一直往线程池里面放任务-会发生什么"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#面试官-如果我一直往线程池里面放任务-会发生什么"}},[t._v("#")]),t._v(" 面试官：如果我一直往线程池里面放任务，会发生什么？")]),t._v(" "),v("h2",{attrs:{id:"线程池的各种参数"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#线程池的各种参数"}},[t._v("#")]),t._v(" 线程池的各种参数")]),t._v(" "),v("p",[t._v("面试的时候最常问的就是线程池的各种参数的含义，和线程池的整个运行流程，这个一定要会")]),t._v(" "),v("p",[t._v("ThreadPoolExecutor一共有4个构造函数，但最后调用的都是如下构造函数")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",[t._v("参数")]),t._v(" "),v("th",{staticStyle:{"text-align":"center"}},[t._v("含义")]),t._v(" "),v("th")])]),t._v(" "),v("tbody",[v("tr",[v("td",[t._v("corePoolSize")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("核心线程池大小")]),t._v(" "),v("td")]),t._v(" "),v("tr",[v("td",[t._v("maximumPoolSize")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("线程池最大容量大小")]),t._v(" "),v("td")]),t._v(" "),v("tr",[v("td",[t._v("keepAliveTime")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("线程池空闲时，线程存活的时间")]),t._v(" "),v("td")]),t._v(" "),v("tr",[v("td",[t._v("TimeUnit")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("线程活动保持时间的单位")]),t._v(" "),v("td")]),t._v(" "),v("tr",[v("td",[t._v("BlockingQueue<Runnable>")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("任务队列，用于保存等待执行的任务的阻塞队列")]),t._v(" "),v("td")]),t._v(" "),v("tr",[v("td",[t._v("ThreadFactory")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("用于设置线程的工厂")]),t._v(" "),v("td")]),t._v(" "),v("tr",[v("td",[t._v("RejectedExecutionHandler")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("饱和策略")]),t._v(" "),v("td")])])]),t._v(" "),v("p",[t._v("来类比学习一下这些参数，我们把"),v("strong",[t._v("线程池类比为项目组，线程是这个公司的成员")])]),t._v(" "),v("p",[t._v("corePoolSize：线程池中最少的线程数，一个项目组总得有corePoolSize人坚守阵地，都是签订劳动合同了，不能随便撤。")]),t._v(" "),v("p",[t._v("maximumPoolSize：当项目很忙时，就得加人，请其他项目组的人来帮忙。但是公司空间有限，最多只能加到maximumPoolSize个人。当项目闲了，就得撤人了，最多能撤到corePoolSize个人")]),t._v(" "),v("p",[t._v("keepAliveTime & unit：上面提到项目根据忙闲来增减人员，那在编程世界里，如何定义忙和闲呢？如果一个线程在keepAliveTime（时间数字）* unit（时间单位）时间内都没有执行任务，说明这个线程很闲。如果此时线程数大于corePoolSize，这个线程就要被回收了")]),t._v(" "),v("p",[t._v("workQueue：就是任务队列")]),t._v(" "),v("p",[t._v("threadFactory：自定义如果创建线程，例如给线程指定一个有意义的名字")]),t._v(" "),v("p",[t._v("handler：workQueue满了（排期满了），再提交任务，该怎么处理呢？这个就是处理策略，线程池提供了4种策略，你也可以实现RejectedExecutionHandler接口来自定义策略")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",[t._v("类")]),t._v(" "),v("th",{staticStyle:{"text-align":"center"}},[t._v("策略")])])]),t._v(" "),v("tbody",[v("tr",[v("td",[t._v("AbortPolicy")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("丢弃任务，抛运行时异常（默认的处理策略）")])]),t._v(" "),v("tr",[v("td",[t._v("CallerRunsPolicy")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("执行任务")])]),t._v(" "),v("tr",[v("td",[t._v("DiscardPolicy")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("忽视，什么都不会发生")])]),t._v(" "),v("tr",[v("td",[t._v("DiscardOldestPolicy")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("丢弃队列里最近的一个任务，并执行当前任务")])])])]),t._v(" "),v("h2",{attrs:{id:"线程池的工作流程"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#线程池的工作流程"}},[t._v("#")]),t._v(" 线程池的工作流程")]),t._v(" "),v("p",[t._v("可以参照一下源码理解一下下面的流程")]),t._v(" "),v("ol",[v("li",[v("p",[t._v("线程池刚创建时，里面没有一个线程。任务队列是作为参数传进来的。不过，就算队列里面有任务，线程池也不会马上执行他们。")])]),t._v(" "),v("li",[v("p",[t._v("当调用execute()方法添加一个任务时，线程池会做如下判断：")]),t._v(" "),v("p",[t._v("a. 如果正在运行的线程数量小于corePoolSize，那么马上创建线程运行这个任务")]),t._v(" "),v("p",[t._v("b. 如果正在运行的线程数量大于或等于corePoolSize，那么将这个任务放入队列")]),t._v(" "),v("p",[t._v("c. 如果这时候队列满了，而且正在运行的线程数量小于maximunPoolSize，那么还是要创建非核心线程立刻运行这个任务")]),t._v(" "),v("p",[t._v("d. 如果队列满了，而且正在运行的线程数量大于或等于maximunPoolSize，那么线程池会抛出RejectedExecutionException")])]),t._v(" "),v("li",[v("p",[t._v("当一个线程完成任务时，它会从队列中取下一个任务来执行")])]),t._v(" "),v("li",[v("p",[t._v("当一个线程无事可做，超过一定的时间（keepAliveTime）时，线程池会判断，如果当前运行的线程数大于corePoolSize，那么这个线程就被停掉。所以线程池的所有任务完成后，它最终会收缩到corePoolSize的大小")])])]),t._v(" "),v("p",[t._v("可以用如下图来表示整体流程")]),t._v(" "),v("p",[v("img",{attrs:{src:"https://img-blog.csdn.net/20180612203527437?",alt:"这里写图片描述"}})])])}),[],!1,null,null,null);e.default=i.exports}}]);