(window.webpackJsonp=window.webpackJsonp||[]).push([[249],{646:function(t,a,s){"use strict";s.r(a);var n=s(56),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"手写rpc框架-spring-bean-生命周期详解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#手写rpc框架-spring-bean-生命周期详解"}},[t._v("#")]),t._v(" 手写RPC框架：Spring Bean 生命周期详解")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://img-blog.csdnimg.cn/20210317224843860.jpg?",alt:"在这里插入图片描述"}})]),t._v(" "),s("h2",{attrs:{id:"基本概念"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基本概念"}},[t._v("#")]),t._v(" 基本概念")]),t._v(" "),s("p",[t._v("我们将自己写的RPC框架和Spring进行整合，分析Dubbo源码的时候，都要对Spring Bean的生命周期有一个清晰的理解，所以这一节我们就分析一下Spring Bean的生命周期")]),t._v(" "),s("p",[s("strong",[t._v("Spring是一个IOC容器")]),t._v("\n当我们不用Spring进行开发时，我们需要在代码中设置对象的依赖关系。当我们用了Spring之后，由Spring来管理这种依赖关系，当我们想使用对象时，直接从Spring容器中获取即可")]),t._v(" "),s("p",[s("strong",[t._v("BeanDefinition")]),t._v("\n在Spring中对象被叫做Bean，因为Spring Bean在Java类的基础上增加了很多概念，比如scope（作用域），isLazyInit（是否延迟初始化），isSingleton（是否单例），此时Java类不能完整的描述，所以需要新的定义描述类，这个类就是BeanDefinition")]),t._v(" "),s("p",[s("strong",[t._v("BeanDefinitionReader")]),t._v("\nBeanDefinitionReader会将配置的bean解析成为BeanDefinition，Spring Bean的配置方式有很多种，如XML，properties，groovy，注解（可能通过properties，groovy的方式你不常用，但Spring确实支持这种方式），所以BeanDefinitionReader的实现类也很多")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://img-blog.csdnimg.cn/20210330111959746.png?",alt:"在这里插入图片描述"}})]),t._v(" "),s("p",[s("strong",[t._v("ClassPathBeanDefinitionScanner")]),t._v("\n当把Bean配置出后，得需要相应的组件把他们从资源文件中扫描出来吗，这个组件就是ClassPathBeanDefinitionScanner")]),t._v(" "),s("p",[s("strong",[t._v("BeanDefinitionRegistry")]),t._v("\nBeanDefinitionReader将配置的bean解析成为BeanDefinition，需要将BeanDefinition保存到BeanDefinitionRegistry。类似工厂把原料保存到仓库中，供后续生产产品使用")]),t._v(" "),s("p",[s("strong",[t._v("BeanFactory")]),t._v("\nBeanFactory会根据BeanDefinition将Bean生产出来，并保存下来")]),t._v(" "),s("p",[s("strong",[t._v("DefaultListableBeanFactory")]),t._v("\nDefaultListableBeanFactory在绝大多数的场景都是BeanFactory的实现类，DefaultListableBeanFactory实现了BeanDefinitionRegistry接口和BeanFactory接口，所以能保存Bean定义，同时又能根据Bean定义将Bean生产出来")]),t._v(" "),s("p",[s("strong",[t._v("BeanPostProcessor")]),t._v("\nBeanFactory根据BeanDefinition生成Bean的过程是一个标准化的流程，就像一个流水线一样，当然你可以在这个流水线上做一些自定义的操作。"),s("strong",[t._v("在Spring中你可以通过实现BeanPostProcessor来干预Bean的生产过程")])]),t._v(" "),s("p",[s("strong",[t._v("BeanFactoryPostProcessor")]),t._v("\nSpring作为一个强大的容器，不仅能让你干预Bean的生产过程，还可以让你干预BeanFactory，"),s("strong",[t._v("例如你可以通过BeanFactoryPostProcessor将Bean的作用域都该成原型，默认是单例")])]),t._v(" "),s("h2",{attrs:{id:"spring容器启动流程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#spring容器启动流程"}},[t._v("#")]),t._v(" Spring容器启动流程")]),t._v(" "),s("h3",{attrs:{id:"容器初始化过程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#容器初始化过程"}},[t._v("#")]),t._v(" 容器初始化过程")]),t._v(" "),s("p",[t._v("我们常用的容器有如下2种")]),t._v(" "),s("ol",[s("li",[t._v("基于xml配置Bean（ClassPathXmlApplicationContext）")]),t._v(" "),s("li",[t._v("基于注解配置Bean（AnnotationConfigApplicationContext）")])]),t._v(" "),s("p",[t._v("因为我们现在开发都是基于注解，所以分析一下AnnotationConfigApplicationContext的启动流程")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Repository")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UserDao")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getUser")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"user"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Configuration")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@ComponentScan")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"com.javashitang"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AppConfig")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Main")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 容器启动完毕")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AnnotationConfigApplicationContext")]),t._v(" context "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AnnotationConfigApplicationContext")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AppConfig")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UserDao")]),t._v(" userDao "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getBean")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UserDao")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" str "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" userDao"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getUser")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("可以看到当AnnotationConfigApplicationContext被new出来的时候，容器已经启动完毕，后续就可以直接从容器中获取Bean了。")]),t._v(" "),s("p",[t._v("构造函数主要执行了如下3个步骤，其中this和register方法主要是容器初始化的过程。refresh是刷新容器，即启动的过程，在这个里面做了很多操作，我们后面会用一个小节来分析\n"),s("img",{attrs:{src:"https://img-blog.csdnimg.cn/20210330144835601.png?",alt:"在这里插入图片描述"}}),t._v("\n初始化的过程可以看到初始化beanFactory为DefaultListableBeanFactory。"),s("strong",[t._v("这里可以看到AnnotationConfigApplicationContext虽然本身是一个beanFactory（实现了BeanFactory接口），但是依赖查找，依赖注入的过程是依赖内部的beanFactory来实现的（典型的代理模式）")])]),t._v(" "),s("p",[s("strong",[t._v("另外需要注意的一点是，在容器初始化的过程中注册了6个Bean")])]),t._v(" "),s("ol",[s("li",[t._v("ConfigurationClassPostProcessor（"),s("strong",[t._v("实现了BeanFactoryPostProcessor，处理@Configuration，@ComponmentScan等注解，这是一个很重要的类")]),t._v("）")]),t._v(" "),s("li",[s("strong",[t._v("AutowiredAnnotationBeanPostProcessor（实现了BeanPostProcessor，处理@Autowired，@Value等）")])]),t._v(" "),s("li",[s("strong",[t._v("CommonAnnotationBeanPostProcessor（实现了BeanPostProcessor，用来处理JSR-250规范的注解，如@Resource，@PostConstruct等）")])]),t._v(" "),s("li",[t._v("PersistenceAnnotationBeanPostProcessor（实现了BeanFactoryPostProcessor，用来支持JPA，在我们这个Demo中不会注册，因为路径中没有JPA相关的类）")]),t._v(" "),s("li",[t._v("EventListenerMethodProcessor（实现了BeanFactoryPostProcessor）")]),t._v(" "),s("li",[t._v("DefaultEventListenerFactory")])]),t._v(" "),s("p",[t._v("注册的过程估计你也猜到了，就是将对应的类，如ConfigurationClassPostProcessor解析为RootBeanDefinition，并注册到BeanDefinitionRegistry中")]),t._v(" "),s("p",[s("strong",[t._v("这几个BeanPostProcessor在Spring Bean的生命周期中发挥了很大的作用，我们在Spring Bean生命周期这篇文章中来分析")]),t._v("。")]),t._v(" "),s("p",[s("strong",[t._v("好了，我们来看最重要的过程，容器刷新的过程，入口方法为AbstractApplicationContext#refresh")])]),t._v(" "),s("h3",{attrs:{id:"容器刷新过程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#容器刷新过程"}},[t._v("#")]),t._v(" 容器刷新过程")]),t._v(" "),s("p",[s("strong",[t._v("容器刷新的过程可以细分为如下几个步骤")])]),t._v(" "),s("ol",[s("li",[t._v("Spring应用上下文启动准备阶段")]),t._v(" "),s("li",[t._v("BeanFactory创建阶段")]),t._v(" "),s("li",[t._v("BeanFactory准备阶段")]),t._v(" "),s("li",[t._v("BeanFactory后置处理阶段")]),t._v(" "),s("li",[t._v("BeanFactory注册BeanPostProcessor阶段")]),t._v(" "),s("li",[t._v("初始化内建Bean：MessageSource")]),t._v(" "),s("li",[t._v("初始化内建Bean：Spring事件广播器")]),t._v(" "),s("li",[t._v("Spring应用上下文刷新阶段")]),t._v(" "),s("li",[t._v("Spring事件监听器注册阶段")]),t._v(" "),s("li",[t._v("BeanFactory初始化完成阶段")]),t._v(" "),s("li",[t._v("Spring应用上下文启动完成阶段")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://img-blog.csdnimg.cn/2021052700213626.png?",alt:"在这里插入图片描述"}})]),t._v(" "),s("h3",{attrs:{id:"spring应用上下文启动准备阶段"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#spring应用上下文启动准备阶段"}},[t._v("#")]),t._v(" Spring应用上下文启动准备阶段")]),t._v(" "),s("p",[t._v("AbstractApplicationContext#prepareRefresh")]),t._v(" "),s("ol",[s("li",[t._v("记录启动时间 startupDate")]),t._v(" "),s("li",[t._v("设置标志为closed（false），active（true）")]),t._v(" "),s("li",[t._v("初始化PropertySources")]),t._v(" "),s("li",[t._v("校验Environment中必须属性")]),t._v(" "),s("li",[t._v("初始化事件监听器集合")]),t._v(" "),s("li",[t._v("初始化早期Spring事件集合")])]),t._v(" "),s("h3",{attrs:{id:"beanfactory创建阶段"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#beanfactory创建阶段"}},[t._v("#")]),t._v(" BeanFactory创建阶段")]),t._v(" "),s("p",[t._v("AbstractApplicationContext#obtainFreshBeanFactory")]),t._v(" "),s("p",[t._v("刷新Spring应用上下文底层BeanFactory（refreshBeanFactory）")]),t._v(" "),s("ol",[s("li",[t._v("如果已存在BeanFactory，销毁Bean，并且关闭BeanFactory")]),t._v(" "),s("li",[t._v("创建DefaultListableBeanFactory（一般情况下都是DefaultListableBeanFactory）")]),t._v(" "),s("li",[t._v("设置BeanFactory id")]),t._v(" "),s("li",[t._v("设置BeanFactory是否允许BeanDefinition重复定义，是否允许循环引用")]),t._v(" "),s("li",[t._v("加载BeanDefinition")]),t._v(" "),s("li",[t._v("关联新建的BeanFactory到Spring应用上下文")])]),t._v(" "),s("p",[t._v("返回Spring应用上下文底层BeanFactory（getBeanFactory）")]),t._v(" "),s("h3",{attrs:{id:"beanfactory准备阶段"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#beanfactory准备阶段"}},[t._v("#")]),t._v(" BeanFactory准备阶段")]),t._v(" "),s("p",[t._v("AbstractApplicationContext#prepareBeanFactory")]),t._v(" "),s("ol",[s("li",[t._v("关联ClassLoader")]),t._v(" "),s("li",[t._v("设置Bean表达式处理器")]),t._v(" "),s("li",[t._v("添加 PropertyEditorRegistrar 的实现 ResourceEditorRegistrar")]),t._v(" "),s("li",[s("strong",[t._v("注册BeanPostProcessor（ApplicationContextAwareProcessor）")]),t._v("，用来处理Aware回调接口")]),t._v(" "),s("li",[t._v("忽略Aware回调接口作为依赖注入接口")]),t._v(" "),s("li",[t._v("注册ResolvableDependency对象-BeanFactory，ResourceLoader，ApplicationEventPublisher，ApplicationContext")]),t._v(" "),s("li",[s("strong",[t._v("注册BeanPostProcessor（ApplicationListenerDetector）")]),t._v("，用来处理ApplicationListener接口")]),t._v(" "),s("li",[t._v("注册BeanPostProcessor（LoadTimeWeaverAwareProcessor），用来处理aop")]),t._v(" "),s("li",[t._v("注册单例对象（Environment，Java System Properties以及OS环境变量）")])]),t._v(" "),s("h3",{attrs:{id:"beanfactory后置处理阶段"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#beanfactory后置处理阶段"}},[t._v("#")]),t._v(" BeanFactory后置处理阶段")]),t._v(" "),s("p",[t._v("如果想对BeanFactory进行扩展，可以通过如下2种方式")]),t._v(" "),s("ol",[s("li",[t._v("子类重写AbstractApplicationContext#postProcessBeanFactory方法")]),t._v(" "),s("li",[t._v("实现BeanFactoryPostProcessor接口")])]),t._v(" "),s("p",[t._v("AbstractApplicationContext#invokeBeanFactoryPostProcessors\n方法就是用来处理BeanFactoryPostProcessor接口的，调用的次序比较复杂，总结如下")]),t._v(" "),s("ol",[s("li",[t._v("BeanDefinitionRegistryPostProcessor#postProcessBeanDefinitionRegistry（入参中的）")]),t._v(" "),s("li",[t._v("BeanDefinitionRegistryPostProcessor#postProcessBeanDefinitionRegistry（容器中的，并且实现了PriorityOrdered接口）")]),t._v(" "),s("li",[t._v("BeanDefinitionRegistryPostProcessor#postProcessBeanDefinitionRegistry（容器中的，并且实现了Ordered接口）")]),t._v(" "),s("li",[t._v("BeanDefinitionRegistryPostProcessor#postProcessBeanDefinitionRegistry（容器中的，除去第2，3步剩余的BeanDefinitionRegistryPostProcessor）")]),t._v(" "),s("li",[t._v("BeanDefinitionRegistryPostProcessor#postProcessBeanFactory（所有BeanDefinitionRegistryPostProcessor接口实现类）")]),t._v(" "),s("li",[t._v("BeanFactoryPostProcessor#postProcessBeanFactory（入参数中的）")]),t._v(" "),s("li",[t._v("BeanFactoryPostProcessor#postProcessBeanFactory（容器中的，实现了PriorityOrdered接口）")]),t._v(" "),s("li",[t._v("BeanFactoryPostProcessor#postProcessBeanFactory（容器中的，实现了Ordered接口）")]),t._v(" "),s("li",[t._v("BeanFactoryPostProcessor#postProcessBeanFactory（容器中的，除去7，8步剩余的BeanFactoryPostProcessor）")])]),t._v(" "),s("p",[s("strong",[t._v("注册BeanPostProcessor（ConfigurationClassPostProcessor.ImportAwareBeanPostProcessor）")])]),t._v(" "),s("p",[t._v("注册LoadTimeWeaverAwareProcessor对象")]),t._v(" "),s("p",[t._v("前面说过在容器初始化的过程中，往容器中注入了一个BeanFactoryPostProcessor接口的实现类即ConfigurationClassPostProcessor。")]),t._v(" "),s("p",[s("strong",[t._v("这是一个非常重要的BeanFactoryPostProcessor，通过@Bean、@Component、@ComponentScan、@Import、@ImportResource注入Bean的方式都由这个类来处理，对这些注解的实现感兴趣的小伙伴可以看一下这个类的源码")])]),t._v(" "),s("p",[s("strong",[t._v("回调BeanFactoryPostProcessor接口的相关方法就搞这么多排序规则，有必要吗？")])]),t._v(" "),s("p",[t._v("有必要，一方面是提高可扩展性，另外一方面是有些实现类的调用优先级必须要高一点，不然会有问题，我后面用例子演示")]),t._v(" "),s("h3",{attrs:{id:"beanfactory注册beanpostprocessor阶段"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#beanfactory注册beanpostprocessor阶段"}},[t._v("#")]),t._v(" BeanFactory注册BeanPostProcessor阶段")]),t._v(" "),s("ol",[s("li",[s("strong",[t._v("注册BeanPostProcessor（PostProcessorRegistrationDelegate.BeanPostProcessorChecker）")])]),t._v(" "),s("li",[t._v("注册PriorityOrdered类型的BeanPostProcessor")]),t._v(" "),s("li",[t._v("注册Ordered类型的BeanPostProcessor")]),t._v(" "),s("li",[t._v("注册普通的BeanPostProcessor")]),t._v(" "),s("li",[t._v("注册MergedBeanDefinitionPostProcessor")]),t._v(" "),s("li",[s("strong",[t._v("注册BeanPostProcessor（ApplicationListenerDetector）")])])]),t._v(" "),s("p",[s("strong",[t._v("此时注册到容器中的BeanPostProcessor有如下6个（注册的时机我都在前文标注过了）")]),t._v("，这6个BeanPostProcessor在Spring Bean的生命周期中起着重要的作用\n"),s("img",{attrs:{src:"https://img-blog.csdnimg.cn/20210322232429517.png?",alt:"在这里插入图片描述"}}),t._v("\n这个注册时机会影响后面调用的时机，所以搞优先级很有必要")]),t._v(" "),s("h3",{attrs:{id:"初始化内建bean-messagesource"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#初始化内建bean-messagesource"}},[t._v("#")]),t._v(" 初始化内建Bean：MessageSource")]),t._v(" "),s("p",[t._v("AbstractApplicationContext#initMessageSource\n国际化相关的内容，不怎么用，不研究了")]),t._v(" "),s("h3",{attrs:{id:"初始化内建bean-spring事件广播器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#初始化内建bean-spring事件广播器"}},[t._v("#")]),t._v(" 初始化内建Bean：Spring事件广播器")]),t._v(" "),s("p",[t._v("AbstractApplicationContext#initApplicationEventMulticaster")]),t._v(" "),s("h3",{attrs:{id:"spring应用上下文刷新阶段"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#spring应用上下文刷新阶段"}},[t._v("#")]),t._v(" Spring应用上下文刷新阶段")]),t._v(" "),s("p",[t._v("AbstractApplicationContext#onRefresh\n留给子类扩展用的")]),t._v(" "),s("h3",{attrs:{id:"spring事件监听器注册阶段"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#spring事件监听器注册阶段"}},[t._v("#")]),t._v(" Spring事件监听器注册阶段")]),t._v(" "),s("p",[t._v("AbstractApplicationContext#registerListeners")]),t._v(" "),s("ol",[s("li",[t._v("添加当前应用上下文所关联的ApplicationListener对象")]),t._v(" "),s("li",[t._v("添加BeanFactory所注册的ApplicationListener")]),t._v(" "),s("li",[t._v("广播早期Spring事件")])]),t._v(" "),s("h3",{attrs:{id:"beanfactory初始化完成阶段"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#beanfactory初始化完成阶段"}},[t._v("#")]),t._v(" BeanFactory初始化完成阶段")]),t._v(" "),s("p",[t._v("AbstractApplicationContext#finishBeanFactoryInitialization")]),t._v(" "),s("ol",[s("li",[t._v("conversionService如果存在的话，设置到beanFactory")]),t._v(" "),s("li",[t._v("添加 StringValueResolver 对象")]),t._v(" "),s("li",[t._v("依赖查找LoadTimeWeaverAware Bean")]),t._v(" "),s("li",[t._v("beanFactory将ClassLoader临时设置为null")]),t._v(" "),s("li",[t._v("beanFactory冻结配置")]),t._v(" "),s("li",[t._v("beanFactory初始化非延迟单例Beans")])]),t._v(" "),s("p",[s("strong",[t._v("说一个高频面试题，Spring容器在何时创建对象？")])]),t._v(" "),s("ol",[s("li",[t._v("scope=singleton，容器启动过程中创建对象")]),t._v(" "),s("li",[t._v('scope!=singleton，延迟Bean（加了@Lazy，或<bean lazy-init="true"/>），在调用getBean的同时创建对象')])]),t._v(" "),s("h3",{attrs:{id:"spring应用上下文启动完成阶段"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#spring应用上下文启动完成阶段"}},[t._v("#")]),t._v(" Spring应用上下文启动完成阶段")]),t._v(" "),s("p",[t._v("AbstractApplicationContext#finishRefresh")]),t._v(" "),s("ol",[s("li",[t._v("清除ResoureLoader缓存")]),t._v(" "),s("li",[t._v("初始化lifecycleProcessor对象")]),t._v(" "),s("li",[t._v("调用lifecycleProcessor#onRefresh方法")]),t._v(" "),s("li",[t._v("发布应用上下文刷新事件 ContextRefreshedEvent")]),t._v(" "),s("li",[t._v("向MBeanServer托管Live Beans")])]),t._v(" "),s("h2",{attrs:{id:"spring-bean生命周期"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#spring-bean生命周期"}},[t._v("#")]),t._v(" Spring Bean生命周期")]),t._v(" "),s("h3",{attrs:{id:"beanfactorypostprocessor和beanpostprocessor"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#beanfactorypostprocessor和beanpostprocessor"}},[t._v("#")]),t._v(" BeanFactoryPostProcessor和BeanPostProcessor")]),t._v(" "),s("p",[s("strong",[t._v("书接上文，如果我们要对Spring进行扩展，一般有如下方法")])]),t._v(" "),s("ol",[s("li",[t._v("实现BeanFactoryPostProcessor接口")]),t._v(" "),s("li",[t._v("实现BeanPostProcessor接口")])]),t._v(" "),s("p",[t._v("BeanPostProcessor接口的使用我会在文章最后写一个Demo，先演示一下BeanFactoryPostProcessor接口的作用，对BeanFactory进行扩展")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyBeanFactoryPostProcessor")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("implements")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BeanFactoryPostProcessor")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("postProcessBeanFactory")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ConfigurableListableBeanFactory")]),t._v(" factory"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BeansException")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" beanDefinitionName "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" factory"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getBeanDefinitionNames")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BeanDefinition")]),t._v(" beanDefinition "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" factory"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getBeanDefinition")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("beanDefinitionName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            beanDefinition"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setScope")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"prototype"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("我们都知道Spring容器中的Bean的作用域默认是singleton，我们扩展BeanFactoryPostProcessor接口并注入到容器中，让所有Bean的作用域变为prototype，此时每次从容器中获取的对象都是新对象")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Animal")]),t._v(" animal1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" applicationContext"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getBean")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"animal"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Animal")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Animal")]),t._v(" animal2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" applicationContext"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getBean")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"animal"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Animal")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("animal1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" animal2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[s("strong",[t._v("这个例子就充分体现了BeanFactoryPostProcessor方法需要排序调用的重要性了，按照之前的排序规则ConfigurationClassPostProcessor类的调用时机会早于MyBeanFactoryPostProcessor，此时Bean已经都注入到容器中了，所以能将所有Bean的作用域修改为prototype，如果先执行MyBeanFactoryPostProcessor后执行ConfigurationClassPostProcessor，那只会修改部分Bean的作用域为prototype。这样你用起来估计都会懵逼")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://img-blog.csdnimg.cn/20210527005222400.png?",alt:"在这里插入图片描述"}})]),t._v(" "),s("p",[s("strong",[t._v("BeanPostProcessor接口可以对Bean生命周期中的很多部分进行扩展，并且Spring容器中有很多内建的BeanPostProcessor对Spring Bean的功能进行支持。搞懂了Spring内置的BeanPostProcessor的功能，基本上就把Spring Bean的生命周期搞懂了")]),t._v("。其余的如事件，国际化，资源管理在此基础上就很容易理解了")]),t._v(" "),s("p",[s("strong",[t._v("Spring Bean的生命周期可以主要分为如下4个部分")])]),t._v(" "),s("ol",[s("li",[t._v("处理BeanDefinition：BeanDefinition的解析，注册，合并")]),t._v(" "),s("li",[t._v("Bean实例化（Instantiation）：还没有生成bean，即没有调用构造函数，生成对象")]),t._v(" "),s("li",[t._v("Bean初始化（Initialization）：已经生成bean，进行属性赋值")]),t._v(" "),s("li",[t._v("Bean销毁：并没有gc")])]),t._v(" "),s("p",[s("strong",[t._v("分享到这了，我就抛出一个问题，BeanFactoryPostProcessor和BeanPostProcessor接口哪个先执行？")])]),t._v(" "),s("p",[t._v("当然是BeanFactoryPostProcessor先执行，BeanPostProcessor后执行了，仔细看启动流程图")]),t._v(" "),s("ol",[s("li",[t._v("BeanFactoryPostProcessor的执行在BeanFactory后置处理阶段")]),t._v(" "),s("li",[t._v("BeanPostProcessor的执行在BeanFactory初始化完成阶段（初始化非延迟单例Bean）\n"),s("img",{attrs:{src:"https://img-blog.csdnimg.cn/2021052700213626.png?",alt:"在这里插入图片描述"}})])]),t._v(" "),s("h3",{attrs:{id:"spring-bean生命周期-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#spring-bean生命周期-2"}},[t._v("#")]),t._v(" Spring Bean生命周期")]),t._v(" "),s("h4",{attrs:{id:"beandefinition解析阶段"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#beandefinition解析阶段"}},[t._v("#")]),t._v(" BeanDefinition解析阶段")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("配置方式")]),t._v(" "),s("th",[t._v("实现类")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("XML资源")]),t._v(" "),s("td",[t._v("XmlBeanDefinitionReader")])]),t._v(" "),s("tr",[s("td",[t._v("Properties资源")]),t._v(" "),s("td",[t._v("PropertiesBeanDefinitionReader")])]),t._v(" "),s("tr",[s("td",[t._v("Java注解")]),t._v(" "),s("td",[t._v("AnnotatedBeanDefinitionReader")])])])]),t._v(" "),s("p",[t._v("在开发过程中，我们会用Java文件来描述一个对象。在Spring中我们则用BeanDefinition来描述一个Bean，因为Bean在对象的基础上增加了很多属性，例如Bean是单例的还是原型的？Bean是否延迟加载，此时Java文件就不能描述一个Bean了，我们就用BeanDefinition来描述BeanDefinition")]),t._v(" "),s("p",[t._v("BeanDefinition的一些元信息如下")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("属性")]),t._v(" "),s("th",[t._v("说明")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("beanClass")]),t._v(" "),s("td",[t._v("bean对应的Class类")])]),t._v(" "),s("tr",[s("td",[t._v("lazyInit")]),t._v(" "),s("td",[t._v("是否延迟初始化")])]),t._v(" "),s("tr",[s("td",[t._v("autowireMode")]),t._v(" "),s("td",[t._v("自动绑定模式，无，byName，byType等")])]),t._v(" "),s("tr",[s("td",[t._v("initMethodName")]),t._v(" "),s("td",[t._v("初始化回调方法")])]),t._v(" "),s("tr",[s("td",[t._v("destroyMethodName")]),t._v(" "),s("td",[t._v("销毁回调方法")])])])]),t._v(" "),s("h4",{attrs:{id:"beandefinition注册阶段"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#beandefinition注册阶段"}},[t._v("#")]),t._v(" BeanDefinition注册阶段")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://img-blog.csdnimg.cn/2021031215280990.png?",alt:"在这里插入图片描述"}})]),t._v(" "),s("p",[t._v("配置被解析成BeanDefinition后，会被注册到BeanDefinitionRegistry")]),t._v(" "),s("p",[s("strong",[t._v("BeanDefinitionRegistry基本实现就是DefaultListableBeanFactory")])]),t._v(" "),s("p",[t._v("DefaultListableBeanFactory中和BeanDefinition相关的属性如下")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/** Map of bean definition objects, keyed by bean name. */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Map")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BeanDefinition")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" beanDefinitionMap "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ConcurrentHashMap")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("256")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/** List of bean definition names, in registration order. */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("volatile")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("List")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" beanDefinitionNames "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ArrayList")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("256")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("beanDefinitionMap用来保存beanName和BeanDefinition的映射关系\n因为map不能保存bean放进来的顺序，所以增加了一个beanDefinitionNames来保存bean的顺序")]),t._v(" "),s("h4",{attrs:{id:"beandefinition合并阶段"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#beandefinition合并阶段"}},[t._v("#")]),t._v(" BeanDefinition合并阶段")]),t._v(" "),s("p",[t._v("假设有2个对象User和Student，Student继承自User")]),t._v(" "),s("div",{staticClass:"language-xml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("bean")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("user"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("com.javashitang.domain.User"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("property")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("value")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("property")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("value")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("zhang"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("bean")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("bean")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("student"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("com.javashitang.domain.Student"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("parent")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("user"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("property")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("age"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("value")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("10"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("property")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("description"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("value")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("xml"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("bean")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("p",[t._v("从容器中获取这2个对象时，属性如下，可以看到Student把User对象的属性继承过来了，这种情况就涉及到BeanDefinition的合并。")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("User")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("id"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("zhang"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Student")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("super")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("User")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("id"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("zhang"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" age"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" description"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("xml"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[s("strong",[t._v("在最开始的时候User和Student都是GenericBeanDefinition，当进行完合并的时候会变成RootBeanDefinition")])]),t._v(" "),s("p",[s("strong",[t._v("Bean的实例化和初始化这部分只要追着AbstractBeanFactory#doGetBean这个方法看就行了，我会在每个阶段标注代码执行的位置，方便大家Debug调试，及查看调用链路")])]),t._v(" "),s("p",[t._v("源码位置：org.springframework.beans.factory.support.AbstractBeanFactory#getMergedBeanDefinition(java.lang.String, org.springframework.beans.factory.config.BeanDefinition, org.springframework.beans.factory.config.BeanDefinition)")]),t._v(" "),s("p",[t._v("我启动的容器是ApplicationContext，因为BeanPostProcessor在Bean的生命周期中起了重要的作用，我们就直接来看一下容器启动后，注册了多少BeanPostProcessor")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://img-blog.csdnimg.cn/20210314195526777.png?",alt:"在这里插入图片描述"}}),t._v(" "),s("strong",[t._v("可以看到注册了6个BeanPostProcessor，后面分析Bean的生命周期的时候，我会把每个BeanPostProcessor所起的作用标记出来")])]),t._v(" "),s("h4",{attrs:{id:"bean-实例化前阶段"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#bean-实例化前阶段"}},[t._v("#")]),t._v(" Bean 实例化前阶段")]),t._v(" "),s("p",[s("strong",[t._v("InstantiationAwareBeanPostProcessor#postProcessBeforeInstantiation")]),t._v("\n返回不为空，说明bean已经在这个方法中创建好了，不需要再进行后续的处理了")]),t._v(" "),s("p",[s("strong",[t._v("生效类")]),t._v("\nCommonAnnotationBeanPostProcessor#postProcessBeforeInstantiation：return null，所以正常情况下都会进行后续的流程")]),t._v(" "),s("p",[s("strong",[t._v("源码位置")]),t._v("\norg.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory#applyBeanPostProcessorsBeforeInstantiation")]),t._v(" "),s("h4",{attrs:{id:"bean-实例化阶段"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#bean-实例化阶段"}},[t._v("#")]),t._v(" Bean 实例化阶段")]),t._v(" "),s("p",[s("strong",[t._v("SmartInstantiationAwareBeanPostProcessor#determineCandidateConstructors")]),t._v("\n选择合适的构造器，如果返回的不为空，则用返回的构造函数实例化Bean，如果返回为null，则用无参数构造函数实例化Bean")]),t._v(" "),s("p",[s("strong",[t._v("生效类")]),t._v("\nAutowiredAnnotationBeanPostProcessor#determineCandidateConstructors：用来支持@Lookup注解，并且推断出要创建这个Bean需要的构造函数")]),t._v(" "),s("p",[s("strong",[t._v("源码位置")]),t._v("\norg.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory#determineConstructorsFromBeanPostProcessors")]),t._v(" "),s("h4",{attrs:{id:"bean-实例化后阶段"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#bean-实例化后阶段"}},[t._v("#")]),t._v(" Bean 实例化后阶段")]),t._v(" "),s("p",[s("strong",[t._v("MergedBeanDefinitionPostProcessor#postProcessMergedBeanDefinition")])]),t._v(" "),s("p",[s("strong",[t._v("生效类")]),t._v("\nAutowiredAnnotationBeanPostProcessor#postProcessMergedBeanDefinition：\n解析@Autowired，@Value，@Inject，并将相关的信息保存下来，后续对Bean属性进行赋值的时候要用")]),t._v(" "),s("p",[t._v("CommonAnnotationBeanPostProcessor#postProcessMergedBeanDefinition：\n解析@WebServiceRef，@EJB，@Resource，@PostConstruct，@PreDestroy，并将相关信息保存下来，后续对Bean属性赋值（@WebServiceRef，@EJB，@Resource），生命周期（@PostConstruct，@PreDestroy）支持要用")]),t._v(" "),s("p",[s("strong",[t._v("源码位置")]),t._v("\norg.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory#applyMergedBeanDefinitionPostProcessors")]),t._v(" "),s("p",[s("strong",[t._v("SmartInstantiationAwareBeanPostProcessor#getEarlyBeanReference")]),t._v("\n发生循环依赖的对象会从ObjectFactory获取提前曝光的对象，而这个提前曝光的对象，会经过\nSmartInstantiationAwareBeanPostProcessor#getEarlyBeanReference增强，然后返回。\n如果你对循环依赖的三级缓存不清楚的话，建议看《面试官：Spring如何解决循环依赖？》")]),t._v(" "),s("p",[s("strong",[t._v("生效类")]),t._v("\nInstantiationAwareBeanPostProcessorAdapter#getEarlyBeanReference（ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor父类）：直接return bean\nInstantiationAwareBeanPostProcessorAdapter#getEarlyBeanReference")]),t._v(" "),s("p",[t._v("（AutowiredAnnotationBeanPostProcessor父类）：直接return bean")]),t._v(" "),s("p",[s("strong",[t._v("源码位置")]),t._v("\norg.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory#getEarlyBeanReference")]),t._v(" "),s("h4",{attrs:{id:"bean-属性赋值前阶段"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#bean-属性赋值前阶段"}},[t._v("#")]),t._v(" Bean 属性赋值前阶段")]),t._v(" "),s("p",[s("strong",[t._v("InstantiationAwareBeanPostProcessor#postProcessAfterInstantiation")]),t._v("\n对象已经被实例化，该实例的属性还未被设置，都是null。该方法返回false，会忽略属性值的设置。返回true，会按正常流程设置属性值")]),t._v(" "),s("p",[s("strong",[t._v("生效类")]),t._v("\nCommonAnnotationBeanPostProcessor#postProcessAfterInstantiation：return true")]),t._v(" "),s("p",[s("strong",[t._v("源码位置")]),t._v("\norg.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory#populateBean")]),t._v(" "),s("h4",{attrs:{id:"bean-属性赋值阶段"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#bean-属性赋值阶段"}},[t._v("#")]),t._v(" Bean 属性赋值阶段")]),t._v(" "),s("p",[s("strong",[t._v("InstantiationAwareBeanPostProcessor#postProcessProperties")]),t._v(" "),s("strong",[t._v("InstantiationAwareBeanPostProcessor#postProcessPropertyValues")])]),t._v(" "),s("p",[t._v("对属性值进行修改，postProcessProperties用来替代postProcessPropertyValues")]),t._v(" "),s("p",[t._v("AutowiredAnnotationBeanPostProcessor#postProcessProperties：查找被@Autowired和@Value标注的方法或属性，并且注入需要的值\nCommonAnnotationBeanPostProcessor#postProcessProperties：查找被@WebServiceRef，@EJB，@Resource标注的属性，并且注入需要的值")]),t._v(" "),s("p",[s("strong",[t._v("源码位置")]),t._v("\norg.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory#populateBean")]),t._v(" "),s("h4",{attrs:{id:"bean-aware接口回调阶段"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#bean-aware接口回调阶段"}},[t._v("#")]),t._v(" Bean Aware接口回调阶段")]),t._v(" "),s("p",[t._v("依次回掉如下接口，注入相应的对象")]),t._v(" "),s("p",[t._v("BeanNameAware\nBeanClassLoaderAware\nBeanFactoryAware\nEnvironmentAware\nEmbeddedValueResolverAware\nResourceLoaderAware\nApplicationEventPublisherAware\nMessageSourceAware\nApplicationContextAware")]),t._v(" "),s("p",[s("strong",[t._v("源码位置1")]),t._v("\norg.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory#invokeAwareMethods")]),t._v(" "),s("p",[s("strong",[t._v("只会回掉BeanNameAware，BeanClassLoaderAware，BeanFactoryAware这3个接口的实现类")])]),t._v(" "),s("p",[s("strong",[t._v("源码位置2")]),t._v("\norg.springframework.context.support.ApplicationContextAwareProcessor#invokeAwareInterfaces")]),t._v(" "),s("p",[s("strong",[t._v("只会回掉EnvironmentAware接口及其后面的接口")])]),t._v(" "),s("p",[t._v("为啥Aware接口的回调要放在2个不同的地方？")]),t._v(" "),s("p",[t._v("在回答这个问题之前我抛出一个高频面试题")]),t._v(" "),s("p",[s("strong",[t._v("ApplicationContext和BeanFactory有哪些区别？")])]),t._v(" "),s("ol",[s("li",[t._v("BeanFactory是一个最基础的IOC容器，提供了依赖查找，依赖注入等基础的功能")]),t._v(" "),s("li",[t._v("ApplicationContext继承了BeanFactory，在BeanFactory的基础上增加了企业级的功能，如AOP，资源管理（Resources）事件（Event），国际化（i18n），Environment抽象等")])]),t._v(" "),s("p",[t._v("因此当我们启动的容器是BeanFactory时，只能注入BeanNameAware，BeanClassLoaderAware，BeanFactoryAware接口的实现，其他接口的实现它并没有，怎么给你？")]),t._v(" "),s("p",[t._v("当我们启动的容器是ApplicationContext时，对这些接口进行了实现，此时才能注入进来")]),t._v(" "),s("p",[s("strong",[t._v("根据启动容器类型的不同，回调不同的Aware接口是如何实现的？")])]),t._v(" "),s("p",[t._v("当进行依赖查找的时候（调用getBean方法），会回掉BeanNameAware，BeanClassLoaderAware，BeanFactoryAware接口")]),t._v(" "),s("p",[t._v("当容器是ApplicationContext时，会在启动的时候增加一个BeanPostProcessor，即ApplicationContextAwareProcessor，当调用ApplicationContextAwareProcessor#postProcessBeforeInitialization方法的时候，会回掉其余Aware接口的实现")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://img-blog.csdnimg.cn/20210313193619600.jpeg?",alt:"在这里插入图片描述"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://img-blog.csdnimg.cn/20210313193631403.jpeg?",alt:"在这里插入图片描述"}})]),t._v(" "),s("h4",{attrs:{id:"bean-初始化前阶段"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#bean-初始化前阶段"}},[t._v("#")]),t._v(" Bean 初始化前阶段")]),t._v(" "),s("p",[s("strong",[t._v("BeanPostProcessor#postProcessBeforeInitialization")]),t._v("\n在Bean初始化之前需要调用的方法")]),t._v(" "),s("p",[s("strong",[t._v("生效类")])]),t._v(" "),s("p",[t._v("ApplicationContextAwareProcessor#postProcessBeforeInitialization：用来回调ApplicationContext相关的一些接口")]),t._v(" "),s("p",[t._v("ConfigurationClassPostProcessor.ImportAwareBeanPostProcessor#postProcessBeforeInitialization：用来支持ImportAware接口")]),t._v(" "),s("p",[t._v("CommonAnnotationBeanPostProcessor#postProcessBeforeInstantiation：执行@PostConstruct标注的方法")]),t._v(" "),s("p",[t._v("AutowiredAnnotationBeanPostProcessor#postProcessBeforeInstantiation：\nreturn null")]),t._v(" "),s("p",[t._v("ApplicationListenerDetector#postProcessBeforeInitialization：直接return bean，没有做任何操作")]),t._v(" "),s("p",[s("strong",[t._v("源码位置")]),t._v("\norg.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory#applyBeanPostProcessorsBeforeInitialization")]),t._v(" "),s("h4",{attrs:{id:"bean-初始化阶段"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#bean-初始化阶段"}},[t._v("#")]),t._v(" Bean 初始化阶段")]),t._v(" "),s("p",[t._v("依次调用如下方法：")]),t._v(" "),s("ol",[s("li",[t._v("@PostConstruct标注方法")]),t._v(" "),s("li",[t._v("实现InitializingBean接口的afterPropertiesSet()方法")]),t._v(" "),s("li",[t._v("自定义初始方法")])]),t._v(" "),s("p",[s("strong",[t._v("源码位置")]),t._v("\norg.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory#invokeInitMethods")]),t._v(" "),s("h4",{attrs:{id:"bean-初始化后阶段"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#bean-初始化后阶段"}},[t._v("#")]),t._v(" Bean 初始化后阶段")]),t._v(" "),s("p",[s("strong",[t._v("BeanPostProcessor#postProcessAfterInitialization")])]),t._v(" "),s("p",[s("strong",[t._v("生效类")]),t._v("\nAutowiredAnnotationBeanPostProcessor#postProcessBeforeInstantiation：return null\nCommonAnnotationBeanPostProcessor#postProcessBeforeInstantiation：在父类InitDestroyAnnotationBeanPostProcessor中有实现，return bean\n在Bean初始化之后需要调用的对象")]),t._v(" "),s("p",[s("strong",[t._v("源码位置")]),t._v("\norg.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory#applyBeanPostProcessorsAfterInitialization")]),t._v(" "),s("h4",{attrs:{id:"bean-初始化完成阶段"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#bean-初始化完成阶段"}},[t._v("#")]),t._v(" Bean 初始化完成阶段")]),t._v(" "),s("p",[t._v("SmartInitializingSingleton#afterSingletonsInstantiated\n启动阶段，初始化所有非延迟单例Bean完成后，会回调这个方法，只会回调一次")]),t._v(" "),s("p",[s("strong",[t._v("源码位置")]),t._v("\norg.springframework.beans.factory.support.DefaultListableBeanFactory#preInstantiateSingletons")]),t._v(" "),s("h4",{attrs:{id:"bean-销毁前阶段"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#bean-销毁前阶段"}},[t._v("#")]),t._v(" Bean 销毁前阶段")]),t._v(" "),s("p",[s("strong",[t._v("DestructionAwareBeanPostProcessor#postProcessBeforeDestruction")])]),t._v(" "),s("p",[t._v("实现DestructionAwareBeanPostProcessor接口的postProcessBeforeDestruction方法，添加自定义的逻辑，例如修改对象属性等")]),t._v(" "),s("p",[s("strong",[t._v("生效类")]),t._v("\nInitDestroyAnnotationBeanPostProcessor#postProcessBeforeDestruction（CommonAnnotationBeanPostProcessor的父类）：被@PreDestory标注方法标注的方法")]),t._v(" "),s("p",[t._v("源码位置：")]),t._v(" "),s("h4",{attrs:{id:"bean-销毁阶段"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#bean-销毁阶段"}},[t._v("#")]),t._v(" Bean 销毁阶段")]),t._v(" "),s("p",[t._v("依次调用如下方法：")]),t._v(" "),s("ol",[s("li",[t._v("@PreDestory标注方法")]),t._v(" "),s("li",[t._v("实现DisposableBean接口的destory()方法")]),t._v(" "),s("li",[t._v("自定义销毁方法")])]),t._v(" "),s("p",[t._v("源码位置：")]),t._v(" "),s("h2",{attrs:{id:"总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),s("p",[t._v("可以看到在整个Bean的生命周期中，各种BeanPostProcessor起了非常重要的作用，搞懂了这些BeanPostProcessor的实现，基本上就搞懂了Spring Bean的生命周期")]),t._v(" "),s("p",[t._v("不仅如此，BeanPostProcessor不仅在IOC上发挥了重要作用，在AOP上也发挥了重要的作用")]),t._v(" "),s("p",[t._v("最后总结一波流程图\n"),s("img",{attrs:{src:"https://img-blog.csdnimg.cn/20210527165808994.png?",alt:"在这里插入图片描述"}})]),t._v(" "),s("h2",{attrs:{id:"演示"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#演示"}},[t._v("#")]),t._v(" 演示")]),t._v(" "),s("p",[t._v("因为在Bean的生命周期中如下2个方法都有分支，我就演示一下这2个方法把\nInstantiationAwareBeanPostProcessor#postProcessBeforeInstantiation\nInstantiationAwareBeanPostProcessor#postProcessAfterInstantiation")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Data")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@ToString")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Animal")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Long")]),t._v(" speed"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Animal")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Animal 构造函数"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Data")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@ToString")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("User")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Long")]),t._v(" id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("User")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"User 构造函数"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("div",{staticClass:"language-xml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token prolog"}},[t._v('<?xml version="1.0" encoding="UTF-8"?>')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("beans")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("xmlns")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("http://www.springframework.org/schema/beans"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n       "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("xmlns:")]),t._v("context")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("http://www.springframework.org/schema/context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n       "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("xmlns:")]),t._v("xsi")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("http://www.w3.org/2001/XMLSchema-instance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n       "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("xsi:")]),t._v("schemaLocation")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("http://www.springframework.org/schema/beans\n        https://www.springframework.org/schema/beans/spring-beans.xsd\n        http://www.springframework.org/schema/context\n        https://www.springframework.org/schema/context/spring-context.xsd"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("bean")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("animal"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("com.javashitang.domain.Animal"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("property")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("value")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("小狗"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("property")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("speed"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("value")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("10"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("bean")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("bean")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("user"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("com.javashitang.domain.User"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("property")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("value")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("property")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("value")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("zhang"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("bean")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("bean")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("com.javashitang.MyInstantiationAwareBeanPostProcessor"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("context:")]),t._v("annotation-config")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("beans")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyInstantiationAwareBeanPostProcessor")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("implements")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("InstantiationAwareBeanPostProcessor")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n     * 实例化前阶段\n     * 返回为null，说明继续让spring创建bean\n     * 返回不为null，bean已经在这个方法中创建好了，不需要再进行后续的处理了\n     */")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("postProcessBeforeInstantiation")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Class")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" beanClass"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" beanName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BeansException")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ObjectUtils")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("nullSafeEquals")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"animal"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" beanName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Animal")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("equals")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("beanClass"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Animal")]),t._v(" animal "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Animal")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            animal"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"老虎"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            animal"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setSpeed")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100L")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" animal"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n     * 属性赋值前阶段\n     * bean已经被实例化，bean的属性还没有被设置，都是null\n     * 返回false，忽略属性值的设置\n     * 返回true，按照正常流程设置属性值\n     */")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("boolean")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("postProcessAfterInstantiation")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v(" bean"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" beanName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BeansException")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ObjectUtils")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("nullSafeEquals")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"user"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" beanName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("User")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("equals")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("bean"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getClass")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("User")]),t._v(" user "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("User")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" bean"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            user"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10L")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            user"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"li"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BeanLifecycleDemo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ClassPathXmlApplicationContext")]),t._v(" applicationContext "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ClassPathXmlApplicationContext")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" locations "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"bean-lifecycle-context.xml"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        applicationContext"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setConfigLocations")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("locations"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        applicationContext"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("refresh")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Animal")]),t._v(" animal "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" applicationContext"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getBean")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"animal"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Animal")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Animal(name=老虎, speed=100)")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("animal"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("User")]),t._v(" user "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" applicationContext"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getBean")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"user"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("User")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// User(id=10, name=li)")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("user"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        applicationContext"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("close")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("可以看到Animal对象和User对象返回的值并不是我在xml中配置的，而是在MyInstantiationAwareBeanPostProcessor接口中配置的")]),t._v(" "),s("p",[t._v("其他接口的使用你可以参考我github\nhttps://github.com/erlieStar/spring-learning（bean-lifecycle模块）")]),t._v(" "),s("h2",{attrs:{id:"参考博客"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参考博客"}},[t._v("#")]),t._v(" 参考博客")]),t._v(" "),s("p",[t._v("[1]https://mp.weixin.qq.com/s/gBr3UfC1HRcw4U-ZMmtRaQ\n循环依赖解决办法\n[0]https://juejin.im/post/5c98a7b4f265da60ee12e9b2\n好的博客\n[0]https://fangjian0423.github.io/2017/06/20/spring-bean-post-processor/\n大概流程\n[1]https://editor.csdn.net/md?articleId=104781542\n名词介绍\n[2]https://juejin.im/post/5da995d25188256a49204d7b\nMergedBeanDefinitionPostProcessor#postProcessMergedBeanDefinition的作用\n[3]https://www.cnblogs.com/elvinle/p/13371760.html\n[4]https://blog.csdn.net/luoyang_java/article/details/85709475\nAware接口的作用\n[5]https://blog.csdn.net/Bronze5/article/details/105902892\n循环依赖好文\n[6]https://zhuanlan.zhihu.com/p/157314153")])])}),[],!1,null,null,null);a.default=e.exports}}]);